OpenStack 새로운 버전 매기기 변경
########################################

:date: 2015-06-28 22:24
:category: Develop
:tags: openstack, versioning
:slug: openstack-새로운-버전-매기기-변경
:summary: OpenStack 버전 매기는 방법이 변경되었다. ``YEAR.N`` 에서 ``X.Y.Z`` 로..


Liberty 부터는 버전에 관련된 부분이 변경이 되었다. 이번에 Liberty-1 개발 마일스
톤 이메일 [1]_ 에서 보면 알 수 있다.

그리고 이것에 대한 자세한 내용은 `New OpenStack Component Versioning`_ 에서 확인
하면된다.

언제부터인가 OpenStack 버전은 ``YEAR.N`` 으로 버전을 진행하고 있었고,  Kilo의 경우도
2015.1로 넘어가고 있었다. 스위프트의 경우에는 다르게 ``X.Y.Z`` 버전으로 계속 발
표를 해오기도했다. (이건 Swift를 주도적으로 개발하고 있는 SwiftStack_ 이라는 회사
에서 관리하고 있는 부분이기도하다.)

``YEAR.N`` 형식으로 진행하면서 문제가 좀 있었나보다. 글을 읽어보면 백포트 하기도
쉽지 않고, 모든 프로젝트들이 정식 릴리즈 일시와 맞지 않으면 중간에 버전을 따로
해서 내놓고 전체 출시할때는 같은 방법으로 내고 해서 햇갈리는 부분도 있고 했던듯.

라이브러리가 릴리즈되면서 어떤게 어떤건지도 모르겠다는... 말도나온건가...

저번 벤쿠퍼 디자인 서밋에서 기본 이야기를 나누고 메일링까지 와서 이야기를 나눈후
이전에 발표된 버전을 통합하여 계산하는 것으로 했다고 한다.

Nova의 경우, 첫 Austin 부터 진행해왔으니 12.0.0. Bexar에서 추가된 Glance는
11.0.0. Diablo에서 추가된 Keystone, Horizon은 8.0.0.
(이해가 안되는건 왜 Cinder가... 8.0.0 인건지...;)

이렇게 바뀌면 혼란스런 부분이 있겠지만 장기적으로 본다면, 수정하거나 백포트하여
구성할때는 괜찮기도 하겠다는... 생각이 들기도한다. 그리고 년도 표기를 하지 않음
으로써 실제 서비스시 관련된 내용들을 모두 보여주지 않아도된다는 느낌도 없지 않아
있고...

그런데 이것보다 중요한건... 버전업을 6개월마다 하는 것보다는 조금 더 안정적인 버
전이나 LTS 버전같은게 나와줘야되지 않을까하는데... 뭐 이건 관련 내용을 찾으면 다
시 말을 해야겠다. 너부 빨리 바뀌는 부분들이 많아서 조직에 개발자가 없다면, 특히
나 우리나라 SI의 경우에는 대응하기가 쉽지 않아보인다.

.. _New OpenStack Component Versioning: http://ttx.re/new-versioning.html
.. _SwiftStack: https://swiftstack.com

.. [1] http://lists.openstack.org/pipermail/openstack-announce/2015-June/000391.html
