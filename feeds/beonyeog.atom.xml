<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>잘 밤에 쓸데없는 생각하기 - 번역</title><link href="https://ujuc.github.io/" rel="alternate"></link><link href="https://ujuc.github.io/feeds/beonyeog.atom.xml" rel="self"></link><id>https://ujuc.github.io/</id><updated>2019-03-23T17:00:00+09:00</updated><subtitle>Anythink, Everythink!</subtitle><entry><title>PSR-2: Coding Style Guide</title><link href="https://ujuc.github.io/2019/02/05/psr-2:_coding_style_guide/" rel="alternate"></link><published>2019-02-05T02:02:45+09:00</published><updated>2019-03-23T16:45:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2019-02-05:/2019/02/05/psr-2:_coding_style_guide/</id><summary type="html">&lt;p&gt;PSR-2, 코딩 스타일 가이드. PSR-1 내용에서 확장하여 정리하고 있다.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://www.php-fig.org/psr/psr-2/"&gt;PSR-2: Coding Style Guide - PHP-FIG&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;이 가이드는 기본 코딩 표준인 PSR-1을 확장하여 설명합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This guide extends and expands on &lt;a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-1-basic-coding-standard.md"&gt;PSR-1&lt;/a&gt;, the basic coding standard.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;이 가이드의 목표는 다른 개발자가 코드를 읽을 때, 인지 마찰을 줄이는 것입니다. 그 방법으로 PHP 코드 형식을 지정하는 방법에 대한 규칙과 예외 사항을 열거하는 것입니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The intent of this guide is to reduce cognitive friction when scanning code from different authors. It does so by enumerating a shared set of rules and expectations about how to format PHP code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;이 스타일 규칙들은 여러 커뮤니티 회원들의 프로젝트들 간의 공통점을 정리하였습니다. 다양한 개발자들이 여러 프로젝트에서 공통 작업을 할 때, 모든 프로젝트에서 사용하는 묶음 지침을 사용하는 것이 편합니다. 따라서 이 가이드의 좋은 점은 규칙 자체가 아니라 이 규칙들을 공유하는 것에 의의를 둡니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The style rules herein are derived from commonalities among the various member projects. When various authors collaborate across multiple projects, it helps to have one set of guidelines to be used among all those projects. Thus, the benefit of this guide is not in the rules themselves, but in the sharing of those rules.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;이 문서에서 사용하는 키워드 &amp;ldquo;MUST&amp;rdquo;, &amp;ldquo;MUST NOT&amp;rdquo;, &amp;ldquo;REQUIRED&amp;rdquo;, &amp;ldquo;SHALL&amp;rdquo;, &amp;ldquo;SHALL NOT&amp;rdquo;, &amp;ldquo;SHOULD&amp;rdquo;, &amp;ldquo;SHOULD NOT&amp;rdquo;, &amp;ldquo;RECOMMENDED&amp;rdquo;, &amp;ldquo;MAY&amp;rdquo;, &amp;ldquo;OPTIONAL&amp;rdquo;은 &lt;a href="https://techhtml.github.io/rfc/RFC2119.html"&gt;RFC 2119&lt;/a&gt;에서 설명하는 대로 해석한다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”,“SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in &lt;a href="http://www.ietf.org/rfc/rfc2119.txt"&gt;RFC 2119&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id="1"&gt;1. 개요&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[MUST] 코드는 PSR &amp;ldquo;코딩 스타일 가이드&amp;rdquo; [PSR-1]에 따릅니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Code MUST follow a “coding style guide” PSR [&lt;a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-1-basic-coding-standard.md"&gt;PSR-1&lt;/a&gt;].&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[MUST] 코드는 인던트를 스페이스 4를 사용합니다. 탭을 사용하지 않습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Code MUST use 4 spaces for indenting, not tabs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[MUST NOT] 줄 길이에 대한 엄격한 제한이 있어서는 안 됩니다; [MUST] 가벼운 제한은 반드시 120자여야 합니다; [SHOULD] 라인의 길이는 80자 이하여야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There MUST NOT be a hard limit on line length; the soft limit MUST be 120 characters; lines SHOULD be 80 characters or less.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[MUST] &lt;code&gt;namespace&lt;/code&gt; 선언 다음에는 빈 줄이 하나 있어야 합니다; [MUST] &lt;code&gt;use&lt;/code&gt; 선언한 블록 다음에는 빈 줄이 하나 있어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There MUST be one blank line after the &lt;code&gt;namespace&lt;/code&gt; declaration, and there MUST be one blank line after the block of &lt;code&gt;use&lt;/code&gt; declarations.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[MUST] 클래스 여는 중괄호는 반드시 다음 줄로 가야 합니다; [MUST] 닫는 중괄호는 본문 뒤에 오는 다음 줄로 가야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Opening braces for classes MUST go on the next line, and closing braces MUST go on the next line after the body.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[MUST] 메서드를 여는 중괄호는 반드시 다음 줄로 가야 합니다; [MUST] 닫는 중괄호는 반드시 본문 맨 끝에서 다음 줄로 가야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Opening braces for methods MUST go on the next line, and closing braces MUST go on the next line after the body.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[MUST] 가시성 (Visibility)는 모든 속성과 메서드에서 반드시 선언되어야 합니다; [MUST] &lt;code&gt;abstract&lt;/code&gt; 와 &lt;code&gt;final&lt;/code&gt; 은 가시성 이전에 반드시 선언되어야 합니다; [MUST] &lt;code&gt;static&lt;/code&gt; 은 반드시 가시성 뒤에 선언되어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Visibility MUST be declared on all properties and methods; &lt;code&gt;abstract&lt;/code&gt; and &lt;code&gt;final&lt;/code&gt; MUST be declared before the visibility; &lt;code&gt;static&lt;/code&gt; MUST be declared after the visibility.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[MUST] 제어 구조 키워드 뒤에는 반드시 공백을 가져야 합니다; [MUST NOT] 메서드와 펑션 사용할 때는 공백을 추가해서는 안됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Control structure keywords MUST have one space after them; method and function calls MUST NOT.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[MUST] 제어 구조에서 여는 중괄호는 반드시 같은 줄에 있어야 합니다. [MUST] 닫는 괄호는 반드시 본문 뒤의 다음 줄로 가야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Opening braces for control structures MUST go on the same line, and closing braces MUST go on the next line after the body.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[MUST NOT] 제어 구조에서 여는 괄호 뒤에는 공백이 없어야 합니다. [MUST NOT] 제어 구조에서 닫는 괄호 전에는 공백이 없어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Opening parentheses for control structures MUST NOT have a space after them, and closing parentheses for control structures MUST NOT have a space before.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="11"&gt;1.1 예제&lt;/h2&gt;
&lt;p&gt;아래의 예는 위의 규칙 중 일부를 간략하게 설명합니다:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This example encompasses some of the rules below as a quick overview:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nx"&gt;Vendor\Package&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nx"&gt;FooInterface&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nx"&gt;BarClass&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nx"&gt;OtherVendor\OtherPackage\BazClass&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Foo&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Bar&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;FooInterface&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;sampleMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$foo&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arg1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;BazClass&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arg2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$arg3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;final&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// method body&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id="2"&gt;2. 일반적인 것들&lt;/h1&gt;
&lt;h2 id="21"&gt;2.1. 기본 코딩 표준&lt;/h2&gt;
&lt;p&gt;[MUST] 코드는 반드시 &lt;a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-1-basic-coding-standard.md"&gt;PSR-1&lt;/a&gt;에 표기된 모든 규칙을 따라야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Code MUST follow all rules outlined in &lt;a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-1-basic-coding-standard.md"&gt;PSR-1&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="22"&gt;2.2. 파일&lt;/h2&gt;
&lt;p&gt;[MUST] 모든 PHP 파일은 반드시 Unix LF (linefeed) 줄 끝 문자를 사용해야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;All PHP files MUST use the Unix LF (linefeed) line ending.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST] 모든 PHP 파일은 반드시 하나의 빈 줄로 끝나야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;All PHP files MUST end with a single blank line.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST] 닫는 태그인 &lt;code&gt;?&amp;gt;&lt;/code&gt; 태그는 PHP만 포함된 파일에서는 생각해야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The closing &lt;code&gt;?&amp;gt;&lt;/code&gt; tag MUST be omitted from files containing only PHP.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="23"&gt;2.3. 줄&lt;/h2&gt;
&lt;p&gt;[MUST NOT] 라인 길이에는 엄격한 제한이 있어서는 안 됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There MUST NOT be a hard limit on line length.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST] 줄 길이에 대한 가벼운 제한은 120자입니다; [MUST] 자동화된 스타일 체커는 반드시 경고해야 합니다만 [MUST NOT] 가벼운 제한을 오류로 표현해서는 안됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The soft limit on line length MUST be 120 characters; automated style checkers MUST warn but MUST NOT error at the soft limit.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[SHOLD NOT] 행은 80자를 넘지 않아야 합니다; [SHOULD] 그보다 긴 행은 각각 80자 이하의 여러 행으로 나눠야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lines SHOULD NOT be longer than 80 characters; lines longer than that SHOULD be split into multiple subsequent lines of no more than 80 characters each.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST NOT] 비어 있지 않은 줄 끝에는 공백 문자가 없어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There MUST NOT be trailing whitespace at the end of non-blank lines.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MAY] 가독성을 높이고 관련 코드 블록을 나타내기 위해 빈 줄을 추가할 수 있습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Blank lines MAY be added to improve readability and to indicate related blocks of code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST NOT] 한 줄에 하나 이상의 문장이 있어서는 안 됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There MUST NOT be more than one statement per line.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="24"&gt;2.4. 들여쓰기&lt;/h2&gt;
&lt;p&gt;[MUST] 코드는 반드시 4개의 스페이스로 들여 쓰기를 허용해야 하며, [MUST NOT] 들여 쓰기에 탭을 사용하지 않아야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Code MUST use an indent of 4 spaces, and MUST NOT use tabs for indenting.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;주의하세요: 탭과 스페이스를 섞어 쓰지 않고 스페이스만 사용한다면, diff, 패치, 이력, 주석에서 발생하는 문제를 피할 수 있습니다. 스페이스를 이용하면 행간 정렬을 위해 세분화된 하위 들여 쓰기를 쉽게 추가할 수 있습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;N.b.: Using only spaces, and not mixing spaces with tabs, helps to avoid problems with diffs, patches, history, and annotations. The use of spaces also makes it easy to insert fine-grained sub-indentation for inter-line alignment.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="25-truefalsenull"&gt;2.5. 키워드와 True/False/Null&lt;/h2&gt;
&lt;p&gt;[MUST] PHP &lt;a href="http://php.net/manual/en/reserved.keywords.php"&gt;키워드&lt;/a&gt;는 반드시 소문자로 표기합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PHP &lt;a href="http://php.net/manual/en/reserved.keywords.php"&gt;keywords&lt;/a&gt; MUST be in lower case.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST] PHP 상수인 &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; 은 반드시 소문자로 표기합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The PHP constants &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, and &lt;code&gt;null&lt;/code&gt; MUST be in lower case.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id="3-namespace"&gt;3. Namespace와 사용 선언&lt;/h1&gt;
&lt;p&gt;[MUST] Namespace가 존재하는 경우, &lt;code&gt;namespace&lt;/code&gt; 정의된 다음에 한 줄은 비워 둬야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When present, there MUST be one blank line after the &lt;code&gt;namespace&lt;/code&gt; declaration.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST] Namespace가 존재하는 경우, &lt;code&gt;namespace&lt;/code&gt; 정의된 이후 라인에 모든 &lt;code&gt;use&lt;/code&gt; 가 정의되어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When present, all &lt;code&gt;use&lt;/code&gt; declarations MUST go after the &lt;code&gt;namespace&lt;/code&gt; declaration.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST] &lt;code&gt;use&lt;/code&gt; 키워드는 정의마다 하나씩 있어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There MUST be one &lt;code&gt;use&lt;/code&gt; keyword per declaration.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST] &lt;code&gt;use&lt;/code&gt; 블록 다음에 한 줄을 비워 둬야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There MUST be one blank line after the &lt;code&gt;use&lt;/code&gt; block.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;예를 들어:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;namesapce&lt;/span&gt; &lt;span class="nx"&gt;Vender\Package&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nx"&gt;FooClass&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nx"&gt;BarClass&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nx"&gt;OhterVender\OtherPackage\BazClass&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// ... additinal PHP code ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id="4"&gt;4. 클래스, 속성, 메서드&lt;/h1&gt;
&lt;p&gt;&amp;ldquo;class&amp;rdquo;라는 용어는 모든 클래스, 인터페이스, 특성을 나타냅니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The term “class” refers to all classes, interfaces, and traits.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="41"&gt;4.1. 확장과 구현&lt;/h2&gt;
&lt;p&gt;[MUST] &lt;code&gt;extends&lt;/code&gt; 와 &lt;code&gt;implements&lt;/code&gt; 키워드는 클래스 이름과 같은 줄에서 선언되어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;extends&lt;/code&gt; and &lt;code&gt;implements&lt;/code&gt; keywords MUST be declared on the same line as the class name.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST] 해당 클래스를 여는 중괄호는 홀로 다음 줄에 있어야 합니다; [MUST] 클래스 닫는 중괄호는 본문 끝 다음 줄에 있어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The opening brace for the class MUST go on its own line; the closing brace for the class MUST go on the next line after the body.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nx"&gt;Vendor\Package&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nx"&gt;FooClass&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nx"&gt;BarClass&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nx"&gt;OtherVendor\OtherPackage\BazClass&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ClassName&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;ParentClass&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;\ArrayAccess&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;\Countable&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// constants, properties, methods&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;[MAY] &lt;code&gt;implements&lt;/code&gt; 목록은 여러 줄에 걸쳐 나눠질 수 있으며, 각 줄은 한 번만 들여 써질 수 있습니다. [MUST] 그렇게 표현할 때, 목록의 첫 번째 항목은 다음 줄에 있어야 하며, [MUST] 한 줄에 하나의 인터페이스만 있어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lists of &lt;code&gt;implements&lt;/code&gt; MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one interface per line.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nx"&gt;Vendor\Package&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nx"&gt;FooClass&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nx"&gt;BarClass&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nx"&gt;OtherVendor\OtherPackage\BazClass&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ClassName&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;ParentClass&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt;&lt;span class="nx"&gt;\ArrayAccess&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;\Countable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;\Serializable&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// constants, properties, methods&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="42"&gt;4.2. 속성&lt;/h2&gt;
&lt;p&gt;[MUST] 모든 속성에서 가시성을 반드시 선언해야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Visibility MUST be declared on all properties.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST NOT] 속성을 선언하는데 &lt;code&gt;var&lt;/code&gt; 키워드를 사용하면 안 됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;var&lt;/code&gt; keyword MUST NOT be used to declare a property.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST NOT] 명령문마다 하나 이상의 속성이 선언해서는 안 됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There MUST NOT be more than one property declared per statement.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[SHOULD NOT] protected 나 private 가시성을 나타내기 위해 &lt;code&gt;_&lt;/code&gt; 로 속성 이름을 시작하면 안 됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Property names SHOULD NOT be prefixed with a single underscore to indicate protected or private visibility.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;속성 선언은 다음과 같습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A property declaration looks like the following.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nx"&gt;Vendor\Package&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ClassName&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="43"&gt;4.3. 메서드&lt;/h2&gt;
&lt;p&gt;[MUST] 모든 메서드는 가시성을 선언해야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Visibility MUST be declared on all methods.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[SHOULD NOT] protected 나 private 가시성을 나타내기 위해 &lt;code&gt;_&lt;/code&gt; 로 메서드 이름을 시작하면 안 됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Method names SHOULD NOT be prefixed with a single underscore to indicate protected or private visibility.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST NOT] 메서드 이름 뒤에 스페이스를 추가해서는 안 됩니다. [MUST] 여는 중괄호는 반드시 메서드 선언 다음 줄에 있어야 하고, [MUST] 닫는 중괄호는 그 다음 줄에 있어야 합니다. [MUST NOT] 여는 중괄호 뒤에 스페이스가 있어서 안되며, [MUST NOT] 닫는 괄호 앞에 스페이스가 있어서는 안됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Method names MUST NOT be declared with a space after the method name. The opening brace MUST go on its own line, and the closing brace MUST go on the next line following the body. There MUST NOT be a space after the opening parenthesis, and there MUST NOT be a space before the closing parenthesis.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;메서드 선언은 다음과 같습니다. 괄호, 쉼표, 스페이스, 중괄호의 배치에 조심해서 사용합니다:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A method declaration looks like the following. Note the placement of parentheses, commas, spaces, and braces:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nx"&gt;Vendor\Package&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ClassName&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;fooBarBaz&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arg1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;$arg2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$arg3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// method body&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="44"&gt;4.4. 메서드 인수&lt;/h2&gt;
&lt;p&gt;인수 목록에서는 [MUST NOT] 쉼표 앞에 공백이 있으면 됩니다. [MUST]  쉼표 뒤에 공백을 두어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the argument list, there MUST NOT be a space before each comma, and there MUST be one space after each comma.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST] 기본 값을 가진 메서드 인수는 인수 목록의 마지막에 위치해야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Method arguments with default values MUST go at the end of the argument list.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nx"&gt;Vendor\Package&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ClassName&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arg1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;$arg2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$arg3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// method body&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;[MAY] 인수 목록은 여러 줄에 걸쳐 나눌 수 있으며, 각 줄은 한 번만 들여 쓰기 할 수 있습니다. [MUST] 여러 줄로 나눠 표기할 때는 첫 번째 항목은 다음 줄에 있어야 합니다. [MUST] 한 줄에 하나의 인수만 있어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Argument lists MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one argument per line.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST] 인수 목록이 여러 줄에 걸쳐 분할되어 있으면, 닫는 괄호와 여는 괄호는 스페이스 하나로 하나의 라인에 같이 있어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When the argument list is split across multiple lines, the closing parenthesis and opening brace MUST be placed together on their own line with one space between them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nx"&gt;Vendor\Package&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ClassName&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;aVeryLongMethodName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;ClassTypeHint&lt;/span&gt; &lt;span class="nv"&gt;$arg1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;$arg2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="k"&gt;array&lt;/span&gt; &lt;span class="nv"&gt;$arg3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// method body&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="45-abstract-final-static"&gt;4.5. abstract, final, static&lt;/h2&gt;
&lt;p&gt;[MUST] &lt;code&gt;abstract&lt;/code&gt; 와 &lt;code&gt;final&lt;/code&gt; 선언은 가시성 선언 앞에 와야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When present, the &lt;code&gt;abstract&lt;/code&gt; and &lt;code&gt;final&lt;/code&gt; declarations MUST precede the visibility declaration.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST] &lt;code&gt;static&lt;/code&gt; 선언은 가시성 선언 뒤에 와야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When present, the &lt;code&gt;static&lt;/code&gt; declaration MUST come after the visibility declaration.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nx"&gt;Vendor\Package&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;abstract&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ClassName&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="nv"&gt;$foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;abstract&lt;/span&gt; &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;zim&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;final&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// method body&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="46"&gt;4.6. 메서드와 펑션 사용&lt;/h2&gt;
&lt;p&gt;[MUST NOT] 메서드나 함수 호출을 할 경우, 메서드 상에 공백이 없어야 합니다. 또는 [MUST NOT] 함수 이름과 여는 괄호 뒤에는 공백이 있어서는 안 됩니다. 그리고 [MUST NOT] 닫는 괄호 앞에는 공백이 없어야 합니다. [MUST NOT] 인수 목록에는 쉼표 앞에 공백이 있어서 안되며, [MUST] 쉼표 뒤에 공백이 와야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When making a method or function call, there MUST NOT be a space between the method or function name and the opening parenthesis, there MUST NOT be a space after the opening parenthesis, and there MUST NOT be a space before the closing parenthesis. In the argument list, there MUST NOT be a space before each comma, and there MUST be one space after each comma.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$foo&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arg1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;Foo&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arg2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$arg3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;[MAY] 인수 목록은 여러 줄에 걸쳐 나눠질 수 있으며, 각 줄은 한번 들여 쓰일 수 있습니다. [MUST] 이렇게 할&lt;br&gt;
 때 목록의 첫 번째 항목은 다음 줄에 있어야 합니다. [MUST] 한 줄에 하나의 인수만 있어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Argument lists MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one argument per line.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$foo&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;$longArgument&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$longerArgument&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$muchLongerArgument&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id="5"&gt;5. 제어문&lt;/h1&gt;
&lt;p&gt;제어문에 대한 일반적인 스타일 규칙은 다음과 같습니다:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The general style rules for control structures are as follows:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[MUST] 제어문 키워드 다음에 스페이스가 하나 있어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There MUST be one space after the control structure keyword&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[MUST NOT] 여는 괄호 뒤에 스페이스가 있어서는 안 됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There MUST NOT be a space after the opening parenthesis&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[MUST NOT] 닫는 괄호 앞에 스페이스가 있어서는 안 됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There MUST NOT be a space before the closing parenthesis&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[MUST] 닫는 괄호와 여는 중괄호 사이에 스페이스가 하나 있어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There MUST be one space between the closing parenthesis and the opening brace&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[MUST] 제어문 내부는 반드시 한번 들여 쓰기 해야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The structure body MUST be indented once&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[MUST] 닫는 중괄호는 제어문이 끝나는 다음 줄에 있어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The closing brace MUST be on the next line after the body&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[MUST] 제어문 본체는 중괄호로 묶어야 합니다. 중괄호를 이용하여 제어문이 어떻게 보여줄지를 표준화하고, 개행이 되었을 때, 오류가 발생할 가능성을 줄여 줍니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The body of each structure MUST be enclosed by braces. This standardizes how the structures look, and reduces the likelihood of introducing errors as new lines get added to the body.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="51-if-elseif-else"&gt;5.1. if, elseif, else&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;if&lt;/code&gt; 문 구조는 다음과 같습니다. 괄호, 공백, 중괄호의 위치를 유의해서 보시길 바랍니다. &lt;code&gt;else&lt;/code&gt; 와 &lt;code&gt;elseif&lt;/code&gt; 는 이전 문구의 닫는 중괄호와 같은 줄에 있습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An &lt;code&gt;if&lt;/code&gt; structure looks like the following. Note the placement of parentheses, spaces, and braces; and that &lt;code&gt;else&lt;/code&gt; and &lt;code&gt;elseif&lt;/code&gt; are on the same line as the closing brace from the earlier body.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$expr1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// if body&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$expr2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// elseif body&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// else body;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;[SHOULD] &lt;code&gt;else if&lt;/code&gt; 대신 &lt;code&gt;elseif&lt;/code&gt; 키워드를 사용하여 모든 제어 키워드가 단일 단어처럼 보이도록 해야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The keyword &lt;code&gt;elseif&lt;/code&gt; SHOULD be used instead of &lt;code&gt;else if&lt;/code&gt; so that all control keywords look like single words.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="52-switch-case"&gt;5.2. switch, case&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;switch&lt;/code&gt; 문의 구조는 다음과 같습니다. 괄호, 공백, 중괄호의 위치를 유의해서 보시길 바랍니다. [MUST] &lt;code&gt;case&lt;/code&gt; 문은 &lt;code&gt;switch&lt;/code&gt; 보다 한번 들여 쓰기가 되어야 합니다. [MUST] &lt;code&gt;break&lt;/code&gt; 키워드 (또는 다른 종료 키워드)는 &lt;code&gt;case&lt;/code&gt; 문과 같은 수준에서 들여 쓰기가 되어야 합니다. [MUST] 비어 있지 않은 &lt;code&gt;case&lt;/code&gt; 문에서 다음 문으로 넘어가야 될 경우, &lt;code&gt;// no break&lt;/code&gt; 와 같은 주석이 있어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A &lt;code&gt;switch&lt;/code&gt; structure looks like the following. Note the placement of parentheses, spaces, and braces. The &lt;code&gt;case&lt;/code&gt; statement MUST be indented once from &lt;code&gt;switch&lt;/code&gt;, and the &lt;code&gt;break&lt;/code&gt; keyword (or other terminating keyword) MUST be indented at the same level as the &lt;code&gt;case&lt;/code&gt; body. There MUST be a comment such as &lt;code&gt;// no break&lt;/code&gt; when fall-through is intentional in a non-empty &lt;code&gt;case&lt;/code&gt; body.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$expr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;First case, with a break&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Second case, which falls through&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c1"&gt;// no break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Third case, return instead of break&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Default case&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="53-while-do-while"&gt;&lt;strong&gt;5.3. while, do while&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;while&lt;/code&gt; 문은 다음과 같습니다. 괄호, 공백, 중괄호의 위치를 유의해서 보시길 바랍니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A &lt;code&gt;while&lt;/code&gt; statement looks like the following. Note the placement of parentheses, spaces, and braces.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$expr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// structure body&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;마찬가지로 &lt;code&gt;do while&lt;/code&gt; 문은 다음과 같습니다. 괄호, 공백, 중괄호의 위치를 유의해서 보시길 바랍니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Similarly, a &lt;code&gt;do while&lt;/code&gt; statement looks like the following. Note the placement of parentheses, spaces, and braces.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// structure body;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$expr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="54-for"&gt;&lt;strong&gt;5.4. for&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;for&lt;/code&gt; 문은 다음과 같습니다. 괄호, 공백, 중괄호의 위치를 유의해서 보시길 바랍니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A &lt;code&gt;for&lt;/code&gt; statement looks like the following. Note the placement of parentheses, spaces, and braces.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// for body&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="55-foreach"&gt;&lt;strong&gt;5.5. foreach&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;foreach&lt;/code&gt; 문은 다음과 같습니다. 괄호, 공백, 중괄호의 위치를 유의해서 보시길 바랍니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A &lt;code&gt;foreach&lt;/code&gt; statement looks like the following. Note the placement of parentheses, spaces, and braces.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$iterable&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// foreach body&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="56-try-catch"&gt;&lt;strong&gt;5.6. try, catch&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;try catch&lt;/code&gt; 블록은 다음과 같습니다. 괄호, 공백, 중괄호의 위치를 유의해서 보시길 바랍니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A &lt;code&gt;try catch&lt;/code&gt; block looks like the following. Note the placement of parentheses, spaces, and braces.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// try body&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;FirstExceptionType&lt;/span&gt; &lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// catch body&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;OtherExceptionType&lt;/span&gt; &lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// catch body&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id="6-closures"&gt;6. Closures&lt;/h1&gt;
&lt;p&gt;[MUST] 클로저는 &lt;code&gt;function&lt;/code&gt; 키워드 뒤에 공백과 &lt;code&gt;use&lt;/code&gt; 키워드 앞뒤 공백으로 선언해야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Closures MUST be declared with a space after the &lt;code&gt;function&lt;/code&gt; keyword, and a space before and after the &lt;code&gt;use&lt;/code&gt; keyword.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST] 여는 중괄호는 반드시 같은 줄에 있어야 하며, [MUST] 닫는 중괄호는 반드시 그다음 줄에 있어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The opening brace MUST go on the same line, and the closing brace MUST go on the next line following the body.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST NOT] 인수 목록이나 변수 목록에서의 여는 괄호 뒤에는 공백이 있어서는 안 되며, [MUST NOT] 닫는 괄호 앞에서도 공백이 있어서는 안 됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There MUST NOT be a space after the opening parenthesis of the argument list or variable list, and there MUST NOT be a space before the closing parenthesis of the argument list or variable list.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST NOT] 인수 목록과 변수 목록에 있는 쉼표 앞에는 스페이스가 있어서는 안되며, [MUST] 쉼표 뒤에 스페이스가 들어가야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the argument list and variable list, there MUST NOT be a space before each comma, and there MUST be one space after each comma.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST] 기본 값을 가진 클로저 인수는 인수 목록의 끝에 와야합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Closure arguments with default values MUST go at the end of the argument list.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;클로저는 다음과 같습니다. 괄호, 공백, 중괄호의 위치를 유의해서 보시길 바랍니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A closure declaration looks like the following. Note the placement of parentheses, commas, spaces, and braces:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$closureWithArgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arg1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$arg2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// body&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nv"&gt;$closureWithArgsAndVars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arg1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$arg2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$var1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$var2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// body&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;[MAY] 인수 목록과 변수 목록은 여러 행에 걸쳐 나눠질 수 있습니다. (각 행은 한번 들여 쓰기가 들어가야 합니다.) 그렇게 할때, [MUST] 목록의 첫 번째 항목은 다음 줄에 있어야 하며, [MUST] 한 줄에 하나의 인수나 변수만 있어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Argument lists and variable lists MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one argument or variable per line.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST] (인수이거나 변수일때) 마지막 리스트가 여러 줄로 나눠질 경우, 닫는 괄호와 여는 중괄호는 같은 줄에 공백으로 나눠져 있어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When the ending list (whether of arguments or variables) is split across multiple lines, the closing parenthesis and opening brace MUST be placed together on their own line with one space between them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;다음은 인수 목록이 있거나 없는 클로저의 예와 여러 줄로 표현된 변수 목록에 대한 예제입니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The following are examples of closures with and without argument lists and variable lists split across multiple lines.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$longArgs_noVars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;$longArgument&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$longerArgument&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$muchLongerArgument&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// body&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nv"&gt;$noArgs_longVars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;$longVar1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$longerVar2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$muchLongerVar3&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// body&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nv"&gt;$longArgs_longVars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;$longArgument&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$longerArgument&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$muchLongerArgument&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;$longVar1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$longerVar2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$muchLongerVar3&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// body&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nv"&gt;$longArgs_shortVars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;$longArgument&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$longerArgument&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$muchLongerArgument&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$var1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// body&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nv"&gt;$shortArgs_longVars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;$longVar1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$longerVar2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$muchLongerVar3&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// body&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;형식 지정 규칙은 함수 또는 메서드 호출에서 클로저가 직접 인수로 사용될 때에도 적용됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that the formatting rules also apply when the closure is used directly in a function or method call as an argument.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$foo&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;$arg1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arg2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$var1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// body&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nv"&gt;$arg3&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id="7-conclusion"&gt;7. Conclusion&lt;/h1&gt;
&lt;p&gt;이 가이드에서 의도적으로 생략한 스타일과 연습해야 될 많은 요소들이 있습니다. 다음 내용들이 포함되지만 이 내용에 국한되지 않습니다:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There are many elements of style and practice intentionally omitted by this guide. These include but are not limited to:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;전역 변수, 전역 상수 선언&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Declaration of global variables and global constants&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;함수 선언&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Declaration of functions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;연산자와 할당자&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Operators and assignment&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;라인간 정렬&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Inter-line alignment&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;주석과 문서 블록&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Comments and documentation blocks&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;클래스 이름 접두사와 접미사&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Class name prefixes and suffixes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;모범 사례&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Best practices&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[MAY] 향후 권장 사항은 스타일이나 연습해야 될 많은 요소들을 다루기 위해 이 가이드를 수정하고 확장할 수 있습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future recommendations MAY revise and extend this guide to address those or other elements of style and practice.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="번역"></category><category term="php"></category><category term="psr"></category><category term="prs-2"></category><category term="transelate"></category></entry><entry><title>PSR-1: Basic Coding Standard</title><link href="https://ujuc.github.io/2018/11/17/psr-1:_basic_coding_standard/" rel="alternate"></link><published>2018-11-17T12:11:55+09:00</published><updated>2019-03-22T16:50:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2018-11-17:/2018/11/17/psr-1:_basic_coding_standard/</id><summary type="html">&lt;p&gt;PSR-1, 기본 코딩 표준 번역&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://www.php-fig.org/psr/psr-1/"&gt;PSR-1: Basic Coding Standard - PHP-FIG&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;이 표준에 대한 섹션은 공유하는 PHP 코드 간의 높은 수준의 기술적인 상호 운용성을 보장하기 위해 표준 코딩 요소로 간주되어야 하는 것에 대해서 설명합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This section of the standard comprises what should be considered the standard coding elements that are required to ensure a high level of technical interoperability between shared PHP code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;이 문서에서 사용하는 키워드 &amp;ldquo;MUST&amp;rdquo;, &amp;ldquo;MUST NOT&amp;rdquo;, &amp;ldquo;REQUIRED&amp;rdquo;, &amp;ldquo;SHALL&amp;rdquo;, &amp;ldquo;SHALL NOT&amp;rdquo;, &amp;ldquo;SHOULD&amp;rdquo;, &amp;ldquo;SHOULD NOT&amp;rdquo;, &amp;ldquo;RECOMMENDED&amp;rdquo;, &amp;ldquo;MAY&amp;rdquo;, &amp;ldquo;OPTIONAL&amp;rdquo;은 &lt;a href="https://techhtml.github.io/rfc/RFC2119.html"&gt;RFC 2119&lt;/a&gt;에서 설명하는 대로 해석한다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”,“SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in &lt;a href="http://www.ietf.org/rfc/rfc2119.txt"&gt;RFC 2119&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="1"&gt;1. 개요&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[MUST] 파일은 &lt;code&gt;&amp;lt;?php&lt;/code&gt; 와 &lt;code&gt;&amp;lt;?=&lt;/code&gt; 태그만 사용해야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Files MUST use only &lt;code&gt;&amp;lt;?php&lt;/code&gt; and &lt;code&gt;&amp;lt;?=&lt;/code&gt; tags.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[MUST] 파일은 PHP 코드에 BOM 없이 UTF-8만 사용해야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Files MUST use only UTF-8 without BOM for PHP code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[SHOULD] 파일에는 심벌 (classes, functions, constants, 등)을 선언&lt;em&gt;하거나&lt;/em&gt; 사이드 이펙트 (예, 출력 생성, .ini 설정 변경, 등)을 발생시키는 작업 중 하나만 하여야 합니다. [SHOULD NOT] 둘이 같이 선언되면 안됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Files SHOULD &lt;em&gt;either&lt;/em&gt; declare symbols (classes, functions, constants, etc.) &lt;em&gt;or&lt;/em&gt; cause side-effects (e.g. generate output, change .ini settings, etc.) but SHOULD NOT do both.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[MUST] Namespaces와 classes는 반드시 &amp;ldquo;autoloading&amp;rdquo; 해야 합니다. PSR: [&lt;a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md"&gt;~~PSR-0~~&lt;/a&gt;, &lt;a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md"&gt;PSR-4&lt;/a&gt;]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Namespaces and classes MUST follow an “autoloading” PSR: [&lt;a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md"&gt;PSR-0&lt;/a&gt;, &lt;a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md"&gt;PSR-4&lt;/a&gt;].&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[MUST] 클레스 이름은 반드시 &lt;code&gt;StudlyCaps&lt;/code&gt; 로 선언되어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Class names MUST be declared in &lt;code&gt;StudlyCaps&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[MUST] 클래스 상수는 모두 대문자로 밑줄 구분 기호로 선언해야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Class constants MUST be declared in all upper case with underscore separators.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[MUST] 메소드 이름은 &lt;code&gt;camelCase&lt;/code&gt; 로 선언되어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Method names MUST be declared in &lt;code&gt;camelCase&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="2"&gt;2. 파일&lt;/h2&gt;
&lt;h3 id="21-php"&gt;2.1. PHP 태그&lt;/h3&gt;
&lt;p&gt;[MUST] PHP 코드는 긴 태그인 &lt;code&gt;&amp;lt;?php ?&amp;gt;&lt;/code&gt; 또는 짧은 에코 태그 &lt;code&gt;&amp;lt;?= ?&amp;gt;&lt;/code&gt; 를 사용해야 합니다. 다른 태그 변형을 사용해서는 안됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PHP code MUST use the long &lt;code&gt;&amp;lt;?php ?&amp;gt;&lt;/code&gt; tags or the short-echo &lt;code&gt;&amp;lt;?= ?&amp;gt;&lt;/code&gt; tags; it MUST NOT use the other tag variations.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="22"&gt;2.2 문자 인코딩&lt;/h3&gt;
&lt;p&gt;[MUST] PHP 코드는 &lt;a href="https://ko.wikipedia.org/wiki/%EB%B0%94%EC%9D%B4%ED%8A%B8_%EC%88%9C%EC%84%9C_%ED%91%9C%EC%8B%9D"&gt;BOM(Byte Order Mark)&lt;/a&gt; 없이 UTF-8 만 사용해야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PHP code MUST use only UTF-8 without BOM.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="23-side-effects"&gt;2.3 부작용 (Side Effects)&lt;/h3&gt;
&lt;p&gt;[SHOULD] 파일은 새로운 심벌 (클래스, 함수, 상수 등)을 선언하고 다른 사이드 이펙트를 일으키지 않아야 합니다. [SHOULD] 또는 파일에서 사이트 이펙트를 줄 수 있는 로직이 포함될 수 있습니다. [SHOULD NOT] 그러나 이 두 가지가 모두 발생하지 않아야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A file SHOULD declare new symbols (classes, functions, constants,etc.) and cause no other side effects, or it SHOULD execute logic with side effects, but SHOULD NOT do both.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ldquo;Side effects&amp;rdquo; 라는 말은 클래스, 함수, 상수 등을 선언하는 것과 직접적으로 관련없는 로직 실행을 &lt;em&gt;단지 파일에 포함하는 것&lt;/em&gt;을 의미 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The phrase “side effects” means execution of logic not directly related to declaring classes, functions, constants, etc., &lt;em&gt;merely from including the file&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ldquo;Side effects&amp;rdquo;에는 다음 내용들이 포함되지만 이것만 있는 것은 아닙니다: 출력 생성, &lt;code&gt;require&lt;/code&gt; 또는 &lt;code&gt;include&lt;/code&gt; 의 명시적 사용, 외부 서비스 연결, ini 설정 수정, 에러 출력 또는 예외, 전역 또는 정적 변수 수정, 파일 읽기나 쓰기 등등&amp;hellip;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Side effects” include but are not limited to: generating output, explicit use of &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;include&lt;/code&gt;, connecting to external services, modifying ini settings, emitting errors or exceptions, modifying global or static variables,reading from or writing to a file, and so on.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;다음은 부작용이 모두 포함된 코드의 예입니다. 즉, 피해야 할 예:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The following is an example of a file with both declarations and side effects;i.e, an example of what to avoid:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// side effect: change ini settings&lt;/span&gt;
&lt;span class="nb"&gt;ini_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;error_reporting&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;E_ALL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// side effect: loads a file&lt;/span&gt;
&lt;span class="k"&gt;include&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;file.php&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// side effect: generates output&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;html&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// declaration&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// function body&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;다음 예제는 부작용이 없는 내용이 포함된 코드의 예입니다. 즉, 참고해야 할 예:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The following example is of a file that contains declarations without side effects; i.e., an example of what to emulate:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// declaration&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="c1"&gt;// function body&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// conditional declaration is *not* a side effect&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;function_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="c1"&gt;// function body&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="3-namespace"&gt;3. 네임스페이스(Namespace)와 클래스 이름&lt;/h2&gt;
&lt;p&gt;[MUST] 네임스페이스와 클래스는 반드시 &amp;ldquo;autoloading&amp;rdquo; PSR 문서에 따라야 합니다: [&lt;a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md"&gt;PSR-0&lt;/a&gt;, &lt;a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md"&gt;PSR-4&lt;/a&gt;]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Namespaces and classes MUST follow an “autoloading” PSR: [&lt;a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md"&gt;PSR-0&lt;/a&gt;, &lt;a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md"&gt;PSR-4&lt;/a&gt;].&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;각 클래스는 하나의 파일에 있으며, 최상위 벤더 이름인 네임스페이스가 있어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This means each class is in a file by itself, and is in a namespace of at least one level: a top-level vendor name.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST] 클래스 이름은 반드시 &lt;code&gt;StudlyCaps&lt;/code&gt; 로 선언되어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Class names MUST be declared in &lt;code&gt;StudlyCaps&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[MUST] PHP 5.3 이후 버전에서 사용될 코드는 정식 네임스페이스를 사용해야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Code written for PHP 5.3 and after MUST use formal namespaces.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// PHP 5.3 and later:&lt;/span&gt;
&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nx"&gt;Vendor\Model&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Foo&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;[SHOULD] 5.2.x 이하에서 작성하는 코드에서는 클래스 이름에 &lt;code&gt;Vendor_&lt;/code&gt; 접두사를 이용하는 네임스페이스 규칙을 사용해야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Code written for 5.2.x and before SHOULD use the pseudo-namespacing convention of &lt;code&gt;Vendor_&lt;/code&gt; prefixes on class names.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// PHP 5.2.x and earlier:&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Vendor_Model_Foo&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="4"&gt;4. 클래스 상수, 속성, 메서드&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;Class&amp;rdquo; 라는 용어는 모든 클래스, 인터페이스, 특성을 나타냅니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The term “class” refers to all classes, interfaces, and traits.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="41-constants"&gt;4.1 상수 (Constants)&lt;/h3&gt;
&lt;p&gt;[MUST] 클래스 상수는 모두 대문자로 밑줄 구분 기호를 사용하여 선언해야 합니다. 예:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Class constants MUST be declared in all upper case with underscore separators. For example:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nx"&gt;Vendor\Model&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Foo&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="no"&gt;VERSION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1.0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="no"&gt;DATE_APPROVED&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2012-06-01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="42-properties"&gt;4.2 속성 (Properties)&lt;/h3&gt;
&lt;p&gt;이 가이드에서는 &lt;code&gt;$StudlyCaps&lt;/code&gt;, &lt;code&gt;$camelCase&lt;/code&gt;, &lt;code&gt;$under_score&lt;/code&gt; 와 같은 방식으로 속성 이름을 사용하는 것에 대해서 권장 사항을 지정하지 않습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This guide intentionally avoids any recommendation regarding the use of &lt;code&gt;$StudlyCaps&lt;/code&gt;, &lt;code&gt;$camelCase&lt;/code&gt;, or &lt;code&gt;$under_score&lt;/code&gt; property names.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[SHOULD] 어떤 명명 규칙이 사용되든 합당한 범위 내에서 일관되게 적용되어야 합니다. 여기서 정의하는 범위는 벤더 레벨, 패키지 레벨, 클래스 레벨, 메서드 레벨을 일컷습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Whatever naming convention is used SHOULD be applied consistently within areasonable scope. That scope may be vendor-level, package-level, class-level,or method-level.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="43-methods"&gt;4.3 메서드 (Methods)&lt;/h3&gt;
&lt;p&gt;[MUST] 메서드 이름은 &lt;code&gt;camleCase()&lt;/code&gt; 방식으로 선언되어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Method names MUST be declared in &lt;code&gt;camelCase()&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="번역"></category><category term="php"></category><category term="psr-1"></category><category term="psr"></category><category term="transelate"></category></entry><entry><title>Design of QL</title><link href="https://ujuc.github.io/2018/05/24/design_of_ql/" rel="alternate"></link><published>2018-05-24T00:00:02+09:00</published><updated>2018-03-23T16:50:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2018-05-24:/2018/05/24/design_of_ql/</id><summary type="html">&lt;p&gt;Go 임베디드 데이터베이스 패키지인 QL에 대한 디자인 문서이다.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;QL&lt;/code&gt; design 문서&lt;/p&gt;
&lt;p&gt;이 문서는 &lt;a href="https://github.com/cznic/ql"&gt;&lt;code&gt;cznic/ql&lt;/code&gt;&lt;/a&gt; 프로젝트 설계 문서이다.&lt;br&gt;
&lt;code&gt;QL&lt;/code&gt; 은 Go로 만들어진 embedded SQL 데이터베이스이다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;원문&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;code: &lt;a href="https://github.com/cznic/ql/blob/v1.1.0/design/doc.go"&gt;doc.go - v1.1.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;godoc: &lt;a href="https://godoc.org/github.com/cznic/ql/design"&gt;package design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#handles"&gt;Handles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#scalar-encoding"&gt;Scalar encoding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-root"&gt;Database root&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#table-meta-data"&gt;Table meta data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#indices"&gt;Indices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#table-record"&gt;Table record&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#non-unique-index"&gt;Non unique index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unique-index"&gt;Unique index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#non-scalar-types"&gt;Non scalar types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#blob-encoding"&gt;Blob encoding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#links"&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rationale"&gt;Rationale&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;패키지 디자인은 QL에서 사용중인 일부 데이터 구조를 설명합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Package design describes some of the data structures used in QL.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="handles"&gt;Handles&lt;/h2&gt;
&lt;p&gt;Handle은 DB에서 사용중인 블록에대한 7 바이트 “pointer” 입니다. &lt;a href="http://godoc.org/github.com/cznic/lldb#hdr-Block_handles"&gt;&lt;code&gt;lldb/hdr-Block_handles&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A handle is a 7 byte &amp;ldquo;pointer&amp;rdquo; to a block in the DB &lt;a href="http://godoc.org/github.com/cznic/lldb#hdr-Block_handles"&gt;0&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="scalar-encoding"&gt;Scalar encoding&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://godoc.org/github.com/cznic/lldb#EncodeScalars"&gt;&lt;code&gt;lldb/EncodeScalars&lt;/code&gt;&lt;/a&gt;에서 제공하는 &amp;ldquo;scalars&amp;rdquo; 인코딩을 말합니다. 달리 명시하지 않는한 아래 설명된 모든 값은 scalars, 인코딩된 scalars, scalar 배열에 대한 인코딩 입니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Encoding of so called &amp;ldquo;scalars&amp;rdquo; provided by &lt;a href="http://godoc.org/github.com/cznic/lldb#EncodeScalars"&gt;&lt;code&gt;lldb/EncodeScalars&lt;/code&gt;&lt;/a&gt;. Unless specified otherwise, all values discussed below are scalars, encoded scalars or encoding of scalar arrays.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="database-root"&gt;Database root&lt;/h2&gt;
&lt;p&gt;DB root는 고정된 핸들에서 발견되는 1-scalar 입니다 (#1).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;DB root is a 1-scalar found at a fixed handle (#1).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: center;"&gt;#&lt;/th&gt;
&lt;th style="text-align: center;"&gt;Name&lt;/th&gt;
&lt;th style="text-align: center;"&gt;Type&lt;/th&gt;
&lt;th style="text-align: center;"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;0&lt;/td&gt;
&lt;td style="text-align: center;"&gt;head&lt;/td&gt;
&lt;td style="text-align: center;"&gt;handle&lt;/td&gt;
&lt;td style="text-align: center;"&gt;First table meta data&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Head는 메타 데이터 테이블에서 싱클 링크 목록의 제목 행입니다. &lt;code&gt;0&lt;/code&gt;은 DB에 아무런 테이블이 없을 경우를 나타냅니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Head is the head of a single linked list of table of meta data. It&amp;rsquo;s zero if there are no tables in the DB.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="table-meta-data"&gt;Table meta data&lt;/h2&gt;
&lt;p&gt;테이블 메타 데이터는 6-scalar 입니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Table meta data are a 6-scalar.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: center;"&gt;#&lt;/th&gt;
&lt;th style="text-align: left;"&gt;Name&lt;/th&gt;
&lt;th style="text-align: left;"&gt;Type&lt;/th&gt;
&lt;th style="text-align: left;"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;0&lt;/td&gt;
&lt;td style="text-align: left;"&gt;next&lt;/td&gt;
&lt;td style="text-align: left;"&gt;handle&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Next table meta data.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;1&lt;/td&gt;
&lt;td style="text-align: left;"&gt;scols&lt;/td&gt;
&lt;td style="text-align: left;"&gt;string&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Column defintitions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;2&lt;/td&gt;
&lt;td style="text-align: left;"&gt;hhead&lt;/td&gt;
&lt;td style="text-align: left;"&gt;handle&lt;/td&gt;
&lt;td style="text-align: left;"&gt;-&amp;gt; head -&amp;gt; first record&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;3&lt;/td&gt;
&lt;td style="text-align: left;"&gt;name&lt;/td&gt;
&lt;td style="text-align: left;"&gt;string&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Table name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;4&lt;/td&gt;
&lt;td style="text-align: left;"&gt;indices&lt;/td&gt;
&lt;td style="text-align: left;"&gt;string&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Index definitions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;5&lt;/td&gt;
&lt;td style="text-align: left;"&gt;hxroots&lt;/td&gt;
&lt;td style="text-align: left;"&gt;handle&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Index B+Trees roots list&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;필드 #4와 #5는 기존 데이터베이스와 하위 호환성 (backward compatibility)을 위한 선택 사항입니다. 그러나 상위 호환성(forward compatibility)은 작동하지 않습니다. 최신 QL 버전에서 인덱스를 생성하면 메타 데이터에 4가지 필드만 있을 경우, 이 DB를 사용할 수 없습니다. 이전 버전 QL 인덱스를 업데이트 할 수 없기에 매번 &lt;code&gt;table-with-indeces&lt;/code&gt; 변화가 될때마다 새로운 QL 버전 쿼리가 실행이 안될 수 있어 의도된 구현입니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Fields #4 and #5 are optional for backward compatibility with existing databases. OTOH, forward compatibility will not work. Once any indices are created using a newer QL version the older versions of QL, expecting only 4 fields of meta data will not be able to use the DB. That&amp;rsquo;s the intended behavior because the older versions of QL cannot update the indexes, which can break queries runned by the newer QL version which expect indices to be always actualized on any table-with-indices mutation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;다음 테이블 메타 데이터의 handle은 필드 #0 (&lt;code&gt;next&lt;/code&gt;)에 있습니다. 만약 다음 테이블 메타 데이터가 없다면, 이 필드 값은 &lt;code&gt;0&lt;/code&gt;입니다. 테이블 컬럼에대한 이름과 타입은 필드 #1 (&lt;code&gt;scols&lt;/code&gt;)에 있습니다. 단일 필드는 타입 태그와 컬럼 이름을 연결하여 설명합니다. 타입 태그는 다음과 같습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The handle of the next table meta data is in the field #0 (next). If there is no next table meta data, the field is zero. Names and types of table columns are stored in field #1 (scols). A single field is described by concatenating a type tag and the column name. The type tags are&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;bool       &amp;#39;b&amp;#39;
complex64  &amp;#39;c&amp;#39;
complex128 &amp;#39;d&amp;#39;
float32    &amp;#39;f&amp;#39;
float64    &amp;#39;g&amp;#39;, alias float
int8       &amp;#39;i&amp;#39;
int16      &amp;#39;j&amp;#39;
int32      &amp;#39;k&amp;#39;
int64      &amp;#39;l&amp;#39;, alias int
string     &amp;#39;s&amp;#39;
uint8      &amp;#39;u&amp;#39;, alias byte
uint16     &amp;#39;v&amp;#39;
uint32     &amp;#39;w&amp;#39;
uint64     &amp;#39;x&amp;#39;, alias uint
bigInt     &amp;#39;I&amp;#39;
bigRat     &amp;#39;R&amp;#39;
blob       &amp;#39;B&amp;#39;
duration   &amp;#39;D&amp;#39;
time       &amp;#39;T&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Scols 값은 위에서 설명한 인코딩된 필드를 &lt;code&gt;"|"&lt;/code&gt;로 결합하여 사용합니다. 예를 들어&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The scols value is the above described encoded fields joined using &amp;ldquo;|&amp;rdquo;. For example&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;TABLE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Bar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Baz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;이 문구는 scols를 사용하여 테이블 메타 데이터를 추가합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This statement adds a table meta data with scols&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;quot;bFool|sBar|gBaz&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;테이블에서 컬럼을 삭제할 수 있습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Columns can be dropped from a table&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;TABLE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;DROP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;COLUMN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;이렇게 하면 scols에서 필드 정보가 &lt;strong&gt;지워&lt;/strong&gt;집니다. 값은 다음과 같이 보여집니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This &amp;ldquo;erases&amp;rdquo; the field info in scols, so the value becomes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;quot;bFool||gBaz&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;테이블에 커럼을 추가할 수 있습니다.&lt;br&gt;
Colums can be added to a table&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;TABLE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;ADD&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;uint&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;새로운 필드는 scols 맨 끝에 항상 추가됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;New fields are always added to the end of scols&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;”bFool||gBaz|xCount&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;strings.Split(scols, "|")&lt;/code&gt;에 있는 필드에 대한 인덱스는 테이블 레코드에 있는 필드에 대한 인덱스 입니다. 위에서 설명한 컬럼 삭제 및 추가 규칙은 기존 테이블 데이터를 다시 만들 필요없이 스키마를 변경시킬 수 있습니다. 삭제된 컬럼은 원래 위치에 그대로 두고 새로운 레코드는 해당 위치에 &lt;code&gt;nil&lt;/code&gt;을 삽입합니다. 인코딩된 &lt;code&gt;nil&lt;/code&gt; 값은 1 바이트입니다. 기존 레코드에 없는 경우, 추가된 열은  &lt;code&gt;nil&lt;/code&gt; 값을 반환합니다. 삭제된 컬럼의 오버해드가 문제가되고 테이블 레코드를 이동할 충분한 시간/공간과 메모리가 있다면:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Index of a field in &lt;code&gt;strings.Split(scols, "|")&lt;/code&gt; is the index of the field in a table record. The above discussed rules for column dropping and column adding allow for schema evolution without a need to reshape any existing table data. Dropped columns are left where they are and new records insert &lt;code&gt;nil&lt;/code&gt; in their place. The encoded &lt;code&gt;nil&lt;/code&gt; is one byte. Added columns, when not present in preexisting records are returned as &lt;code&gt;nil&lt;/code&gt; values. If the overhead of dropped columns becomes an issue and there&amp;rsquo;s time/space and memory enough to move the records of a table around:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;BEGIN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;TRANSACTION&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;TABLE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;column&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;definitions&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;INSERT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;INTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;old&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;DROP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;TABLE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;old&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;TABLE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;old&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;column&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;definitions&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;INSERT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;INTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;old&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;DROP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;TABLE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;END&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;TRANSACTION&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;이것은 시간적/공간적으로 효과적이지 못하며, Big Data일 경우, 트랜젝션이 프로세스에서 사용 가능한 메모리 리소스에 의해 제한되기에 OOM 이 발생할 수 있습니다. 어쩌면 이것을 수행하는 메소드나 QL 구문을 추가해야합니다.(MySQL OPTIMIZE TABLE 구문 채택을 고려해야합니다)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is not very time/space effective and for Big Data it can cause an OOM because transactions are limited by memory resources available to the process. Perhaps a method and/or QL statement to do this in-place should be added (MAYBE consider adopting MySQL&amp;rsquo;s OPTIMIZE TABLE syntax).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;필드 #2(&lt;code&gt;hhead&lt;/code&gt;)는 테이블 레코드의 해드에 대한 handle 입니다. 테이블 첫 번째 레코드에 대한 handle이 아닙니다. 따라서 레코드가 없는 테이블의 경우라도 항상 &lt;code&gt;0&lt;/code&gt; 값을 가지고 있지 않습니다. 이 &lt;strong&gt;이중 포인터(double pointer&lt;/strong&gt; 스키마를 사용하는 이유는 (&lt;code&gt;hhead&lt;/code&gt; 포인트에 대한) head 단일 값을 업데이트하여 새 레코드를 추가 (연결) 할 수 있기 때문입니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Field #2 (&lt;code&gt;hhead&lt;/code&gt;) is a handle to a head of table records, i.e. not a handle to the first record in the table. It is thus always non zero even for a table having no records. The reason for this &amp;ldquo;double pointer&amp;rdquo; schema is to enable adding (linking) a new record by updating a single value of the (&lt;code&gt;hhead&lt;/code&gt; pointing to) head.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;tableMeta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hhead&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;firstTableRecord&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;테이블 이름은 필드 #3 (&lt;code&gt;name&lt;/code&gt;)에 저장됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The table name is stored in field #3 (name).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="indices"&gt;Indices&lt;/h2&gt;
&lt;p&gt;인덱스 이름은 &amp;lsquo;N&amp;rsquo;, 인덱스 컬럼 이름은 &amp;lsquo;C&amp;rsquo;으로 정합니다. 이 특정 인덱스 인코딩은 &lt;code&gt;&amp;lt;tag&amp;gt;N&lt;/code&gt; 문자열입니다. &lt;code&gt;&amp;lt;tag&amp;gt;&lt;/code&gt;는 고유하지 않은 인덱스는 &lt;code&gt;n&lt;/code&gt;이고 고유한 인덱스는 &lt;code&gt;u&lt;/code&gt; 입니다. 인덱스 &lt;code&gt;id()&lt;/code&gt;와 scols의 다른 모든 컬럼을 인덱싱 할 수 있는 인덱스에 대한 정보기 이 인덱스에 있습니다. 컬럼에 인덱스되지 않은 경우, 인덱스 정보는 빈 문자열입니다. 모든 인덱스에 대한 정보는 &lt;code&gt;"|"&lt;/code&gt; 으로 결합됩니다. 예를 들어:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Consider an index named N, indexing column named C. The encoding of this particular index is a string &amp;ldquo;&lt;tag&gt;N&amp;rdquo;. &lt;code&gt;&amp;lt;tag&amp;gt;&lt;/code&gt; is a string &amp;ldquo;n&amp;rdquo; for non unique indices and &amp;ldquo;u&amp;rdquo; for unique indices. There is this index information for the index possibly indexing the record id() and for all other columns of scols. Where the column is not indexed, the index info is an empty string. Infos for all indexes are joined with &amp;ldquo;|&amp;rdquo;. For example&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;BEGIN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;TRANSACTION&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;TABLE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Bar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Baz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;INDEX&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;ON&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Baz&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;UNIQUE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;INDEX&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;ON&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Foo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;COMMIT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;위의 필드 #1과 #4는 다음과 같습니다:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The values of fields #1 and #4 for the above are&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;scols: &amp;quot;lFoo|bBar|sBaz&amp;quot;
indices: &amp;quot;|uY||nX&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;"|"&lt;/code&gt; 값을 나눠서 보자면:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Aligning properly the &amp;ldquo;|&amp;rdquo; split parts&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;             id    col#0    col#1    col#2&lt;/span&gt;
&lt;span class="nb"&gt;+----------+----+--------+--------+--------+&lt;/span&gt;
&lt;span class="c"&gt;|   scols: |    | &amp;quot;lFoo&amp;quot; | &amp;quot;bBar&amp;quot; | &amp;quot;sBaz&amp;quot; |&lt;/span&gt;
&lt;span class="nb"&gt;+----------+----+--------+--------+--------+&lt;/span&gt;
&lt;span class="c"&gt;| indices: | &amp;quot;&amp;quot; | &amp;quot;uY&amp;quot;   | &amp;quot;&amp;quot;     | &amp;quot;nX&amp;quot;   |&lt;/span&gt;
&lt;span class="nb"&gt;+----------+----+--------+--------+--------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;Foo&lt;/code&gt;와 &lt;code&gt;Baz&lt;/code&gt; 컬럼이 인덱스되는 동안 레코드 &lt;code&gt;id()&lt;/code&gt;가 이테이블에 대해 인덱싱되지 않는 것을 보여줍니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;shows that the record id() is not indexed for this table while the columns Foo and Baz are.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;주의: 동일한 컬럼에 두개의 다른 이름을 가진 인덱스가 있을 수 없으며, 이것은 의도한 것입니다. 인덱스는 &lt;a href="http://godoc.org/github.com/cznic/lldb#BTree"&gt;B+Trees&lt;/a&gt;로 작성되었습니다. 그들의 루트에서 handle에 대한 목록은 인덱스가 없는 컬럼에 대해서 &lt;code&gt;0&lt;/code&gt;과 &lt;code&gt;hxroots&lt;/code&gt;에 의해 가리켜집니다. 이전 예제의 경우:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that there cannot be two differently named indexes for the same column and it&amp;rsquo;s intended. The indices are &lt;a href="http://godoc.org/github.com/cznic/lldb#BTree"&gt;B+Trees&lt;/a&gt;. The list of handles to their roots is pointed to by &lt;code&gt;hxroots&lt;/code&gt; with zeros for non indexed columns. For the previous example&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;tableMeta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hxroots&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;여기서 &lt;code&gt;x&lt;/code&gt;는 &lt;code&gt;X&lt;/code&gt; 인덱스의 B+Tree에 대한 루트이고, &lt;code&gt;y&lt;/code&gt;는 &lt;code&gt;Y&lt;/code&gt; 인덱스의 B+Tree에 대한 루트입니다. &lt;code&gt;id()&lt;/code&gt;에 대한 인덱스가 있다면, 첫번째 &lt;code&gt;0&lt;/code&gt;이 있는 곳에 B+Tree 루트가 있습니다. &lt;code&gt;hhead&lt;/code&gt;와 마찬가지로 &lt;code&gt;hxroots&lt;/code&gt;는 테이블에 대한 인덱스가 없는 경우라도 절대로 &lt;code&gt;0&lt;/code&gt;이 아닙니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;where x is the root of the B+Tree for the X index and y is the root of the B+Tree for the Y index. If there would be an index for id(), its B+Tree root will be present where the first zero is. Similarly to &lt;code&gt;hhead&lt;/code&gt;, &lt;code&gt;hxroots&lt;/code&gt; is never zero, even when there are no indices for a table.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="table-record"&gt;Table record&lt;/h2&gt;
&lt;p&gt;테이블 레코드는 N-scalar 입니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A table record is an N-scalar.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: center;"&gt;#&lt;/th&gt;
&lt;th style="text-align: left;"&gt;Name&lt;/th&gt;
&lt;th style="text-align: left;"&gt;Type&lt;/th&gt;
&lt;th style="text-align: left;"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;0&lt;/td&gt;
&lt;td style="text-align: left;"&gt;next&lt;/td&gt;
&lt;td style="text-align: left;"&gt;handle&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Next record or zero.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;1&lt;/td&gt;
&lt;td style="text-align: left;"&gt;id&lt;/td&gt;
&lt;td style="text-align: left;"&gt;int64&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Automatically assigned unique&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;value obtainable by id().&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;2&lt;/td&gt;
&lt;td style="text-align: left;"&gt;field #0&lt;/td&gt;
&lt;td style="text-align: left;"&gt;scalar&lt;/td&gt;
&lt;td style="text-align: left;"&gt;First field of the record.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;3&lt;/td&gt;
&lt;td style="text-align: left;"&gt;field #1&lt;/td&gt;
&lt;td style="text-align: left;"&gt;scalar&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Second field of the record.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&amp;hellip;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&amp;hellip;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&amp;hellip;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&amp;hellip;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;N-1&lt;/td&gt;
&lt;td style="text-align: left;"&gt;field #N-2&lt;/td&gt;
&lt;td style="text-align: left;"&gt;scalar&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Last field of the record.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;테이블 레코도에 링크된 &lt;strong&gt;정렬&lt;/strong&gt;에는 의미가 없으므로 레코드가 테이블에 추가되는 순서와 상관이 없습니다. 실제로 효율적인 연결 방법은 &lt;strong&gt;정렬&lt;/strong&gt;을 유도하며, 추가된 순서에 관해서는 실지로 역순이 됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The linked &amp;ldquo;ordering&amp;rdquo; of table records has no semantics and it doesn&amp;rsquo;t have to correlate to the order of how the records were added to the table. In fact, an efficient way of the linking leads to &amp;ldquo;ordering&amp;rdquo; which is actually reversed wrt the insertion order.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="non-unique-index"&gt;Non unique index&lt;/h2&gt;
&lt;p&gt;B+Tree에 대한 &lt;a href="https://en.wikipedia.org/wiki/Compound_key"&gt;복합키&lt;/a&gt;는 &lt;code&gt;{indexed valuse, record handle}&lt;/code&gt; 입니다. B+Tree 값은 사용하지 않습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The composite key of the B+Tree is &lt;code&gt;{indexed values, record handle}&lt;/code&gt;. The B+Tree value is not used.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;            B&lt;/span&gt;&lt;span class="nb"&gt;+&lt;/span&gt;&lt;span class="c"&gt;Tree key                    B&lt;/span&gt;&lt;span class="nb"&gt;+&lt;/span&gt;&lt;span class="c"&gt;Tree value&lt;/span&gt;
&lt;span class="nb"&gt;+----------------+---------------+&lt;/span&gt;&lt;span class="c"&gt;      &lt;/span&gt;&lt;span class="nb"&gt;+--------------+&lt;/span&gt;
&lt;span class="c"&gt;| Indexed Values | Record Handle |  &lt;/span&gt;&lt;span class="nb"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;  |   not used   |&lt;/span&gt;
&lt;span class="nb"&gt;+----------------+---------------+&lt;/span&gt;&lt;span class="c"&gt;      &lt;/span&gt;&lt;span class="nb"&gt;+--------------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="unique-index"&gt;Unique index&lt;/h2&gt;
&lt;p&gt;인덱스된 값이 모두 &lt;code&gt;NULL&lt;/code&gt;이라면, 복합 B+Tree 키는 &lt;code&gt;{nil, record handle}&lt;/code&gt;이고 B+Tree 값은 사용하지 않습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the indexed values are all NULL then the composite B+Tree key is &lt;code&gt;{nil, record handle}&lt;/code&gt; and the B+Tree value is not used.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;        B&lt;/span&gt;&lt;span class="nb"&gt;+&lt;/span&gt;&lt;span class="c"&gt;Tree key                B&lt;/span&gt;&lt;span class="nb"&gt;+&lt;/span&gt;&lt;span class="c"&gt;Tree value&lt;/span&gt;
&lt;span class="nb"&gt;+------+-----------------+&lt;/span&gt;&lt;span class="c"&gt;      &lt;/span&gt;&lt;span class="nb"&gt;+--------------+&lt;/span&gt;
&lt;span class="c"&gt;| NULL |  Record Handle  |  &lt;/span&gt;&lt;span class="nb"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;  |   not used   |&lt;/span&gt;
&lt;span class="nb"&gt;+------+-----------------+&lt;/span&gt;&lt;span class="c"&gt;      &lt;/span&gt;&lt;span class="nb"&gt;+--------------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;인덱스된 값이 모두 &lt;code&gt;NULL&lt;/code&gt;이라면, B+Tree 키에 대한 키가 인덕싱된 값이고, B+Tree 값은 레코드 handle 입니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the indexed values are not all NULL then key of the B+Tree key are the indexed values and the B+Tree value is the record handle.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;    B&lt;/span&gt;&lt;span class="nb"&gt;+&lt;/span&gt;&lt;span class="c"&gt;Tree key                B&lt;/span&gt;&lt;span class="nb"&gt;+&lt;/span&gt;&lt;span class="c"&gt;Tree value&lt;/span&gt;
&lt;span class="nb"&gt;+----------------+&lt;/span&gt;&lt;span class="c"&gt;      &lt;/span&gt;&lt;span class="nb"&gt;+---------------+&lt;/span&gt;
&lt;span class="c"&gt;| Indexed Values |  &lt;/span&gt;&lt;span class="nb"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;  | Record Handle |&lt;/span&gt;
&lt;span class="nb"&gt;+----------------+&lt;/span&gt;&lt;span class="c"&gt;      &lt;/span&gt;&lt;span class="nb"&gt;+---------------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="non-scalar-types"&gt;Non scalar types&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://godoc.org/github.com/cznic/lldb#EncodeScalars"&gt;&lt;code&gt;lldb/EncodeScalars&lt;/code&gt;&lt;/a&gt;에 대한 scalar 타입은 &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;complex*&lt;/code&gt;, &lt;code&gt;float*&lt;/code&gt;, &lt;code&gt;int*&lt;/code&gt;, &lt;code&gt;uint*&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;[]byte&lt;/code&gt; 타입입니다. 모든 다른 타입은 &lt;code&gt;blob-like&lt;/code&gt; 입니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Scalar types of &lt;a href="http://godoc.org/github.com/cznic/lldb#EncodeScalars"&gt;&lt;code&gt;lldb/EncodeScalars&lt;/code&gt;&lt;/a&gt; are &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;complex*&lt;/code&gt;, &lt;code&gt;float*&lt;/code&gt;, &lt;code&gt;int*&lt;/code&gt;, &lt;code&gt;uint*&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt; and &lt;code&gt;[]byte&lt;/code&gt; types. All other types are &amp;ldquo;blob-like&amp;rdquo;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;QL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="nx"&gt;Go&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;
&lt;span class="o"&gt;-----------------------------&lt;/span&gt;
&lt;span class="nx"&gt;blob&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="nx"&gt;byte&lt;/span&gt;
&lt;span class="nx"&gt;bigint&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nx"&gt;big&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Int&lt;/span&gt;
&lt;span class="nx"&gt;bigrat&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nx"&gt;big&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Rat&lt;/span&gt;
&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Time&lt;/span&gt;
&lt;span class="nx"&gt;duration&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Duration&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;메모리 백엔드는 Go 타입으로 직접 저장합니다. 파일 백엔드는 lldb가 기본적으로 지원하는 유형이 더 적기에 (태그가 붙은) &lt;code&gt;[]byte&lt;/code&gt;를 이용하여 위 모든 내용을 인코딩 해야합니다. &lt;code&gt;Blob-like&lt;/code&gt;한 타입의 &lt;code&gt;NULL&lt;/code&gt; 값은 &lt;code&gt;nil&lt;/code&gt; (&lt;code&gt;lldb/db.go&lt;/code&gt;안의 &lt;code&gt;gbNull&lt;/code&gt;)으로 인코딩 됩니다. 이미 존재하는 QL 타입과 완전히 동일합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Memory back-end stores the Go type directly. File back-end must resort to encode all of the above as (tagged) &lt;code&gt;[]byte&lt;/code&gt; due to the lack of more types supported natively by lldb. NULL values of blob-like types are encoded as &lt;code&gt;nil&lt;/code&gt; (&lt;code&gt;gbNull&lt;/code&gt; in &lt;code&gt;lldb/gb.go&lt;/code&gt;), exactly the same as the already existing QL types are.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="blob-encoding"&gt;Blob encoding&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Blob-like&lt;/code&gt;한 타입 값은 먼저 &lt;code&gt;[]byte&lt;/code&gt; 슬라이스로 인코딩 됩니다:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The values of the blob-like types are first encoded into a &lt;code&gt;[]byte&lt;/code&gt; slice:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;+-----------------------+-------------------+&lt;/span&gt;
&lt;span class="c"&gt;| blob                  | raw               |&lt;/span&gt;
&lt;span class="c"&gt;| bigint&lt;/span&gt;&lt;span class="nt"&gt;,&lt;/span&gt;&lt;span class="c"&gt; bigrat&lt;/span&gt;&lt;span class="nt"&gt;,&lt;/span&gt;&lt;span class="c"&gt; time  | gob encoded       |&lt;/span&gt;
&lt;span class="c"&gt;| duration              | gob encoded int64 |&lt;/span&gt;
&lt;span class="nb"&gt;+-----------------------+-------------------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;gob&lt;/code&gt; 인코딩은 &lt;code&gt;blob-like&lt;/code&gt;한 타입에 대한 모든 초기 인코딩과 관련하여 &lt;strong&gt;차별됩니다&lt;/strong&gt;. 다른 말로, &lt;code&gt;gob&lt;/code&gt; 인코딩이 반드시 써야되는 초기 타입 디스크립터는 제거되고 정직하게 디코딩될때 &lt;strong&gt;재 공급&lt;/strong&gt;됩니다. (참조, &lt;a href="https://github.com/cznic/ql/blob/v1.1.0/blob.go"&gt;&lt;code&gt;blob.go&lt;/code&gt;&lt;/a&gt;). 결과로 나온 슬라이스 길이가 &lt;code&gt;&amp;lt;= shortBolob&lt;/code&gt; 인 경우, 첫번째이자 유일한 청크는 다음과 같은 스칼라 인코딩입니다:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The gob encoding is &amp;ldquo;differential&amp;rdquo; wrt an initial encoding of all of the blob-like type. IOW, the initial type descriptors which gob encoding must write out are stripped off and &amp;ldquo;resupplied&amp;rdquo; on decoding transparently. See also blob.go. If the length of the resulting slice is &lt;code&gt;&amp;lt;= shortBlob&lt;/code&gt;, the first and only chunk is the scalar encoding of&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kd"&gt;interface&lt;/span&gt;&lt;span class="p"&gt;{}{&lt;/span&gt;&lt;span class="nx"&gt;typeTag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;}.&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="c1"&gt;// initial (and last) chunk&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;슬라이스 길이가 &lt;code&gt;0&lt;/code&gt;일 수도 있습니다 (&lt;code&gt;blob("")&lt;/code&gt;인 경우). 결과로 나온 슬라이스 길이가 길다면 (&lt;code&gt;&amp;gt; shortBlob&lt;/code&gt;), 첫 번째 청크는 인코딩에서 옵니다:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The length of slice can be zero (for blob(&amp;ldquo;&amp;rdquo;)). If the resulting slice is long (&lt;code&gt;&amp;gt; shortBlob&lt;/code&gt;), the first chunk comes from encoding&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kd"&gt;interface&lt;/span&gt;&lt;span class="p"&gt;{}{&lt;/span&gt;&lt;span class="nx"&gt;typeTag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;nextHandle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;firstPart&lt;/span&gt;&lt;span class="p"&gt;}.&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;// initial, but not final chunk&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;이 경우 &lt;code&gt;len(firstPart) &amp;lt;= shortBlob&lt;/code&gt;입니다. 두번째와 다른 청크입니다. 만약 마지막 청크면 &lt;code&gt;src&lt;/code&gt;는 다음과 같습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In this case &lt;code&gt;len(firstPart) &amp;lt;= shortBlob&lt;/code&gt;. Second and other chunks: If the chunk is the last one, src is&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[]interface{lastPart}.                          // overflow chunk (last)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;이 경우 &lt;code&gt;len(lastPart) &amp;lt;= 64kB&lt;/code&gt;입니다. 마지막 청크가 아닌 경우, &lt;code&gt;src&lt;/code&gt;는 다음과 같습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In this case &lt;code&gt;len(lastPart) &amp;lt;= 64kB&lt;/code&gt;. If the chunk is not the last one, src is&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[]interface{}{nextHandle, part}.                // overflow chunk (not last)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;이 경우는 &lt;code&gt;len(part) == 64kB&lt;/code&gt; 입니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In this case &lt;code&gt;len(part) == 64kB&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="links"&gt;Links&lt;/h2&gt;
&lt;p&gt;참조 사항:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Referenced from above:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[0]: http://godoc.org/github.com/cznic/lldb#hdr-Block_handles
[1]: http://godoc.org/github.com/cznic/lldb#EncodeScalars
[2]: http://godoc.org/github.com/cznic/lldb#BTree
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="rationale"&gt;Rationale&lt;/h2&gt;
&lt;p&gt;이 노트는 QL 소스를 보든 사람에게 유용 할 수 있지만, 특별히 의도된 독자는 미래의 나 자신입니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;While these notes might be useful to anyone looking at QL sources, the specifically intended reader is my future self.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="번역"></category><category term="go"></category><category term="database"></category><category term="translate"></category></entry><entry><title>JSON API Specification v1.0 (3) - Document Structure (4)</title><link href="https://ujuc.github.io/2016/09/17/json_api_specification_v1.0_(3)_-_document_structure_(4)/" rel="alternate"></link><published>2016-09-17T20:55:00+09:00</published><updated>2018-03-23T16:50:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2016-09-17:/2016/09/17/json_api_specification_v1.0_(3)_-_document_structure_(4)/</id><summary type="html">&lt;p&gt;문서 구조에서 리소스 오브젝트에 대한 내용을 정리한다. 검증, 필드 부분.&lt;/p&gt;</summary><content type="html">&lt;h3 id="identification"&gt;검증 (Identification)&lt;/h3&gt;
&lt;p&gt;모든 &lt;a href="http://jsonapi.org/format/#document-resource-objects"&gt;resource object&lt;/a&gt;는 &lt;code&gt;id&lt;/code&gt; 멤버와 &lt;code&gt;type&lt;/code&gt; 멤버는 포함하고 있어야 합니다. &amp;lt;&lt;strong&gt;MUST&lt;/strong&gt;&amp;gt; &lt;code&gt;id&lt;/code&gt;와 &lt;code&gt;type&lt;/code&gt; 멤버 값은 문자열이어야 합니다. &amp;lt;&lt;strong&gt;MUST&lt;/strong&gt;&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Every &lt;a href="http://jsonapi.org/format/#document-resource-objects"&gt;resource object&lt;/a&gt; &lt;strong&gt;MUST&lt;/strong&gt; contain an &lt;code&gt;id&lt;/code&gt; member and a &lt;code&gt;type&lt;/code&gt; member. The values of the &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;type&lt;/code&gt; members &lt;strong&gt;MUST&lt;/strong&gt; be strings.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;주어진 API에서 각 리소스 오브젝트에서 &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;id&lt;/code&gt; 쌍은 반드시 하나인 고유한 리소스임을 증명해야 합니다. &amp;lt;&lt;strong&gt;MUST&lt;/strong&gt;&amp;gt; (서버 한 대이거나 단일 작업을 하는 여러 서버에서 제어되는 URI 집합으로 API를 구성합니다.)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Within a given API, each resource object’s &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; pair &lt;strong&gt;MUST&lt;/strong&gt; identify a single, unique resource. (The set of URIs controlled by a server, or multiple servers acting as one, constitute an API.)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;type&lt;/code&gt; 멤버는 공통된 속성과 관계를 공유하는 &lt;a href="http://jsonapi.org/format/#document-resource-objects"&gt;resource objects&lt;/a&gt;를 설명하는 데 사용됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;type&lt;/code&gt; member is used to describe &lt;a href="http://jsonapi.org/format/#document-resource-objects"&gt;resource objects&lt;/a&gt; that share common attributes and relationships.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;type&lt;/code&gt; 멤버 값은 &lt;a href="http://jsonapi.org/format/#document-member-names"&gt;member names&lt;/a&gt;와 같은 제약에 따라야 합니다. &amp;lt;&lt;strong&gt;MUST&lt;/strong&gt;&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The values of &lt;code&gt;type&lt;/code&gt; members &lt;strong&gt;MUST&lt;/strong&gt; adhere to the same constraints as &lt;a href="http://jsonapi.org/format/#document-member-names"&gt;member names&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note: 이 스펙은 inflection 법칙에 얽매이지 않습니다. 또한 &lt;code&gt;type&lt;/code&gt; 값은 복수이거나 단수일 수 있습니다. 그러나 같은 값이 구현된 API 전체에서 일관되게 사용되어야 합니다.&lt;/p&gt;
&lt;p&gt;Note: This spec is agnostic about inflection rules, so the value of &lt;code&gt;type&lt;/code&gt; can be either plural or singular. However, the same value should be used consistently throughout an implementation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id="fields"&gt;필드 (Fields)&lt;/h3&gt;
&lt;p&gt;리소스 오브젝트에서 &lt;a href="http://jsonapi.org/format/#document-resource-object-attributes"&gt;attributes&lt;/a&gt;과 &lt;a href="http://jsonapi.org/format/#document-resource-object-relationships"&gt;relationships&lt;/a&gt;는 “&lt;a href="http://jsonapi.org/format/#document-resource-object-fields"&gt;fields&lt;/a&gt;”로 묶어서 부릅니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A resource object’s &lt;a href="http://jsonapi.org/format/#document-resource-object-attributes"&gt;attributes&lt;/a&gt; and its &lt;a href="http://jsonapi.org/format/#document-resource-object-relationships"&gt;relationships&lt;/a&gt; are collectively called its “&lt;a href="http://jsonapi.org/format/#document-resource-object-fields"&gt;fields&lt;/a&gt;”.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://jsonapi.org/format/#document-resource-objects"&gt;resource object&lt;/a&gt; 필드는 반드시 각기 다른 공통된 네임스페이스, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;id&lt;/code&gt;를 공유해야합니다. &amp;lt;&lt;strong&gt;MUST&lt;/strong&gt;&amp;gt; 다른 말로는, 리소스는 동일한 이름으로 속성 값과 관계를 가질 수 없으나 &lt;code&gt;type&lt;/code&gt;이나 &lt;code&gt;id&lt;/code&gt;에대한 속성이나 관계는 동일한 이름을 가질 수 있습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Fields for a &lt;a href="http://jsonapi.org/format/#document-resource-objects"&gt;resource object&lt;/a&gt; &lt;strong&gt;MUST&lt;/strong&gt; share a common namespace with each other and with &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt;. In other words, a resource can not have an attribute and relationship with the same name, nor can it have an attribute or relationship named &lt;code&gt;type&lt;/code&gt; or &lt;code&gt;id&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="번역"></category><category term="json"></category><category term="api"></category><category term="specification"></category><category term="json api"></category><category term="스펙 문서"></category><category term="transelate"></category></entry><entry><title>JSON API Specification v1.0 (3) - Document Structure (3)</title><link href="https://ujuc.github.io/2016/09/17/json_api_specification_v1.0_(3)_-_document_structure_(3)/" rel="alternate"></link><published>2016-09-17T20:46:00+09:00</published><updated>2019-03-23T16:50:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2016-09-17:/2016/09/17/json_api_specification_v1.0_(3)_-_document_structure_(3)/</id><summary type="html">&lt;p&gt;문서 구조에서 리소스 오브젝트에 대한 내용을 정리한다.&lt;/p&gt;</summary><content type="html">&lt;h2 id="52-resource-objects"&gt;5.2. 리소스 오브젝트 (Resource Objects)&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;“리소스 오브젝트”는 자원을 나타내는 데 사용되는 JSON API에 표시됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Resource objects” appear in a JSON API document to represent resources.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;리소스 오브젝트는 적어도 다음 최상위 멤버가 포함되어 있어야 합니다. &amp;lt;&lt;strong&gt;MUST&lt;/strong&gt;&amp;gt; :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;A resource object &lt;strong&gt;MUST&lt;/strong&gt; contain at least the following top-level members:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;예외: 리소스 오브젝트가 클라이언트에서 고안되고, 서버에서 생성된 새로운 리소스를 나타낼 때는 &lt;code&gt;id&lt;/code&gt; 멤버는 필요하지 않습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Exception: The &lt;code&gt;id&lt;/code&gt; member is not required when the resource object originates at the client and represents a new resource to be created on the server.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;추가로 리소스 오브젝트는 다음 최상위 멤버 중 하나가 포함될 수도 있습니다. &amp;lt;&lt;strong&gt;MAY&lt;/strong&gt;&amp;gt; :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;attributes&lt;/code&gt;: &lt;a href="http://jsonapi.org/format/#document-resource-object-attributes"&gt;attributes object&lt;/a&gt;는 리소스 데이터 일부를 나타냅니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;relationships&lt;/code&gt;: &lt;a href="http://jsonapi.org/format/#document-resource-object-relationships"&gt;relationships object&lt;/a&gt;는 리소스와 다른 JSON API 리소스간 관계를 표현합니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;links&lt;/code&gt;: &lt;a href="http://jsonapi.org/format/#document-links"&gt;links object&lt;/a&gt;는 리소스와 관련된 링크를 포함합니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;meta&lt;/code&gt;: &lt;a href="http://jsonapi.org/format/#document-meta"&gt;meta object&lt;/a&gt;는 속성과 관계로는 나타낼 수 없는 리소스에 대한 비표준 메타 정보를 포함합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;In addition, a resource object &lt;strong&gt;MAY&lt;/strong&gt; contain any of these top-level members:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;attributes&lt;/code&gt;: an &lt;a href="http://jsonapi.org/format/#document-resource-object-attributes"&gt;attributes object&lt;/a&gt; representing some of the resource’s data.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;relationships&lt;/code&gt;: a &lt;a href="http://jsonapi.org/format/#document-resource-object-relationships"&gt;relationships object&lt;/a&gt; describing relationships between the resource and other JSON API resources.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;links&lt;/code&gt;: a &lt;a href="http://jsonapi.org/format/#document-links"&gt;links object&lt;/a&gt; containing links related to the resource.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;meta&lt;/code&gt;: a &lt;a href="http://jsonapi.org/format/#document-meta"&gt;meta object&lt;/a&gt; containing non-standard meta-information about a resource that can not be represented as an attribute or relationship.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;여기서 아티클(즉, “articles” 타입)이 문서에 표시될 수 있습니다. 그 방법은 다음과 같습니다:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Here’s how an article (i.e. a resource of type “articles”) might appear in a document:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;articles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;attributes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Rails is Omakase&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;relationships&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;author&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;links&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;self&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/articles/1/relationships/author&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;related&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/articles/1/author&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;people&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;9&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="번역"></category><category term="json"></category><category term="api"></category><category term="specification"></category><category term="json api"></category><category term="스펙 문서"></category><category term="transelate"></category></entry><entry><title>JSON API Specification v1.0 (3) - Document Structure (2)</title><link href="https://ujuc.github.io/2016/08/06/json_api_specification_v1.0_(3)_-_document_structure_(2)/" rel="alternate"></link><published>2016-08-06T14:40:00+09:00</published><updated>2019-03-23T16:50:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2016-08-06:/2016/08/06/json_api_specification_v1.0_(3)_-_document_structure_(2)/</id><summary type="html">&lt;p&gt;문서 구조에서 Top level에 대한 내용을 정리한다.&lt;/p&gt;</summary><content type="html">&lt;h2 id="51-top-level"&gt;5.1. 최상위 (Top Level)&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;JSON 오브젝트는 데이터를 포함한 JSON API 요청과 응답에 대한 근본(root) 입니다. &amp;lt;&lt;strong&gt;MUST&lt;/strong&gt;&amp;gt; 이 오브젝트를 문서의 “최상위”라 정의합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A JSON object &lt;strong&gt;MUST&lt;/strong&gt; be at the root of every JSON API request and response containing data. This object defines a document’s “top level”.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;문서에서는 최소한 다음 최상위 멤버중 하나를 포함해야 합니다 &amp;lt;&lt;strong&gt;MUST&lt;/strong&gt;&amp;gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;data&lt;/code&gt;: 문서에서 “일차 데이터”&lt;/li&gt;
&lt;li&gt;&lt;code&gt;errors&lt;/code&gt;: &lt;a href="http://jsonapi.org/format/#errors"&gt;error objects&lt;/a&gt; 에대한 배열&lt;/li&gt;
&lt;li&gt;&lt;code&gt;meta&lt;/code&gt;: 비표준 메타 정보가 포함되어있는 &lt;a href="http://jsonapi.org/format/#document-meta"&gt;meta object&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;A document &lt;strong&gt;MUST&lt;/strong&gt; contain at least one of the following top-level members:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;data&lt;/code&gt;: the document’s “primary data”&lt;/li&gt;
&lt;li&gt;​&lt;code&gt;errors&lt;/code&gt;: an array of &lt;a href="http://jsonapi.org/format/#errors"&gt;error objects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;meta&lt;/code&gt;: a &lt;a href="http://jsonapi.org/format/#document-meta"&gt;meta object&lt;/a&gt; that contains non-standard meta-information.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;data&lt;/code&gt;와 &lt;code&gt;errors&lt;/code&gt; 멤버는 동일한 문서에 공존할 수 없습니다. &amp;lt;&lt;strong&gt;MUST NOT&lt;/strong&gt;&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The members &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;errors&lt;/code&gt; &lt;strong&gt;MUST NOT&lt;/strong&gt; coexist in the same document.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;문서에서는 다음 내용과 같은 최상위 멤버가 포함될 수 있습니다 &amp;lt;&lt;strong&gt;MAY&lt;/strong&gt;&amp;gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;jsonapi&lt;/code&gt;: 서버에서 구현을 기술하는 오브젝트&lt;/li&gt;
&lt;li&gt;&lt;code&gt;links&lt;/code&gt;: &lt;a href="http://jsonapi.org/format/#document-links"&gt;links object&lt;/a&gt;는 일차 데이터와 연결됩니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;included&lt;/code&gt;: 포함된 리소스중 각기 다르거나 일차 데이터와 관련된 &lt;a href="http://jsonapi.org/format/#document-resource-objects"&gt;resource objects&lt;/a&gt;에 대한 배열.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;A document &lt;strong&gt;MAY&lt;/strong&gt; contain any of these top-level members:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;jsonapi&lt;/code&gt;: an object describing the server’s implementation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;links&lt;/code&gt;: a &lt;a href="http://jsonapi.org/format/#document-links"&gt;links object&lt;/a&gt; related to the primary data.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;included&lt;/code&gt;: an array of &lt;a href="http://jsonapi.org/format/#document-resource-objects"&gt;resource objects&lt;/a&gt; that are related to the primary data and/or each other (“included resources”).&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;문서에 최상위 &lt;code&gt;data&lt;/code&gt; 키가 포함되지 않은 경우, &lt;code&gt;included&lt;/code&gt; 멤버 중 하나에 존재할 수 없습니다. &amp;lt;&lt;strong&gt;MUST NOT&lt;/strong&gt;&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If a document does not contain a top-level &lt;code&gt;data&lt;/code&gt; key, the &lt;code&gt;included&lt;/code&gt; member &lt;strong&gt;MUST NOT&lt;/strong&gt; be present either.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;최상위 &lt;a href="http://jsonapi.org/format/#document-links"&gt;links object&lt;/a&gt;는 다음 맴버를 포함할 수 있습니다 &amp;lt;&lt;strong&gt;MAY&lt;/strong&gt;&amp;gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;self&lt;/code&gt;: 현재 응답 문서를 생성한 &lt;a href="http://jsonapi.org/format/#document-links"&gt;link&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;related&lt;/code&gt;: 일차 데이터와 리소스간 관계를 나타내는 &lt;a href="http://jsonapi.org/format/#document-resource-object-related-resource-links"&gt;related resource link&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;일차 데이터에 대한 &lt;a href="http://jsonapi.org/format/#fetching-pagination"&gt;pagination&lt;/a&gt; 링크.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;The top-level &lt;a href="http://jsonapi.org/format/#document-links"&gt;links object&lt;/a&gt; &lt;strong&gt;MAY&lt;/strong&gt; contain the following members:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;self&lt;/code&gt;: the &lt;a href="http://jsonapi.org/format/#document-links"&gt;link&lt;/a&gt; that generated the current response document.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;related&lt;/code&gt;: a &lt;a href="http://jsonapi.org/format/#document-resource-object-related-resource-links"&gt;related resource link&lt;/a&gt; when the primary data represents a resource relationship.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jsonapi.org/format/#fetching-pagination"&gt;pagination&lt;/a&gt; links for the primary data.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;문서에서 “일차 데이터”는 요청에의해 대상이되는 자원의 컬렉션이나 자원 관계를 나타냅니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The document’s “primary data” is a representation of the resource or collection of resources targeted by a request.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;일차 데이터는 다음 중 하나 입니다 &amp;lt;&lt;strong&gt;MUST&lt;/strong&gt;&amp;gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;단일 자원을 대상으로 요구하는 단일 &lt;a href="http://jsonapi.org/format/#document-resource-objects"&gt;resource object&lt;/a&gt;, 단일 &lt;a href="http://jsonapi.org/format/#document-resource-identifier-objects"&gt;resource identifier object&lt;/a&gt;, &lt;code&gt;null&lt;/code&gt;을 나타냅니다.&lt;/li&gt;
&lt;li&gt;타겟 리소스 컬렉션 요청에 대한 &lt;a href="http://jsonapi.org/format/#document-resource-objects"&gt;resource objects&lt;/a&gt; 배열, &lt;a href="http://jsonapi.org/format/#document-resource-identifier-objects"&gt;resource identifier objects&lt;/a&gt; 배열, 빈 배열 (&lt;code&gt;[]&lt;/code&gt;)를 나타냅니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Primary data &lt;strong&gt;MUST&lt;/strong&gt; be either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a single &lt;a href="http://jsonapi.org/format/#document-resource-objects"&gt;resource object&lt;/a&gt;, a single &lt;a href="http://jsonapi.org/format/#document-resource-identifier-objects"&gt;resource identifier object&lt;/a&gt;, or &lt;code&gt;null&lt;/code&gt;, for requests that target single resources&lt;/li&gt;
&lt;li&gt;an array of &lt;a href="http://jsonapi.org/format/#document-resource-objects"&gt;resource objects&lt;/a&gt;, an array of &lt;a href="http://jsonapi.org/format/#document-resource-identifier-objects"&gt;resource identifier objects&lt;/a&gt;, or an empty array (&lt;code&gt;[]&lt;/code&gt;), for requests that target resource collections&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;예를 들어, 다음 일차 데이터는 단일 리소스 오브젝트를 나타냅니다:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For example, the following primary data is a single resource object:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;articles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;attributes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="c1"&gt;// ... this article&amp;#39;s attributes&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;relationships&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="c1"&gt;// ... this article&amp;#39;s relationships&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;다음 일차 데이터는 동일한 리소스를 참조하는 단일 &lt;a href="http://jsonapi.org/format/#document-resource-identifier-objects"&gt;resource identifier object&lt;/a&gt;입니다:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The following primary data is a single &lt;a href="http://jsonapi.org/format/#document-resource-identifier-objects"&gt;resource identifier object&lt;/a&gt; that references the same resource:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;articles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;리소스에 대한 논리 컬렉션은 아이템 하나만 있거나 비어있더라도 배열로 표현합니다. &amp;lt;&lt;strong&gt;MUST&lt;/strong&gt;&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A logical collection of resources &lt;strong&gt;MUST&lt;/strong&gt; be represented as an array, even if it only contains one item or is empty.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="번역"></category><category term="json"></category><category term="api"></category><category term="specification"></category><category term="json api"></category><category term="스펙 문서"></category><category term="transelate"></category></entry><entry><title>JSON API Specification v1.0 (3) - Document Structure (1)</title><link href="https://ujuc.github.io/2016/07/26/json_api_specification_v1.0_(3)_-_document_structure_(1)/" rel="alternate"></link><published>2016-07-26T02:06:00+09:00</published><updated>2019-03-23T16:50:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2016-07-26:/2016/07/26/json_api_specification_v1.0_(3)_-_document_structure_(1)/</id><summary type="html">&lt;p&gt;JSON API에서 사용하는 문서 구조에 대해서 이야기한다. 너무 길어서 잘개 나눴다.&lt;/p&gt;</summary><content type="html">&lt;h1 id="5-document-structure"&gt;5. 문서 구조 (Document Structure)&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;이 세션에서는 미디어 타입 &lt;a href="http://www.iana.org/assignments/media-types/application/vnd.api+json"&gt;&lt;code&gt;application/vnd.api+json&lt;/code&gt;&lt;/a&gt;에서 확인가능한 JSON API 문서 구조에 대해 설명합니다. JSON API 문서는 JavaScript Object Notation (JSON) &lt;a href="http://tools.ietf.org/html/rfc7159"&gt;RFC7159&lt;/a&gt;에 정의 되어있습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This section describes the structure of a JSON API document, which is identified by the media type &lt;a href="http://www.iana.org/assignments/media-types/application/vnd.api+json"&gt;&lt;code&gt;application/vnd.api+json&lt;/code&gt;&lt;/a&gt;. JSON API documents are defined in JavaScript Object Notation (JSON) &lt;a href="http://tools.ietf.org/html/rfc7159"&gt;RFC7159&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;동일한 미디어 타입은 요청과 응답 문서에서 모두 사용되지만, 특정 상황에서는 한 곳에서나 다른 곳에 적용이 가능합니다. 이런 차이를 다음 내용으로 부릅니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Although the same media type is used for both request and response documents, certain aspects are only applicable to one or the other. These differences are called out below.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;별도로 명시하지 않는한, 사양에 정의된 객체는 임의의 추가 멤버를 포함할 수 없습니다. &amp;lt;&lt;strong&gt;MUST NOT&lt;/strong&gt;&amp;gt; 클라이언트와 서버 구현시 이 사양에서 인식되지 않는 멤버는 무시합니다. &amp;lt;&lt;strong&gt;MUST&lt;/strong&gt;&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Unless otherwise noted, objects defined by this specification &lt;strong&gt;MUST NOT&lt;/strong&gt; contain any additional members. Client and server implementations &lt;strong&gt;MUST&lt;/strong&gt; ignore members not recognized by this specification.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: 이러한 조건은 사양에 이것저것 더하고 변경을 통한 진화를 허용합니다.&lt;/p&gt;
&lt;p&gt;Note: These conditions allow this specification to evolve through additive changes.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="번역"></category><category term="json"></category><category term="api"></category><category term="specification"></category><category term="json api"></category><category term="스펙 문서"></category><category term="transelate"></category></entry><entry><title>JSON API Specification v1.0 (2)</title><link href="https://ujuc.github.io/2016/07/16/json_api_specification_v1.0_(2)/" rel="alternate"></link><published>2016-07-16T14:53:00+09:00</published><updated>2019-03-23T16:50:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2016-07-16:/2016/07/16/json_api_specification_v1.0_(2)/</id><summary type="html">&lt;p&gt;JSON API를 사용하는 서버와 클라이언트에서 처리를 해야되는 것들에 대해서 이야기한다.&lt;/p&gt;</summary><content type="html">&lt;p&gt;JSON API를 사용하는 서버와 클르이언트에서 처리를 해야되는 것들에 대해서 이야기한다.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id="4-content-negotiation"&gt;4. 컨텐츠 처리 (Content Negotiation)&lt;/h1&gt;
&lt;hr&gt;
&lt;h2 id="client-responsibilities"&gt;클라이언트 의무 사항 (Client Responsibilities)&lt;/h2&gt;
&lt;p&gt;클라이언트는 해더에 &lt;code&gt;Content-Type: application/vnd.api+json&lt;/code&gt;를 포함하고 다른 미디어 타입 매개변수를 포함하지 않는 요청 문서를 생성하여 모든 JSON API 데이터를 보내야 합니다. &amp;lt;&lt;strong&gt;MUST&lt;/strong&gt;&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Clients &lt;strong&gt;MUST&lt;/strong&gt; send all JSON API data in request documents with the header &lt;code&gt;Content-Type: application/vnd.api+json&lt;/code&gt; without any media type parameters.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;클라이언트는 &lt;code&gt;Accept&lt;/code&gt; 해더에 작성된 미디어 타입 매개변수 중 맨마지막 하나를 지정하여 JSON API 미디어 타입을 포함해야 합니다. &amp;lt;&lt;strong&gt;MUST&lt;/strong&gt;&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Clients that include the JSON API media type in their &lt;code&gt;Accept&lt;/code&gt; header &lt;strong&gt;MUST&lt;/strong&gt; specify the media type there at least once without any media type parameters.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;클라이언트는 응답 문서에 대한 &lt;code&gt;Content-Type&lt;/code&gt; 해더에서 받은 &lt;code&gt;application/vnd.api+json&lt;/code&gt; 미디어 타입에대해 어떠한 매개변수라도 무시합니다. &amp;lt;&lt;strong&gt;MUST&lt;/strong&gt;&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Clients &lt;strong&gt;MUST&lt;/strong&gt; ignore any parameters for the &lt;code&gt;application/vnd.api+json&lt;/code&gt; media type received in the &lt;code&gt;Content-Type&lt;/code&gt; header of response documents.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id="server-responsibilities"&gt;서버 의무 사항 (Server Responsibilities)&lt;/h2&gt;
&lt;p&gt;서버는 모든 미디어 타입 매개 변수를 지정하지 않고서 해더 &lt;code&gt;Content-Type: application/vnd.api+json&lt;/code&gt;​와 함께 응답 문서에 모든 JSON API 데이터를 전송합니다. &amp;lt;&lt;strong&gt;MUST&lt;/strong&gt;&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Servers &lt;strong&gt;MUST&lt;/strong&gt; send all JSON API data in response documents with the header &lt;code&gt;Content-Type: application/vnd.api+json&lt;/code&gt; without any media type parameters.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;서버는 요청이 임의의 미디어 타입 매개변수를 가지는 헤더 &lt;code&gt;Content-Type: application/vnd.api+json&lt;/code&gt;로 지정하면 &lt;code&gt;415 Unsupported Media Type&lt;/code&gt; 상태 코드로 응답합니다. &amp;lt;&lt;strong&gt;MUST&lt;/strong&gt;&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Servers &lt;strong&gt;MUST&lt;/strong&gt; respond with a &lt;code&gt;415 Unsupported Media Type&lt;/code&gt; status code if a request specifies the header &lt;code&gt;Content-Type: application/vnd.api+json&lt;/code&gt; with any media type parameters.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;서버는 요청한 &lt;code&gt;Accept&lt;/code&gt; 해더에 JSON API 미디어 타입을 포함하고 있으며 해당 미디어 타입에대한 모든 인스턴스에서 미디어 타입 매개변수가 수정된 경우, &lt;code&gt;406 Not Acceptable&lt;/code&gt; 상태 코드로 응답합니다. &amp;lt;&lt;strong&gt;MUST&lt;/strong&gt;&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Servers &lt;strong&gt;MUST&lt;/strong&gt; respond with a &lt;code&gt;406 Not Acceptable&lt;/code&gt; status code if a request’s &lt;code&gt;Accept&lt;/code&gt; header contains the JSON API media type and all instances of that media type are modified with media type parameters.&lt;/p&gt;
&lt;p&gt;Note: 컨텐츠 처리 요구사항은 향후 버전에서 확장된 처리 방법과 버전 관리를 위한 미디어 타입 매개 변수를 사용할 수 있도록 존재합니다.&lt;/p&gt;
&lt;p&gt;Note: The content negotiation requirements exist to allow future versions of this specification to use media type parameters for extension negotiation and versioning.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="번역"></category><category term="json"></category><category term="api"></category><category term="specification"></category><category term="json api"></category><category term="스펙 문서"></category><category term="transelate"></category></entry><entry><title>JSON API Specification v1.0 (1)</title><link href="https://ujuc.github.io/2016/07/16/json_api_specification_v1.0_(1)/" rel="alternate"></link><published>2016-07-16T12:08:00+09:00</published><updated>2019-03-23T16:50:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2016-07-16:/2016/07/16/json_api_specification_v1.0_(1)/</id><summary type="html">&lt;p&gt;API 쪽 문서를 볼일 이있어서 JSON API를 확인하였다. 그것에 대한 기능 문서 번역본. 나중에 보고 해야지&amp;hellip;&lt;/p&gt;</summary><content type="html">&lt;p&gt;JSON API 문서이다. 해당 문서는 &lt;a href="http://jsonapi.org/format/"&gt;여기서&lt;/a&gt; 확인이 가능하다. 라이센스는&lt;a href="https://creativecommons.org/publicdomain/zero/1.0/"&gt;퍼블릭 도메인 라이센스&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;나중에 번역한 것이 도움이 되길 바라며&amp;hellip;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id="1-status"&gt;1. 문서 상태 (Status)&lt;/h1&gt;
&lt;p&gt;이 페이지는 JSON API 마지막으로 공개된 버전 내용을 담고 있습니다. 현재버전은 1.0 입니다. JSON API 새로운 버전에서는 &lt;strong&gt;이전 문서와 호환을 위해&lt;/strong&gt; 삭제하지 않고, 오로지 추가만 됩니다. 추가 사항들은 우리 &lt;a href="http://discuss.jsonapi.org/"&gt;discussion forum&lt;/a&gt;에서 확인할수 있습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This page represents the latest published version of JSON API, which is currently version 1.0. New versions of JSON API &lt;strong&gt;will always be backwards compatible&lt;/strong&gt; using a never remove, only add strategy. Additions can be proposed in our &lt;a href="http://discuss.jsonapi.org/"&gt;discussion forum&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;스펙 문서상 에러를 발견하거나, 구현한다면 이슈를 등록하거나 PR을 &lt;a href="https://github.com/json-api/json-api"&gt;GitHub repository&lt;/a&gt;로 해주면 됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you catch an error in the specification’s text, or if you write an implementation, please let us know by opening an issue or pull request at our &lt;a href="https://github.com/json-api/json-api"&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id="2-introduction"&gt;2. 소개 (Introduction)&lt;/h1&gt;
&lt;p&gt;JSON API는 클라이언트에서 요구하는 리소스를 제공하거나 수정하는 것에 대해 서버가 어떻게 대응 할 것인지에 대한 사양입니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JSON API is a specification for how a client should request that resources be fetched or modified, and how a server should respond to those requests.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;JSON API는 클라이언트와 서버사이에서 전송되는 데이터 총량과 요청 수에대해 최소화하도록 설계되었습니다. 가독성, 유연성, 검색 기능을 잃지 않고 효율성을 높일수 있습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JSON API is designed to minimize both the number of requests and the amount of data transmitted between clients and servers. This efficiency is achieved without compromising readability, flexibility, or discoverability.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;JSON API는 데이터를 변경하여 JSON API 미디어 타입 (application/vnd.api+json) 을 사용하게 하는것이 필요합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JSON API requires use of the JSON API media type (&lt;a href="http://www.iana.org/assignments/media-types/application/vnd.api+json"&gt;application/vnd.api+json&lt;/a&gt;) for exchanging data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id="3-conventions"&gt;3. 규칙 (Conventions)&lt;/h1&gt;
&lt;p&gt;The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in &lt;a href="http://tools.ietf.org/html/rfc2119"&gt;RFC 2119&lt;/a&gt; (&lt;a href="http://techhtml.github.io/rfc/RFC2119.html"&gt;RFC 2119 한국어 번역&lt;/a&gt;).&lt;/p&gt;</content><category term="번역"></category><category term="json"></category><category term="api"></category><category term="specification"></category><category term="json api"></category><category term="스펙 문서"></category><category term="transelate"></category></entry><entry><title>Spec Architecture Design Guide Restructure</title><link href="https://ujuc.github.io/2016/05/29/spec-architecture-design-guide-restructure%20(%EB%B2%88%EC%97%AD)/" rel="alternate"></link><published>2016-05-29T13:43:00+09:00</published><updated>2016-05-29T13:43:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2016-05-29:/2016/05/29/spec-architecture-design-guide-restructure (번역)/</id><summary type="html">&lt;p&gt;이번 스펙문서로 Architecture Design Guide를 새롭게 구축하는 것에 대해서 올라왔다.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://docs.openstack.org/arch-design/"&gt;Architecture Design Guide&lt;/a&gt;가 새롭게 작성이되려나보다. 그것에 대한 스펙문서 번역이다.&lt;/p&gt;
&lt;p&gt;원문: &lt;a href="http://specs.openstack.org/openstack/docs-specs/specs/newton/arch-guide-restructure.html"&gt;Architecture Design Guide Restructure&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id="_1"&gt;문제점 설명&lt;/h2&gt;
&lt;p&gt;지금의 Architecture Design Giude는 주로 사용 사례를 중심으로 구성되어 있습니다. 그러나 OpenStack 클라우드를 설계함에 있어 여러 사용 사례에서 기능들이 조합되어 사용되는 경우가 있습니다.&lt;/p&gt;
&lt;p&gt;사용자가 모든 요구 사항을 고려할 수 있는 OpenStack 클라우드 아키텍처를 결정하는 것을 돕기위한 정보로 재구성하는 것이 필요합니다. 개발중이거나 단계적으로 반영을 하거나, 실제 서비스하고 있는 환경에서 OpenStack을 설계할때 필요한 정보를 추가해야합니다. 이번 제안은 클라우드에대한 아키텍처 컨셉과 다양한 OpenStack 프로젝트 추상화에 대한 더 상세한 구조를 개발하는 것입니다. 이것을 통해서 쉽게 가이드를 유지하고 업데이트 할 수 있습니다.&lt;/p&gt;
&lt;h2 id="_2"&gt;변경사항 제안&lt;/h2&gt;
&lt;p&gt;이번 가이드에서 제안되는 구조는 일반적인 클라우드 사용사례, 일반적인 아키텍처 컨셉, 주요 클라우드 아키텍처 구성요소에서 장애가 발생하였을때에 대한 자세한 설명과 그것에 대한 설계 방법 등을 설명합니다.&lt;/p&gt;
&lt;p&gt;각 장은 다음과 같이 설계됩니다:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Technical Detail&lt;/li&gt;
&lt;li&gt;Capacity and Scale&lt;/li&gt;
&lt;li&gt;High Availablility&lt;/li&gt;
&lt;li&gt;Operator Requirements&lt;/li&gt;
&lt;li&gt;Deployment Considerations&lt;/li&gt;
&lt;li&gt;Maintenance Considerations&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;표제에서 제공될 정보에 대한 형식은 따로 가이드라인을 제공할 예정입니다. 이것을 이용하여 정보를 호출하기위해 특정한 필요학 있는 경우에만 사용됩니다.&lt;/p&gt;
&lt;h2 id="_3"&gt;목차 제안&lt;/h2&gt;
&lt;p&gt;새로운 Architecture Design Guide는 다음과 같이 새롭게 구성됩니다:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;General Overview&lt;/li&gt;
&lt;li&gt;Use Cases&lt;ol&gt;
&lt;li&gt;Development Cloud&lt;ol&gt;
&lt;li&gt;Stackeholder&lt;/li&gt;
&lt;li&gt;User Stories&lt;/li&gt;
&lt;li&gt;Designe Model&lt;/li&gt;
&lt;li&gt;Component Block Diagram&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;General Compute Cloud&lt;ol&gt;
&lt;li&gt;Stakeholders&lt;/li&gt;
&lt;li&gt;User Stories&lt;/li&gt;
&lt;li&gt;Design Model&lt;/li&gt;
&lt;li&gt;Component Block Diagram&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Web Scale Cloud&lt;ol&gt;
&lt;li&gt;Stakeholders&lt;/li&gt;
&lt;li&gt;User Stories&lt;/li&gt;
&lt;li&gt;Design Model&lt;/li&gt;
&lt;li&gt;Component Block Diagram&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Public Cloud&lt;ol&gt;
&lt;li&gt;Stakeholders&lt;/li&gt;
&lt;li&gt;User Stories&lt;/li&gt;
&lt;li&gt;Design Model&lt;/li&gt;
&lt;li&gt;Component Block Diagram&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;High Availability&lt;ol&gt;
&lt;li&gt;Overview&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Capacity and Scale&lt;ol&gt;
&lt;li&gt;Overview&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Design&lt;ol&gt;
&lt;li&gt;Compute&lt;/li&gt;
&lt;li&gt;Storage&lt;/li&gt;
&lt;li&gt;Networking&lt;/li&gt;
&lt;li&gt;Identity&lt;/li&gt;
&lt;li&gt;Iamge&lt;/li&gt;
&lt;li&gt;Control Plane&lt;/li&gt;
&lt;li&gt;Dashboard and APIs&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;뭐 이정도까지&amp;hellip; 더해봤자&amp;hellip; 의미가 없다&amp;hellip;&lt;/p&gt;</content><category term="번역"></category><category term="openstack"></category><category term="documents"></category><category term="spec"></category><category term="architecture design guide"></category></entry><entry><title>Tig Manual</title><link href="https://ujuc.github.io/2016/02/10/tig-manual/" rel="alternate"></link><published>2016-02-10T02:08:00+09:00</published><updated>2019-03-23T16:50:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2016-02-10:/2016/02/10/tig-manual/</id><summary type="html">&lt;p&gt;Tig 메뉴얼 번역 축약본&lt;/p&gt;</summary><content type="html">&lt;p&gt;Git을 사용하기 위한 프로그램들이 많다. 그중에서도 번역하려고 하는 것은 Tig. 터미널 환경에 맞게 구성이되어 있으며, Git CLI와 같이 사용하면 왠만한 GUI 프로그램 못지않은 사용성을 보여주고 있다. 단지&amp;hellip; 명령어가 많아질 뿐이다&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jonas/tig"&gt;Tig Homepage&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tig snap" src="https://ujuc.github.io/img/2016-02-10_tig_snap.png"&gt;&lt;/p&gt;
&lt;p&gt;실행시키면 위와 같은 모습을 보여주게된다. 간단한 설명은 여기까지하고 메뉴얼이나 보자. 다수의 의역이 포함되어있다. 안할려고 했으나 하루죙일 하다보니&amp;hellip; 그리고 한국어로 곧장 옮기니 이상한 부분이 있어&amp;hellip;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="http://jonas.nitro.dk/tig/manual.html"&gt;The Tig Manual&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;이 문서는 Tig에 대한 메뉴얼이며, Tig는 Git에 대한 ncurses 기반의 텍스트 모드 인터페이스로 작성되었습니다. Tig는 Git 저장소의 변화를 확인하고 추가적으로 다양한 Git 명령에 대한 출력 내용을 확인할 수 있는 pager로 사용할 수 있습니다. Pager로 사용할 경우, stdin에서 입력을 표시하고, 생상을 추가할 수 있습니다.&lt;/p&gt;
&lt;p&gt;저장소 확인용으로 사용할 경우, Tig는 기초적인 Git 명령을 사용하여 요약된 커밋 로그, 로그 메시지에서의 커밋 내용, diffstat, diff 와 같은 다양한 뷰를 이용하여 사용자에게 보여줍니다.&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#1-calling-conventions"&gt;1. Calling Conventions (호출 규칙)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#pager-mode-pager"&gt;Pager Mode (Pager 모드)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#git-command-options-git"&gt;Git Command Options (Git 명령어 옵션)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-the-viewer"&gt;2. The Viewer (뷰어)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#views"&gt;Views (뷰)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#browsing-state-and-user-defined-commands"&gt;Browsing State and User-defined Commands (상태 확인과 사용자 정의 명령어)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#title-windows"&gt;Title Windows (제목 윈도우)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#3-environment-variables"&gt;3. Environment Variables (환경 변수)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#configuration-files"&gt;Configuration Files (구성 파일)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#repository-references"&gt;Repository References (저장소 참조)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#diff-options-diff"&gt;Diff options (Diff 옵션)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#4-default-keybindings"&gt;4. Default Keybindings (기본 키 바인딩)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#view-switching"&gt;View Switching (뷰 전환)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#view-manipulation"&gt;View Manipulation (뷰 조작)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#view-specific-actions"&gt;View Specific Actions (뷰 지정 동작)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cursor-navigation"&gt;Cursor Navigation (커서 네비게이션)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#scrolling"&gt;Scrolling (스크롤링)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#searching"&gt;Searching (검색)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#misc"&gt;Misc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prompt"&gt;Prompt (프롬프트)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#external-commands"&gt;External Commands (외부 명령어)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#5-revision-specification"&gt;5. Revision Specification (리버전 사항)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#limit-by-path-name"&gt;Limit by Path Name (패치 이름 제한)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#limit-by-date-or-number"&gt;Limit by Date or Number (날짜나 숫자 제한)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#limiting-by-commit-ranges"&gt;Limiting by Commit Ranges (커밋 범위 제한)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#limiting-by-reachability"&gt;Limiting by Reachability (도달 가능 제한)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#combining-revisions-specification"&gt;Combining Revisions Specification (변경 사항 연결)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#examining-all-repository-references"&gt;Examining All Repository References (모든 저장소 참조 검사)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#6-more-information"&gt;6. More Information (정보를 더 원하시면)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#7-copyright"&gt;7. Copyright (저작권)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#8-see-also"&gt;8. See Also (더보기)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="1-calling-conventions"&gt;1. Calling Conventions (호출 규칙)&lt;/h2&gt;
&lt;h3 id="pager-mode-pager"&gt;Pager Mode (Pager 모드)&lt;/h3&gt;
&lt;p&gt;Stdin 파이프를 사용할 경우, 모든 로그나 diff 옵션은 무시되고 pager 뷰는 stdin으로 들어온 데이터를 로딩하여 확인할 수 있습니다. Pager 모드는 다양한 Git 명령에 대한 출력값을 색상을 추가하여 확인할 수 있도록 도와줍니다.&lt;/p&gt;
&lt;p&gt;예로 &lt;code&gt;git-show(1)&lt;/code&gt; 명령에 대한 출력을 색상을 추가한 버전으로 보고 싶다면:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;show&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tig
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git-show&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="git-show" src="https://ujuc.github.io/img/2016-02-10_tig_1-1.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git-show | tig&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="git-show|tig" src="https://ujuc.github.io/img/2016-02-10_tig_1-2.png"&gt;&lt;/p&gt;
&lt;h3 id="git-command-options-git"&gt;Git Command Options (Git 명령어 옵션)&lt;/h3&gt;
&lt;p&gt;명령 줄에서 모든 Git 명령어 옵션은 주어진 명령에 전달되고 셸에 모두 전달되기 전에 인용 셸을 통과할 것입니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;주의: 메인 뷰에 대한 옵션을 지정하는 경우엔, 메인 뷰에서 사용하는 형식으로 자동 설정되는 &lt;code&gt;--pretty&lt;/code&gt; 옵션을 사용할 수 없습니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;커밋과 author, 커미터 정보를 모두 보여주는 방법에 대한 예:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;tig&lt;span class="w"&gt; &lt;/span&gt;show&lt;span class="w"&gt; &lt;/span&gt;--pretty&lt;span class="o"&gt;=&lt;/span&gt;fuller
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Git 명령에 대해 지원되는 변경 옵션 지원에 대한 소개는 &lt;a href="#5-revision-specification"&gt;지정 리버전&lt;/a&gt; 섹션을 참조하세요. 특정 Git 명령 옵션에 대한 자세한 설명은 해당 명령의 맨 페이지를 참조하세요.&lt;/p&gt;
&lt;h2 id="2-the-viewer"&gt;2. The Viewer (뷰어)&lt;/h2&gt;
&lt;p&gt;디스플레이는 하나 이상의 뷰와 스크린으로 구성되어있으며, 맨 마지막 라인은 상태 윈도우로 사용됩니다. 기본 값은 한번에 하나의 뷰만을 보여줍니다. 하지만 메인과 로그 뷰로 나눠서 커밋 diff를 확인할 수 있습니다.&lt;/p&gt;
&lt;p&gt;현재 라인이 커밋 라인일때, 로그 뷰에서 엔터키를 누르게되면 다음과 같은 명령이 실행되는 것과 같습니다:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;commit&lt;span class="w"&gt; &lt;/span&gt;4d55caff4cc89335192f3e566004b4ceef572521
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;뷰를 나눠서 볼 수 있는데, 로그 뷰는 윈도우 상단에, diff 뷰는 윈도우 하단에 위치시킬 수 있습니다. 탭을 눌러 두 뷰사이를 왔다갔다 할 수 있습니다. 로그 뷰만 보려면 &lt;code&gt;l&lt;/code&gt;를 누르면 됩니다.&lt;/p&gt;
&lt;h3 id="views"&gt;Views (뷰)&lt;/h3&gt;
&lt;p&gt;저장소에서 여러가지 &lt;code&gt;views&lt;/code&gt;를 볼 수 있습니다. 각 뷰는 확장 명령, &lt;code&gt;git log&lt;/code&gt;, &lt;code&gt;git diff&lt;/code&gt;, &lt;code&gt;git show&lt;/code&gt;로부터 나오는 출력 값에 기반하여 보여줍니다.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;메인 뷰&lt;/dt&gt;
&lt;dd&gt;기본 뷰이며, 리버전의 선택된 목록에서 각 커밋을 요약하여 보여줍니다. 요약한 내용에서는 author 날짜, author, 로그 메시지 첫 줄을 포함하고 있습니다. 추가적으로 태그와 같은 저장소 참조 표시도 같이 표시됩니다.&lt;/dd&gt;
&lt;dt&gt;로그 뷰&lt;/dt&gt;
&lt;dd&gt;전체 로그 메시지와 diffstat에대한 리버전 로그를 보여주는 다양한 뷰를 제공합니다.&lt;/dd&gt;
&lt;dt&gt;Diff 뷰&lt;/dt&gt;
&lt;dd&gt;현재 작업 트리에 대한 diff, 즉, 마지막 커밋이후 변화분, 로그 메시지, diffstat, diff에 대한 커밋 diff 완료 내용을 나타냅니다.&lt;/dd&gt;
&lt;dt&gt;트리 뷰&lt;/dt&gt;
&lt;dd&gt;디렉토리 목록을 트리로 표현하여 현재 리버전에대한 하위 디렉토리로 내려가며 확인하거나 올라오며 확인할 수 있으며 파일의 blob에 대해서도 확인이 가능합니다.&lt;/dd&gt;
&lt;dt&gt;Blob 뷰&lt;/dt&gt;
&lt;dd&gt;파일 내용이나 파일 이름에 대한 관련 데이터의 &amp;ldquo;blob&amp;rdquo;을 보여줍니다.&lt;/dd&gt;
&lt;dt&gt;Blame 뷰&lt;/dt&gt;
&lt;dd&gt;파일 내용의 주석이나 커밋에 대한 blam을 보여줍니다.&lt;/dd&gt;
&lt;dt&gt;Refs 뷰&lt;/dt&gt;
&lt;dd&gt;저장소에서 브런치, 리모트, 태그를 보여줍니다.&lt;/dd&gt;
&lt;dt&gt;Status 뷰&lt;/dt&gt;
&lt;dd&gt;작업 트리내의 파일 상태나 staged/unstaged 변화분 확인과 추적되지 않는 파일의 추가를 좀 더 쉽게 보여줍니다.&lt;/dd&gt;
&lt;dt&gt;Stage 뷰&lt;/dt&gt;
&lt;dd&gt;stage된 변화분, unstage된 파일의 추적분, 추적되지 않는 파일의 내용에 대한 diff를 보여줍니다.&lt;/dd&gt;
&lt;dt&gt;Stash 뷰&lt;/dt&gt;
&lt;dd&gt;저장소의 Stash 목록을 보여줍니다.&lt;/dd&gt;
&lt;dt&gt;Grep 뷰&lt;/dt&gt;
&lt;dd&gt;검색 패턴과 동일한 내용으로 모든 라인과 파일 목록을 보여줍니다.&lt;/dd&gt;
&lt;dt&gt;Pager 뷰&lt;/dt&gt;
&lt;dd&gt;Stdin으로 입력과 내부 프롬프트에서 입력된 Git 명령어로부터 출력 모두를 보여주는데 사용됩니다.&lt;/dd&gt;
&lt;dt&gt;도움말 뷰&lt;/dt&gt;
&lt;dd&gt;키 바인딩에 대한 간단한 참조를 보여줍니다.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id="browsing-state-and-user-defined-commands"&gt;Browsing State and User-defined Commands (상태 확인과 사용자 정의 명령어)&lt;/h3&gt;
&lt;p&gt;뷰어는 head와 커밋 ID 모두를 추적하고, 현재 상태를 보여줍니다. 커밋 ID는 커서 라인에 따라가며 다른 커밋을 선택할때마다 강조표시가 변경됩니다. 커밋 ID가 변경되면, diff 뷰에선 열때마다 재로드됩니다. Head ID는 지나온 로그를 보면서 리버전된 것이 나타내는 메인과 로그 뷰를 확인할때 사용됩니다.&lt;/p&gt;
&lt;p&gt;Tig에서 명령을 사용하거나 제공하는 명령을 구성할 수 있습니다. &lt;a href="#3-environment-variables"&gt;환경 변수&lt;/a&gt;의 일부와 &lt;a href="#external-commands"&gt;외부 명령&lt;/a&gt;을 사용할 수 있습니다. 사용자 정의 명령의 경우 다음 변수들을 이용하여 현재 브라우징 상태에 대한 참조 인자로 사용할 수 있습니다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: left;"&gt;변수 값&lt;/th&gt;
&lt;th style="text-align: left;"&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;%(head)&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;현재 보여지는 &lt;code&gt;haed&lt;/code&gt; ID. 기본값은 &lt;code&gt;HEAD&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;%(commit)&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;현재 선택된 커밋 ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;%(blob)&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;현재 선택된 blob ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;%(branch)&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;현재 선택된 브런치 이름&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;%(stash)&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;현재 선택된 stash 이름&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;%(directory)&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;현재 트리 뷰에서 보여지는 위치, 루트 디렉토리일 경우, 빈칸으로 표시&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;%(file)&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;현재 선택된 파일&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;%(lineno)&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;현재 선택된 라인 번호. 기본 값은 &lt;code&gt;0&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;%(ref)&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;참조에서 재공되는 blame 또는 정의되지 않았을 경우, &lt;code&gt;HEAD&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;%(revargs)&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;명령 라인에서 리버전 인수 값&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;%(fileargs)&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;명령 라인에서 파일 인수 값&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;%(cmdlineargs)&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;명령 라인에서 다른 옵션 인자 값&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;%(diffargs)&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;diff-options&lt;/code&gt;나 diff 뷰에 대한 &lt;code&gt;TIG_DIFF_OPTS&lt;/code&gt;에서 사용되는 옵션&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;%(logargs)&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Blame 뷰에 대한 &lt;code&gt;blame-options&lt;/code&gt;에서 사용된 옵션&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;%(mainargs)&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;로그 뷰에 대한 &lt;code&gt;log-options&lt;/code&gt;에서 사용된 옵션&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;%(prompt)&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;인자 값에 대한 프롬프트&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;사용자 정의 명령어 예제들:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;마지막 커밋에 대해 amend 적용:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;bind&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;generic&lt;span class="w"&gt; &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;!git&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;--amend
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;크립 보드에서 커밋 ID 복사:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;bind&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;generic&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;!@sh&lt;span class="w"&gt; &lt;/span&gt;-c&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;echo -n %(commit) | xclip -selection c&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;리뷰 즁 현재 커밋에서 사용된 노트 추가/수정:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;bind&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;generic&lt;span class="w"&gt; &lt;/span&gt;T&lt;span class="w"&gt; &lt;/span&gt;!git&lt;span class="w"&gt; &lt;/span&gt;notes&lt;span class="w"&gt; &lt;/span&gt;edit&lt;span class="w"&gt; &lt;/span&gt;%&lt;span class="o"&gt;(&lt;/span&gt;commit&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Git 대화형으로 파일 내용에 세밀한 staging 추가 입력:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;bind&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;generic&lt;span class="w"&gt; &lt;/span&gt;I&lt;span class="w"&gt; &lt;/span&gt;!git&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;%&lt;span class="o"&gt;(&lt;/span&gt;file&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;선택된 브런치의 최상위에서 현재 브런치로 리배이스:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;bind&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;refs&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;!git&lt;span class="w"&gt; &lt;/span&gt;rebase&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;%&lt;span class="o"&gt;(&lt;/span&gt;branch&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="title-windows"&gt;Title Windows (제목 윈도우)&lt;/h3&gt;
&lt;p&gt;각 뷰는 뷰 이름에 대한 제목 윈도우를 가집니다. 가능하다면 현재 커밋 ID로도 나태낼 수 있으며, 뷰에서는 다음과 같이 위치됩니다:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;main&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;c622eefaa485995320bc743431bae0d497b1d875&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;61&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;%&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;기본 값으로 현재 뷰의 제목은 굵은 폰트를 사용하여 강조됩니다. 긴 로딩이 있는 뷰의 경우(3초 이상), 로딩이 시작된 시간으로 부터의 시간이 추가되어 보여집니다:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;main&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;77d9e40fbcea3238015aea403e06f61542df9a31&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;779&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;%&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;5s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="3-environment-variables"&gt;3. Environment Variables (환경 변수)&lt;/h2&gt;
&lt;p&gt;Git 인터페이스에 관련된 몇가지 옵션을 환경 옵션을 통해 구성할 수 있습니다.&lt;/p&gt;
&lt;h3 id="configuration-files"&gt;Configuration Files (구성 파일)&lt;/h3&gt;
&lt;p&gt;시작시 Tig는 시스템 전체 구성 파일(기본 값 &lt;code&gt;{sysconfigdir}/tigrc&lt;/code&gt;)을 읽은 다음 사용자 구성 파일(기본 값 &lt;code&gt;~/.tigrc&lt;/code&gt;)을 읽습니다. 이 파일 중 하나의 경로를 다음과 같은 환경 변수를 이용하여 재정의 할 수 있습니다:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;TIGRC_USER&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;사용자 구성 파일 위치&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;TIGRC_SYSTEM&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;시스템 전체 구성 파일 위치&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id="repository-references"&gt;Repository References (저장소 참조)&lt;/h3&gt;
&lt;p&gt;태그와 브런치 head가 참조하는 커밋은  &lt;code&gt;[&lt;/code&gt;과 &lt;code&gt;]&lt;/code&gt;에 둘러쌓여 참조 이름으로 표시됩니다:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="m"&gt;2006&lt;/span&gt;-03-26&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;19&lt;/span&gt;:42&lt;span class="w"&gt; &lt;/span&gt;Petr&lt;span class="w"&gt; &lt;/span&gt;Baudis&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;cogito-0.17.1&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Cogito&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.17.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;브런치가 보여지는 것을 제한하길 원한다면, 보여질 브런치의 이름이 &lt;code&gt;master&lt;/code&gt;이거나 &lt;code&gt;feature/&lt;/code&gt; 로 접두어로 시작하는 경우엔 다음과 같이 변수를 설정할 수 있습니다:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;TIG_LS_REMOTE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;git ls-remote . master feature/*&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tig
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;또는 여러분의 환경에서 영구적으로 변수를 설하여 사용할 수 있습니다.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;TIG_LS_REMOTE&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;모든 저장소에 대한 참조를 검색하는 명령을 설정합니다. 명령을 사용하게 되면 &lt;code&gt;git-ls-remote(1)&lt;/code&gt; 과같은 포맷으로 데이터를 출력할 수 있습니다. 기본 값은 다음과 같습니다:&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;ls-remote&lt;span class="w"&gt; &lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id="diff-options-diff"&gt;Diff options (Diff 옵션)&lt;/h3&gt;
&lt;p&gt;Diff 뷰에 대해 diff를 어떻게 표시할 것인가에 대한 내용으로 수정이 가능합니다. 예를 들어 커멧과 author 날짜를 상대 날짜와 같이 보길 원한다면:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;TIG_DIFF_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--relative-date&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tig
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;또는 여러분의 환경에서 영구적으로 변수를 설정하여 사용할 수 있습니다.&lt;/p&gt;
&lt;h2 id="4-default-keybindings"&gt;4. Default Keybindings (기본 키 바인딩)&lt;/h2&gt;
&lt;p&gt;기본 키 바인딩에 대해서는 아래와 같습니다.&lt;/p&gt;
&lt;h3 id="view-switching"&gt;View Switching (뷰 전환)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;m&lt;/code&gt; | 메인 뷰로 전환&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="tig main view" src="https://ujuc.github.io/img/2016-02-10_tig_2-1_main.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt; | diff 뷰로 전환&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="tig diff view" src="https://ujuc.github.io/img/2016-02-10_tig_2-2_diff.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;l&lt;/code&gt; | 로그 뷰로 전환&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="tig log view" src="https://ujuc.github.io/img/2016-02-10_tig_2-3_log.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;p&lt;/code&gt; | pager 뷰로 전환&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="tig parger view" src="https://ujuc.github.io/img/2016-02-10_tig_2-4_pager.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;t&lt;/code&gt; | 디렉토리 트리 뷰로 전환&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="tig tree view" src="https://ujuc.github.io/img/2016-02-10_tig_2-5_tree.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;f&lt;/code&gt; | 파일 blob 뷰로 전환&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="tig file blob view" src="https://ujuc.github.io/img/2016-02-10_tig_2-6_file.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;g&lt;/code&gt; | grep 뷰로 전환&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="tig grep view" src="https://ujuc.github.io/img/2016-02-10_tig_2-7_grep.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;b&lt;/code&gt; | blame 뷰로 전환&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="tig blame view" src="https://ujuc.github.io/img/2016-02-10_tig_2-8_blame.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;r&lt;/code&gt; | refs 뷰로 전환&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="tig refs view" src="https://ujuc.github.io/img/2016-02-10_tig_2-9_refs.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;y&lt;/code&gt; | stash 뷰로 전환&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="tig stash view" src="https://ujuc.github.io/img/2016-02-10_tig_2-10_stash.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;h&lt;/code&gt; | 도움말 뷰로 전환&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="tig help view" src="https://ujuc.github.io/img/2016-02-10_tig_2-11_help.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;s&lt;/code&gt; | status 뷰로 전환&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="tig status view" src="https://ujuc.github.io/img/2016-02-10_tig_2-12_status.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;c&lt;/code&gt; | stage 뷰로 전환&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="tig stage view" src="https://ujuc.github.io/img/2016-02-10_tig_2-13_stage.png"&gt;&lt;/p&gt;
&lt;h3 id="view-manipulation"&gt;View Manipulation (뷰 조작)&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: left;"&gt;키&lt;/th&gt;
&lt;th style="text-align: left;"&gt;동작&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;q&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;뷰를 닫는다. 여러뷰가 열려있다면, 뷰 스택 안에서 이전 뷰로 되돌아가게 된다. 마지막 뷰라면, Tig에서 나오게 됨. &lt;code&gt;Q&lt;/code&gt;를 이용하면 모든 뷰를 닫는다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;Enter&lt;/td&gt;
&lt;td style="text-align: left;"&gt;이 키는 현재보고 있는 뷰에서 &amp;ldquo;상황에 맞게(context sensitive)&amp;rdquo; 동작합니다. 커밋줄에서의 로그 뷰나 메인 뷰일땐 뷰를 분활하여 커밋 diff를 보여줍니다. diff 뷰에서는 간단하게 한줄을 내리는데 사용됩니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;Tab&lt;/td&gt;
&lt;td style="text-align: left;"&gt;다음 뷰로 전환&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;R&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;현재 뷰를 리로드하거나 새로고침&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;O&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;현재 뷰를 화면에 꽉차도록&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;Up&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&amp;ldquo;상황에 맞게(context sensitive)&amp;rdquo; 작동하며, 한 줄 위로 이동합니다. 그러나 메인 뷰에서(split이나 전체 화면에서) diff 뷰를 열경우, 메인 뷰에서는 이전 커밋으로 커서를 변경하고 해당 diff 뷰를 보여주게 됩니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;Down&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&lt;em&gt;Up&lt;/em&gt;과 동일하며 단지 아래로 내려갑니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;,&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;상위로 이동합니다. 트리 뷰에서는 상위 디렉토리로 이동하게 됩니다. blame 뷰에서는 상위 커밋에 대한 blame가 표시됩니다. 머지의 경우, 상위가 쿼리됩니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="view-specific-actions"&gt;View Specific Actions (뷰 지정 동작)&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: left;"&gt;키&lt;/th&gt;
&lt;th style="text-align: left;"&gt;동작&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;u&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;파일 상태를 업데이트 합니다. Status 뷰에서는 다음 커밋에 대해 추가하지 않은 파일이나 stage 변경 파일에 대해서 추가할 수 있습니다.(&lt;code&gt;git-add &amp;lt;filename&amp;gt;&lt;/code&gt;과 동일한 작업입니다.) Stage 뷰에서는 diff 청크 라인에서는 다음 커밋에 대한 청크만 stage 합니다. diff에 표시되는 모든 변화가 diff 청크 라인에서 stage 되지는 않습니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;M&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;git-mergetool(1)&lt;/code&gt;을 실행하여 머지되지 않은 파일을 해결합니다. 주의, 원하는 머지 도구를 사용하기 위해 초기 구성이 필요할 수 있습니다. 올바르게 작동하는지 확인하세요. &lt;code&gt;git-mergetool(1)&lt;/code&gt;의 맨페이지를 확인하세요.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;!&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Unstage된 변경을 파일에서 체크아웃합니다. 마지막 커밋한 콘텐츠가 포함된 파일을 재설정합니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Stage 싱글 diff 라인&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;@&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Stage 뷰에서 다음 청크로 이동&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;]&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;diff 콘텍스트 확장&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;[&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;diff 콘텍스트 축소&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="cursor-navigation"&gt;Cursor Navigation (커서 네비게이션)&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: left;"&gt;키&lt;/th&gt;
&lt;th style="text-align: left;"&gt;동작&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;k&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;커서 한 라인 위로 이동&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;j&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;커서 한라인 아래로 이동&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;PgUp, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;커서 한 페이지 위로 이동&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;PgDown, Space&lt;/td&gt;
&lt;td style="text-align: left;"&gt;커서 한 페이지 아래로 이동&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;End&lt;/td&gt;
&lt;td style="text-align: left;"&gt;마지막 라인으로 점프&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;Home&lt;/td&gt;
&lt;td style="text-align: left;"&gt;첫 라인으로 점프&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="scrolling"&gt;Scrolling (스크롤링)&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: left;"&gt;키&lt;/th&gt;
&lt;th style="text-align: left;"&gt;동작&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;Insert&lt;/td&gt;
&lt;td style="text-align: left;"&gt;뷰 한 라인 위로 스크롤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;Delete&lt;/td&gt;
&lt;td style="text-align: left;"&gt;뷰 한 라인 아래로 스크롤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;ScrBack&lt;/td&gt;
&lt;td style="text-align: left;"&gt;뷰 한 페이지 위로 스크롤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;ScrFwd&lt;/td&gt;
&lt;td style="text-align: left;"&gt;뷰 한 페이지 아래로 스크롤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;Left&lt;/td&gt;
&lt;td style="text-align: left;"&gt;뷰 한 컬럼 왼쪽으로 스크롤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;Right&lt;/td&gt;
&lt;td style="text-align: left;"&gt;뷰 한 컬럼 오른쪽으로 스크롤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;|&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;뷰 첫 칼럼으로 스크롤&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="searching"&gt;Searching (검색)&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: left;"&gt;키&lt;/th&gt;
&lt;th style="text-align: left;"&gt;동작&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;/&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;뷰에서 검색. 열려진 프롬프트에서 정규식을 사용해서 찾을 수 있음.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;?&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;뷰에서 뒤에서부터 검색. 이것도 정규식 사용 가능.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;n&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;현재 검색 정규식과 동일한 다음 검색&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;N&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;현재 검색 정규식과 동일한 이전 검색&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="misc"&gt;Misc&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: left;"&gt;키&lt;/th&gt;
&lt;th style="text-align: left;"&gt;동작&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;Q&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;나가기&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;&amp;lt;C-L&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;스크린 새로고침&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;z&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;모든 백그라운드 로딩 정지. 리버전 로그의 제한 없이 긴 히스토리를 가진 저장소에서 Tig를 사용할때 필요할 수 있습니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;v&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;버전 확인&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;o&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;옵션 메뉴 열기&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;#&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;라인 번호 on/off&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;D&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;날짜 표시 on/off/short/relative/local&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;A&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Author 표기 on/off/abbreviated/email/email 사용자 이름&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;G&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;리버전 그래프 시각화 on/off&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;~&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;라인 그래프 모드 on/off&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;F&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;참조 표시 on/off (태그, 브런치 이름)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;W&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;diff에 대한 공백 무시 on/off&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;X&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;커밋 ID 표시 on/off&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;%&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;모든 diff 대신에 현재 선택한 파일에 대한 diff를 참조하기 위한 파일 필터링 on/off&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;$&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;커밋 제목 넘어감에 대한 강조표시 on/off&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;:&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;프롬프트 열기. 특정 명령어를 실행할 수 있도록 허용&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;e&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;에디터에서 파일 열기&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="prompt"&gt;Prompt (프롬프트)&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: left;"&gt;키&lt;/th&gt;
&lt;th style="text-align: left;"&gt;동작&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;:&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;특정 라인 번호로 점프. 예 &lt;code&gt;:80&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;:&amp;lt;sha&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;특정 커밋으로 점프. 예 &lt;code&gt;:2f12bcc&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;:&amp;lt;x&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;일치하는 키 바인딩 실행. 예 &lt;code&gt;:q&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;:!&amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Pager 내에서 시스템 명령어 실행. 예 &lt;code&gt;:!git log -p&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;:&amp;lt;action&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Tig 명령 실행. 예 &lt;code&gt;:edit&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;:save-display &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt;에서 현재 화면 저장&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;:save-options &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt;에서 현재 옵션 저장&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;:script &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt;로부터 명령어 실행&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;:exec &amp;lt;flags&amp;gt;&amp;lt;args...&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;&amp;lt;flags&amp;gt;&lt;/code&gt;에 정의된 확장 사용자 정의 명령 옵션과 &lt;code&gt;&amp;lt;args&amp;gt;&lt;/code&gt; 사용하여 명령 실행&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="external-commands"&gt;External Commands (외부 명령어)&lt;/h3&gt;
&lt;p&gt;사용자에 따라 외부 명령어가 더 필요한 경우, 쉽게 스크립트다 프로그램을 사용할 수 있는 방법을 제공합니다. 현재 커밋 ID로 키를 연결하고 현재 보여지는 상태에서 정보를 사용할 수 있습니다. Tig에서 기본 등록되어있는 확장 명령어:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: left;"&gt;Keymap&lt;/th&gt;
&lt;th style="text-align: left;"&gt;키&lt;/th&gt;
&lt;th style="text-align: left;"&gt;동작&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;main&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;C&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;git cherry-pick %(commit)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;status&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;C&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;git commit&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;generic&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;C&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&lt;code&gt;git gc&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="5-revision-specification"&gt;5. Revision Specification (리버전 사항)&lt;/h2&gt;
&lt;p&gt;이 세션에서는 리버전을 표시하거나 볼 수 있는 내용을 제한할 수 있도록 설정하는 방법에 대해서 설명합니다. Tig에서는 구문 분석을 하지 않습니다. 리버전 옵션에 대한 자세한 설명은 Git 메뉴얼 페이지에서 확인하십시오. 연관된 맨페이지는 &lt;code&gt;git-log(1)&lt;/code&gt;을 기준으로 &lt;code&gt;git-diff(1)&lt;/code&gt;과 &lt;code&gt;git-rev-list(1)&lt;/code&gt;입니다.&lt;/p&gt;
&lt;p&gt;설정 가능한 옵션을 사용하여 Git과 상호 작용을 이 세션에서 설명합니다. 예를 들어 &lt;a href="#diff-options-diff"&gt;diff 옵션&lt;/a&gt;에 대한 세션에서 설명된 환경 변수를 사용하여 구성할 수 있습니다.&lt;/p&gt;
&lt;h3 id="limit-by-path-name"&gt;Limit by Path Name (패치 이름 제한)&lt;/h3&gt;
&lt;p&gt;특정 파일 (또는 여러 파일) 변경에 대해서만 확인하고 싶다면 다음과 같이 목록으로 나타냅니다:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;tig&lt;span class="w"&gt; &lt;/span&gt;Makefile&lt;span class="w"&gt; &lt;/span&gt;README
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tig의 하위 명령 또는 태그 이름과 같은 저장소 참조에서 발생할 수 있는 모호성을 방지하기 위해 Git 옵션의 경우 &lt;code&gt;--&lt;/code&gt;를 사용하여 구분해야됩니다. &lt;code&gt;states&lt;/code&gt;라는 이름을 가진 파일이 있다면, &lt;code&gt;status&lt;/code&gt; 하위 명령과 충돌을 일으킬꺼니 다음과 같이 사용해야합니다:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;tig&lt;span class="w"&gt; &lt;/span&gt;--&lt;span class="w"&gt; &lt;/span&gt;status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="limit-by-date-or-number"&gt;Limit by Date or Number (날짜나 숫자 제한)&lt;/h3&gt;
&lt;p&gt;Git과의 상호작용 속도를 올리기 위해 로그와 메인 뷰에서 보여지는 커밋의 수를 제한할 수 있습니다. 예를 들어, 날짜로 제한을 걸 경우엔 &lt;code&gt;--since=1.month&lt;/code&gt;, 커밋 수로 제한을 걸 경우엔 &lt;code&gt;-n400&lt;/code&gt;와 같이 사용합니다.&lt;/p&gt;
&lt;p&gt;만약 두 날짜 사이에 발생한 변경분에 대해서 확인하고 싶다면:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;tig&lt;span class="w"&gt; &lt;/span&gt;--after&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;May 5th&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--before&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2006-05-16 15:44&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;주의, 공간을 포함하는 날짜를 사용하지 않는다면 &lt;code&gt;.&lt;/code&gt;를 이용하여 나타낼 수 있습니다. 예, &lt;code&gt;--after=May.5th&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="limiting-by-commit-ranges"&gt;Limiting by Commit Ranges (커밋 범위 제한)&lt;/h3&gt;
&lt;p&gt;대안으로 &amp;ldquo;&lt;code&gt;tag-1.0&lt;/code&gt;과 &lt;code&gt;tag-2.0&lt;/code&gt; 사이의 모든 커밋&amp;rdquo;과 같은 특정 범위로 제안할 수 있습니다. 예를 들면:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;tig&lt;span class="w"&gt; &lt;/span&gt;tag-1.0..tag-2.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;원격 브런치로 푸시되지 않은 커밋의 검색 제한은 다음과 같은 방법으로 가능합니다. &lt;code&gt;origin&lt;/code&gt;을 업스트림 원격 브런치고 가정하고 사용한다면:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;tig&lt;span class="w"&gt; &lt;/span&gt;origin..HEAD
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;원격 브런치에서 푸시된 내용들을 나열 합니다. 선택적으로 &lt;code&gt;HEAD&lt;/code&gt;는 생략될 수 있습니다.&lt;/p&gt;
&lt;h3 id="limiting-by-reachability"&gt;Limiting by Reachability (도달 가능 제한)&lt;/h3&gt;
&lt;p&gt;Git 인터프리트에서는 &amp;ldquo;tag-1.0&amp;hellip;tag-2.0&amp;rdquo;을 사용하는 경우, &amp;ldquo;&lt;code&gt;tag-1.0&lt;/code&gt;를 제외하고 &lt;code&gt;tag-2.0&lt;/code&gt;까지의 모든 커밋&amp;rdquo;으로 지정할 수 없습니다. 도달 가능한 참조는 물음의 브런치의 원형 (또는 히스토리의 일부분)의 커밋 또는 테그된 리버전일 수 있습니다.&lt;/p&gt;
&lt;p&gt;이 방법으로 다음 미리 커밋을 지정하려는 경우:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;tig&lt;span class="w"&gt; &lt;/span&gt;tag-2.0&lt;span class="w"&gt; &lt;/span&gt;^tag-1.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;부정 연산자로 &lt;code&gt;^&lt;/code&gt;를 생각할 수 있습니다. 이 대체 문법을 사용하면 위의 여려 브런치의 cut off를 지정하여 커밋 브런치를 없애버릴 수 있습니다.&lt;/p&gt;
&lt;h3 id="combining-revisions-specification"&gt;Combining Revisions Specification (변경 사항 연결)&lt;/h3&gt;
&lt;p&gt;리버전 옵션은 다음과 같이 연결하여 사용할 수 있습니다. &amp;ldquo;&lt;code&gt;Documentation/&lt;/code&gt; 디렉토리에 있는 파일의 변경 사항들을 마지막달 20개 커밋까지 보여다오.&amp;rdquo;를 다음과 같이 나타낼 수 있습니다:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;tig&lt;span class="w"&gt; &lt;/span&gt;--since&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.month&lt;span class="w"&gt; &lt;/span&gt;-n20&lt;span class="w"&gt; &lt;/span&gt;--&lt;span class="w"&gt; &lt;/span&gt;Documentation/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="examining-all-repository-references"&gt;Examining All Repository References (모든 저장소 참조 검사)&lt;/h3&gt;
&lt;p&gt;일부 경우엔 저장소에 대한 모든 참조를 걸쳐서 변화를 조회하는 것이 편할 수 있습니다. 다음 예제는 &amp;ldquo;이 저장소의 개발 라인에서 지난주내 특정파일이 변경되었는지&amp;rdquo;에 대해 묻는 것입니다. 다음 명령으로 가능합니다:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;tig&lt;span class="w"&gt; &lt;/span&gt;--all&lt;span class="w"&gt; &lt;/span&gt;--since&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.week&lt;span class="w"&gt; &lt;/span&gt;--&lt;span class="w"&gt; &lt;/span&gt;Makefile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="6-more-information"&gt;6. More Information (정보를 더 원하시면)&lt;/h2&gt;
&lt;p&gt;Tig &lt;a href="http://jonas.nitro.dk/tig"&gt;홈페이지&lt;/a&gt;나 &lt;a href="https://github.com/jonas/tig"&gt;메인 Git 저장소&lt;/a&gt;를 방문하여 새로운 릴리즈 내용, 버그 리포트 내용, 기능 요청에 대한 정보를 얻어가시길 바랍니다.&lt;/p&gt;
&lt;h2 id="7-copyright"&gt;7. Copyright (저작권)&lt;/h2&gt;
&lt;p&gt;Copyright (c) 2006-2014 Jonas Fonseca &lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#106;&amp;#111;&amp;#110;&amp;#97;&amp;#115;&amp;#46;&amp;#102;&amp;#111;&amp;#110;&amp;#115;&amp;#101;&amp;#99;&amp;#97;&amp;#64;&amp;#103;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#46;&amp;#99;&amp;#111;&amp;#109;"&gt;&amp;#106;&amp;#111;&amp;#110;&amp;#97;&amp;#115;&amp;#46;&amp;#102;&amp;#111;&amp;#110;&amp;#115;&amp;#101;&amp;#99;&amp;#97;&amp;#64;&amp;#103;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.&lt;/p&gt;
&lt;h2 id="8-see-also"&gt;8. See Also (더보기)&lt;/h2&gt;
&lt;p&gt;맨 페이지:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jonas.nitro.dk/tig/tig.1.html"&gt;tig(1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jonas.nitro.dk/tig/tigrc.5.html"&gt;tigrc(5)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="번역"></category><category term="tig"></category><category term="translate"></category></entry><entry><title>Vim mouse mode</title><link href="https://ujuc.github.io/2015/07/25/vim-mouse-mode/" rel="alternate"></link><published>2015-07-25T13:22:00+09:00</published><updated>2019-03-23T17:00:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2015-07-25:/2015/07/25/vim-mouse-mode/</id><summary type="html">&lt;p class="first last"&gt;.vimrc 설정을 하는데 사용했던 &amp;quot;mouse&amp;quot; 명령어에 대한 내용.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;나도 &lt;a class="reference external" href="http://github.com/ujuc/dotrc"&gt;vimrc&lt;/a&gt; 설정을 따로 만들었다만, 그것들을 전부 다른 애들이 설정해놓은 것들에서 수정해서 만든거라. 자세히 매뉴얼을 읽어보고 만들지는 않았다.&lt;/p&gt;
&lt;p&gt;그런데 얼마전부터 &lt;a class="reference external" href="http://neovim.io"&gt;NeoVim&lt;/a&gt; 매뉴얼을 번역하면서 기능들을 보고 있는데, 사용하고 있는 것들에대해서 나올때마다 작성을 해놔야지... 안그러면 또 안찾아볼 가능성이 높으니...&lt;/p&gt;
&lt;p&gt;마우스와 관련된 옵션은 &lt;tt class="docutils literal"&gt;mouse&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;mousefocus&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;moushide&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;mousemodel&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;mouseshape&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;mousetime&lt;/tt&gt;&lt;/p&gt;
&lt;div class="section" id="section-1"&gt;
&lt;h2&gt;옵션 설명(이라쓰고 번역...)&lt;/h2&gt;
&lt;div class="section" id="mouse"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/options.html#'mouse'"&gt;mouse&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;string (기본값 &amp;quot;a&amp;quot;)&lt;/p&gt;
&lt;p&gt;마우스를 사용할 수 있도록 설정한다. 터미널에서는 100%. GUI에서 작동하는 것에 대해서 알고 싶으면, | &lt;a class="reference external" href="http://neovim.io/doc/user/gui.html#gui-mouse"&gt;gui-mouse&lt;/a&gt; | 를 확인하도록.&lt;/p&gt;
&lt;p&gt;모드에서 사용하려면 다음 옵션을 달아준다:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/pattern.html#n"&gt;n&lt;/a&gt;: &lt;a class="reference external" href="http://neovim.io/doc/user/intro.html#Normal"&gt;Normal&lt;/a&gt; 모드&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/visual.html#v"&gt;v&lt;/a&gt;: &lt;a class="reference external" href="http://neovim.io/doc/user/visual.html#Visual"&gt;Visual&lt;/a&gt; 모드&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/insert.html#i"&gt;i&lt;/a&gt;: &lt;a class="reference external" href="http://neovim.io/doc/user/insert.html#Insert"&gt;Insert&lt;/a&gt; 모등&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/change.html#c"&gt;c&lt;/a&gt;: &lt;a class="reference external" href="http://neovim.io/doc/user/cmdline.html#Command-line"&gt;Command-line&lt;/a&gt; 모드&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/motion.html#h"&gt;h&lt;/a&gt;: 도움말 파일에서 수정할때, 모든 모드&lt;/li&gt;
&lt;li&gt;a: 모든 모드&lt;/li&gt;
&lt;li&gt;r: | &lt;a class="reference external" href="http://neovim.io/doc/user/message.html#hit-enter"&gt;hint-enter&lt;/a&gt; | 와 | &lt;a class="reference external" href="http://neovim.io/doc/user/message.html#more-prompt"&gt;more-prompt&lt;/a&gt; | 프롬프트에서&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;일반적으로 모든 모드에서 사용하길 원한다면 &lt;tt class="docutils literal"&gt;:set mouse=a&lt;/tt&gt; 로 구성해두면 된다.
마우스 모드가 제대로 작동하지 않을땐, &lt;a class="reference external" href="http://neovim.io/doc/user/gui.html#GUI"&gt;GUI&lt;/a&gt; modeless 섹션에서 마우스를 사용하고 있어서 빠진게 아닌지 확인을... 아마 텍스트 커서도 안움직인다고...&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/term.html#mouse-using"&gt;mouse-using&lt;/a&gt; , &lt;a class="reference external" href="http://neovim.io/doc/user/options.html#'clipboard'"&gt;clipboard&lt;/a&gt; 를 보세요.&lt;/p&gt;
&lt;p&gt;노트 : X-server로 접근한 터미널에서 마우스를 사용할 땐, 복사, 붙여넣기를 사용할땐 &amp;quot;* &lt;a class="reference external" href="http://neovim.io/doc/user/sponsor.html#register"&gt;register&lt;/a&gt; 를 사용하게 됩니다. 마우스 버튼을 &lt;tt class="docutils literal"&gt;xterm&lt;/tt&gt;  에서 사용하려면, &lt;a class="reference external" href="http://neovim.io/doc/user/intro.html#shift"&gt;shift&lt;/a&gt; 를 누르고 사용하면 됩니다. 자세한건 &lt;a class="reference external" href="http://neovim.io/doc/user/options.html#'clipboard'"&gt;clipboard&lt;/a&gt; 옵션에서 확인하세요.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="mousefocus"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/options.html#'mousefocus'"&gt;mousefocus&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;'mousef'  boolean (기본은 off) - {GUI 에서만 작동}&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/windows.html#window"&gt;window&lt;/a&gt; 에서 마우스 포인터를 자동으로 활성화 시킬 수 있습니다. 윈도우 레이아웃이나 다른 방법으로 윈도우 초점을 변경(&lt;a class="reference external" href="http://neovim.io/doc/user/change.html#changing"&gt;changing&lt;/a&gt;) 하려한다면, 마우스 포인터는 윈도우에서 이동하게된다는데...
딱히 GUI로 할일은 없음...&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="mousehide"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/options.html#'mousehide'"&gt;mousehide&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;'mh'  boolean (기본은 on) - {GUI에서만 작동}&lt;/p&gt;
&lt;p&gt;입력할때 마우스 포인터를 감추고, 마우스가 움직이면 그때사 보여줌.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="mousemodel"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/options.html#'mousemodel'"&gt;mousemodel&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;'mousem'  string (기본은 &amp;quot;extend&amp;quot;, &lt;a class="reference external" href="http://neovim.io/doc/user/os_win32.html#Win32"&gt;Win32&lt;/a&gt; 에서는 &amp;quot;popup&amp;quot;)&lt;/p&gt;
&lt;p&gt;마우스를 사용하는 모델을 설정한다. 마우스 오른쪽 키를 눌렸을때 뭘할지에 대해서 설정하는 것.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;extend: 마우스 오른쪽 키를 누르면 섹션이 확장됩니다. &lt;tt class="docutils literal"&gt;xterm&lt;/tt&gt; 에서의 내용과 동일하게 동작함.&lt;/li&gt;
&lt;li&gt;popup: 마우스 오른쪽 키를 누르면 팝업 메뉴가 뜸. 마우스 왼쪽키를 누르고 있으면, 섹션을 확장 합니다. MS Windows의 작업과 동일함.&lt;/li&gt;
&lt;li&gt;popup_setpos: &amp;quot;popup&amp;quot;과 유사. 커서가 마우스 클릭된 곳으로 움직임. 자세한건 한번 읽어보는 걸로.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;설정별 마우스 동작&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="27%" /&gt;
&lt;col width="32%" /&gt;
&lt;col width="41%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;mouse&lt;/th&gt;
&lt;th class="head"&gt;extend&lt;/th&gt;
&lt;th class="head"&gt;popup(_setpost)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;왼쪽 클릭&lt;/td&gt;
&lt;td&gt;커서 위치&lt;/td&gt;
&lt;td&gt;커서 위치&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;왼쪽 끌기&lt;/td&gt;
&lt;td&gt;섹션 시작&lt;/td&gt;
&lt;td&gt;섹션 시작&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;시프트 - 왼쪽&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/motion.html#word"&gt;word&lt;/a&gt; 검색&lt;/td&gt;
&lt;td&gt;섹션 확장&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;오른쪽 클릭&lt;/td&gt;
&lt;td&gt;섹션 확장&lt;/td&gt;
&lt;td&gt;popup 메뉴 (커서 위치)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;오른쪽 끌기&lt;/td&gt;
&lt;td&gt;섹션 확장&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;가운데 키&lt;/td&gt;
&lt;td&gt;붙이기&lt;/td&gt;
&lt;td&gt;붙이기&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;quot;popup&amp;quot; 모델에서는 pop-up 메뉴를 구성할 수 있음. | &lt;a class="reference external" href="http://neovim.io/doc/user/gui.html#popup-menu"&gt;popup-menu&lt;/a&gt; | 에서 확인할 것.&lt;/p&gt;
&lt;p&gt;마우스 버튼 맵핑을 바꿀려면 | &lt;a class="reference external" href="http://neovim.io/doc/user/gui.html#gui-mouse-mapping"&gt;gui-mouse-mapping&lt;/a&gt; | 확인. modeless 섹션에서는 작동 안함.&lt;/p&gt;
&lt;p&gt;'&lt;a class="reference external" href="http://neovim.io/doc/user/options.html#'mousemodel'"&gt;mousemodel&lt;/a&gt;' 옵션은 &lt;a class="reference external" href="http://neovim.io/doc/user/gui.html#:behave"&gt;:behave&lt;/a&gt; 명령어로 설정할 수 있음.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="mouseshape"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/options.html#'mouseshape'"&gt;mouseshape&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;'mouses'  string (기본은 &amp;quot;i:beam,r:beam,s:updown,sd:corss,m:no,ml:up-arrow,v:rightup-arrow&amp;quot;) - {| &lt;a class="reference external" href="http://neovim.io/doc/user/various.html#+mouseshape"&gt;+mouseshape&lt;/a&gt; | 기능이 켜진채로 컴파일이 되었을 경우, 사용 가능}&lt;/p&gt;
&lt;p&gt;다른 모드에서 마우스 포인터가 작동하는 것에대한 것들을 VIM에게 알려주는 옵션(?).&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;적용할 수 있는 모드 목록:&lt;/dt&gt;
&lt;dd&gt;&lt;dl class="first last docutils"&gt;
&lt;dt&gt;일반 윈도우:&lt;/dt&gt;
&lt;dd&gt;&lt;dl class="first last docutils"&gt;
&lt;dt&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/pattern.html#n"&gt;n&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/intro.html#Normal"&gt;Normal&lt;/a&gt; 모드&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/visual.html#v"&gt;v&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/visual.html#Visual"&gt;Visual&lt;/a&gt; 모드&lt;/dd&gt;
&lt;dt&gt;ve&lt;/dt&gt;
&lt;dd&gt;'&lt;a class="reference external" href="http://neovim.io/doc/user/options.html#'selection'"&gt;selection&lt;/a&gt;' &amp;quot;&lt;a class="reference external" href="http://neovim.io/doc/user/motion.html#exclusive"&gt;exclusive&lt;/a&gt;&amp;quot;가 포함된 &lt;a class="reference external" href="http://neovim.io/doc/user/visual.html#Visual"&gt;Visual&lt;/a&gt; 모드 (특정짓지 않은 거라면, &lt;a class="reference external" href="http://neovim.io/doc/user/motion.html#as"&gt;as&lt;/a&gt; '&lt;a class="reference external" href="http://neovim.io/doc/user/visual.html#v"&gt;v&lt;/a&gt;'와 동일)&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/insert.html#o"&gt;o&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/intro.html#Operator-pending"&gt;Operator-pending&lt;/a&gt; 모드&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/insert.html#i"&gt;i&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/insert.html#Insert"&gt;Insert&lt;/a&gt; 모드&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/change.html#r"&gt;r&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/insert.html#Replace"&gt;Replace&lt;/a&gt; 모드&lt;/dd&gt;
&lt;/dl&gt;
&lt;/dd&gt;
&lt;dt&gt;나머지:&lt;/dt&gt;
&lt;dd&gt;&lt;dl class="first last docutils"&gt;
&lt;dt&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/change.html#c"&gt;c&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;커멘드 라인에서 추가&lt;/dd&gt;
&lt;dt&gt;ci&lt;/dt&gt;
&lt;dd&gt;커멘드 라인에서 삽입(&lt;a class="reference external" href="http://neovim.io/doc/user/insert.html#inserting"&gt;inserting&lt;/a&gt;)&lt;/dd&gt;
&lt;dt&gt;cr&lt;/dt&gt;
&lt;dd&gt;커멘드 라인에서 변경(&lt;a class="reference external" href="http://neovim.io/doc/user/change.html#replacing"&gt;replacing&lt;/a&gt;)&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/motion.html#m"&gt;m&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;'HIT ENTER'나 'More' 프롬프트에서&lt;/dd&gt;
&lt;dt&gt;ml&lt;/dt&gt;
&lt;dd&gt;idem, 마지막 줄에 커서일 경우&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/motion.html#e"&gt;e&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;어떤 모드든, 포인터에 마지막 &lt;a class="reference external" href="http://neovim.io/doc/user/windows.html#window"&gt;window&lt;/a&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/change.html#s"&gt;s&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;어떤 모드든, 상태 라인 위에 포인터&lt;/dd&gt;
&lt;dt&gt;sd&lt;/dt&gt;
&lt;dd&gt;어떤 모드든, 상태 라인으로 드래그&lt;/dd&gt;
&lt;dt&gt;vs&lt;/dt&gt;
&lt;dd&gt;어떤 모드든, 수직 분할 라인에 포인터&lt;/dd&gt;
&lt;dt&gt;vd&lt;/dt&gt;
&lt;dd&gt;어떤 모드든, 수직 분할 라인으로 드래그&lt;/dd&gt;
&lt;dt&gt;a&lt;/dt&gt;
&lt;dd&gt;어디든...&lt;/dd&gt;
&lt;/dl&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;마우스 모양(shape)는 다음 모양으로 보여짐&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="8%" /&gt;
&lt;col width="18%" /&gt;
&lt;col width="74%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;avail&lt;/th&gt;
&lt;th class="head"&gt;이름&lt;/th&gt;
&lt;th class="head"&gt;뭐냐면...&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/motion.html#w"&gt;w&lt;/a&gt; &lt;a class="reference external" href="http://neovim.io/doc/user/change.html#x"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;arrow&lt;/td&gt;
&lt;td&gt;기본(&lt;a class="reference external" href="http://neovim.io/doc/user/intro.html#Normal"&gt;Normal&lt;/a&gt;) 마우스 포인터&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/motion.html#w"&gt;w&lt;/a&gt; &lt;a class="reference external" href="http://neovim.io/doc/user/change.html#x"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;blank&lt;/td&gt;
&lt;td&gt;모든 곳에서 포인터가 아닌경우 (사용시 주의!)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/motion.html#w"&gt;w&lt;/a&gt; &lt;a class="reference external" href="http://neovim.io/doc/user/change.html#x"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;beam&lt;/td&gt;
&lt;td&gt;I-빔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/motion.html#w"&gt;w&lt;/a&gt; &lt;a class="reference external" href="http://neovim.io/doc/user/change.html#x"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;updown&lt;/td&gt;
&lt;td&gt;상하 크기 조절 화살표&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/motion.html#w"&gt;w&lt;/a&gt; &lt;a class="reference external" href="http://neovim.io/doc/user/change.html#x"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;leftright&lt;/td&gt;
&lt;td&gt;좌우 크기 조절 화살표&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/motion.html#w"&gt;w&lt;/a&gt; &lt;a class="reference external" href="http://neovim.io/doc/user/change.html#x"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;busy&lt;/td&gt;
&lt;td&gt;시스템에서 사용하는 busy 포인터&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/motion.html#w"&gt;w&lt;/a&gt; &lt;a class="reference external" href="http://neovim.io/doc/user/change.html#x"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;시스템에서 사용하는 'no input' 포인터&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/change.html#x"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;udsizing&lt;/td&gt;
&lt;td&gt;상하 크기 재조절을 가르킴&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/change.html#x"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;lrsizing&lt;/td&gt;
&lt;td&gt;좌우 크기 재조절를 가르킴&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/change.html#x"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;crosshair&lt;/td&gt;
&lt;td&gt;큰 '+'&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/change.html#x"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;hand1&lt;/td&gt;
&lt;td&gt;검은색 손&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/change.html#x"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;hand2&lt;/td&gt;
&lt;td&gt;흰색 손&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/change.html#x"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;pencil&lt;/td&gt;
&lt;td&gt;뭘 쓰고 싶을때&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/change.html#x"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;question&lt;/td&gt;
&lt;td&gt;큰 '?'&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/change.html#x"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;rightup-arrow&lt;/td&gt;
&lt;td&gt;오른쪽 위를 가르키는 화살표&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/motion.html#w"&gt;w&lt;/a&gt; &lt;a class="reference external" href="http://neovim.io/doc/user/change.html#x"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;up-arrow&lt;/td&gt;
&lt;td&gt;위를 가르키는 화살표&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/change.html#x"&gt;x&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&amp;lt;number&amp;gt;&lt;/td&gt;
&lt;td&gt;모든 X11 포인트 숫자 (&lt;tt class="docutils literal"&gt;X11/cursorfont.h&lt;/tt&gt; 에서 확인 가능)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;quot;avail&amp;quot; 칼럼의 내용에서 '&lt;a class="reference external" href="http://neovim.io/doc/user/motion.html#w"&gt;w&lt;/a&gt;' 의 경우 &lt;a class="reference external" href="http://neovim.io/doc/user/os_win32.html#Win32"&gt;Win32&lt;/a&gt; 에서 사용하는 것이고, '&lt;a class="reference external" href="http://neovim.io/doc/user/change.html#x"&gt;x&lt;/a&gt;' 는 X11에서 사용하는 것에 대한 것임.
Any modes not specified or shapes not available use the normal mouse pointer. - 영어의 짧음으로 뭔말인지 모르겠다.&lt;/p&gt;
&lt;p&gt;예로 &lt;tt class="docutils literal"&gt;:set mouseshape=s:udsizing,m:mo&lt;/tt&gt; 요로케 작성가능. 이렇게 해놓으면, (클릭이후 마우스가 이상태에서 효과가 없으면,)상태 바에 마오스를 올리면 크기 조절 화살표로 변경되고, 화면에서 &lt;a class="reference external" href="http://neovim.io/doc/user/message.html#hit-enter"&gt;hit-enter&lt;/a&gt; 프롬프트일때 no input을 가르키게됩니다.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="mousetime"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://neovim.io/doc/user/options.html#'mousetime'"&gt;mousetime&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;'mouset'  number (기본 500)&lt;/p&gt;
&lt;p&gt;GUI, MS-DOS, Win32, Unix의 &lt;tt class="docutils literal"&gt;xterm&lt;/tt&gt; 에서만 사용 가능. 다중 클릭으로 인식할 수 있는 두 번째 클릭에 대한 msec의 최대 값을 정의함.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="번역"></category><category term="vim"></category><category term="vi"></category><category term="vimrc"></category><category term="mouse"></category><category term="기본 설정"></category><category term="transelate"></category></entry><entry><title>[Google App Engine] NDB - Properties</title><link href="https://ujuc.github.io/2014/11/10/google-app-engine-ndb-properties/" rel="alternate"></link><published>2014-11-10T18:05:00+09:00</published><updated>2016-03-03T21:47:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2014-11-10:/2014/11/10/google-app-engine-ndb-properties/</id><summary type="html">&lt;p&gt;NDB 문서를 번역해놓은 것.&lt;/p&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;관련해서 한글로되 문서가 없어서 &lt;a href="https://cloud.google.com/appengine/docs/python/ndb/properties"&gt;2014/10/27일자 문서&lt;/a&gt;를 가지고서 정리하였다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;소개&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Model&lt;/code&gt;에서 사용할 수 있는 데이터 모델을 말한다. 모델 타입으로 생각하면 쉽겠다. 어려울 것도 없다만.&lt;/p&gt;
&lt;h2 id="type"&gt;Type&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property type&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;IntegerProperty&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;64-bit signed 정수 값&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FloatProperty&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Double-precision 부동 소수점 숫자 값&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;BooleanProperty&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Boolean 값&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;StringProperty&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;유니코드 스트링 값, 500자까지 가능, 인덱스 가능&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;TextProperty&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;유니코드 스트링 값, 길이 제한 없음, 인덱스 기능 없음&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;BlobProperty&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;해석되지 않은 (Uninterpreted) 바이트 스트링, &lt;code&gt;indexed=True&lt;/code&gt;로 설정하게되면 500자로 제한, 인덱스 가능. &lt;br&gt;하지만 &lt;code&gt;False&lt;/code&gt;(기본 값)으로 설정하게 되면, 길이 제한 없으며, 인덱스 기능 없음. (추가 속성으로 &lt;a href="https://cloud.google.com/appengine/docs/python/ndb/properties#compressed"&gt;&lt;code&gt;compressed&lt;/code&gt;&lt;/a&gt;를 사용할 수 있음)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DateTimeProperty&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;날짜와 시간 (자세한 내용은 &lt;a href="https://cloud.google.com/appengine/docs/python/ndb/properties#Date_and_Time"&gt;Date and Time Properties&lt;/a&gt;에서 확인)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DateProperty&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;날짜 (자세한 내용은 &lt;a href="https://cloud.google.com/appengine/docs/python/ndb/properties#Date_and_Time"&gt;Date and Time Properties&lt;/a&gt;에서 확인)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;TimeProperty&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;시간 (자세한 내용은 &lt;a href="https://cloud.google.com/appengine/docs/python/ndb/properties#Date_and_Time"&gt;Date and Time Propertyes&lt;/a&gt;에서 확인)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;GeoPtProperty&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;지리적 정보데이터를 입력 받음. &lt;code&gt;ndb.GeoPt&lt;/code&gt;객체인데, &lt;code&gt;lat&lt;/code&gt;, &lt;code&gt;lon&lt;/code&gt; 값(둘다 부동소수점으로 표기)을 가지고서 작업을 진행.&lt;br&gt;예, &lt;code&gt;ndb.GeoPt(52.37, 4.88)&lt;/code&gt; or &lt;code&gt;ndb.GeoPt("52.37", "4.88")&lt;/code&gt;형식.&lt;br&gt;(&lt;a href="https://cloud.google.com/appengine/docs/python/datastore/typesandpropertyclasses#GeoP"&gt;&lt;code&gt;db.GeoPt&lt;/code&gt;&lt;/a&gt;와 동일한 객체.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;KeyProperty&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Datastore key 값&lt;br&gt;선택 키워드로 kind=&lt;em&gt;kind&lt;/em&gt; 형식으로 나오며, 할당된 키는 항상 kind를 지정해야함.&lt;br&gt;문자열이거나, 모델 클레스가 될수도 있음.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;BlobKeyProperty&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Blobstore&lt;/code&gt; 키 값&lt;br&gt;이전 DB API의 &lt;code&gt;BlobReferenceProperty&lt;/code&gt;에 해당.&lt;br&gt;&lt;code&gt;BlobInfo&lt;/code&gt;대신 &lt;code&gt;BlobKey&lt;/code&gt;로 속성 값을 사용. &lt;code&gt;BlobInfo(blobkey)&lt;/code&gt;를 사용하여 &lt;code&gt;BlobInfo&lt;/code&gt;를 구성할 수 있긴함.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UserProperty&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;유저 객체.&lt;br&gt;Google의 사용자 로그인으로 관련된 내용을 저장하여 사용할때 쓴다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;StructuredProperty&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;하나의 kind 내부에 다른 모델을 추가하는 것.&lt;br&gt;&lt;code&gt;C&lt;/code&gt;의 구조체와 비슷하다고 생각하자.&lt;br&gt;여러번 중복이 가능하고 값을 불러오게되면 JSON방식으로 불러오는 것이 편하다.&lt;br&gt;자세한 내용은 &lt;a href="https://cloud.google.com/appengine/docs/python/ndb/properties#structured"&gt;Structured Properties&lt;/a&gt;에서 확인&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LocalStructuredProperty&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;StructuredProperty&lt;/code&gt;와 비슷하게 사용할 수 있으나, 인덱싱이 안된다. 자세한 내용은 &lt;a href="https://cloud.google.com/appengine/docs/python/ndb/properties#structured"&gt;Structured Properties&lt;/a&gt;에서 확인.&lt;br&gt;추가 속성: &lt;a href="https://cloud.google.com/appengine/docs/python/ndb/properties#compressed"&gt;&lt;code&gt;compressed&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;JsonProperty&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;파이썬 객체(리스트, 딕셔너리, 스트링) 값을 파이썬 &lt;code&gt;json&lt;/code&gt;모듈을 이용하여 직열화함.&lt;br&gt;Datastore에서는 blob로 json 직렬화하여 저장.&lt;br&gt;인덱스 안됨.&lt;br&gt;추가 속성: &lt;a href="https://cloud.google.com/appengine/docs/python/ndb/properties#compressed"&gt;&lt;code&gt;compressed&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PickleProperty&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;파이썬 객체(리스트, 딕셔너리, 스트링) 값을 파이썬 pickle 프로토콜을 이용하여 직열화함.&lt;br&gt;Datastore에서는 blob로 pickle 직렬화하여 저장.&lt;br&gt;인덱스 안됨.&lt;br&gt;추가 속성: &lt;a href="https://cloud.google.com/appengine/docs/python/ndb/properties#compressed"&gt;&lt;code&gt;compressed&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;GenericProperty&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;기본 값.&lt;br&gt;&lt;a href="https://cloud.google.com/appengine/docs/python/ndb/entities#expando"&gt;Expando&lt;/a&gt;클래스에서 주로 사용되지만, 명시적으로 사용하기도함.&lt;br&gt;어떤 형식으로도 가능. (&lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt;, &lt;code&gt;unicode&lt;/code&gt;, &lt;code&gt;datetime&lt;/code&gt;, &lt;code&gt;Key&lt;/code&gt;, &lt;code&gt;BlobKey&lt;/code&gt;, &lt;code&gt;GeoPt&lt;/code&gt;, &lt;code&gt;User&lt;/code&gt;, &lt;code&gt;None&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ComputeProperty&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;사용자가 정의한 함수에서 계산 값들을 처리하여 저장.&lt;br&gt;자세한 내용은 &lt;a href="https://cloud.google.com/appengine/docs/python/ndb/properties#computed"&gt;Computed Properties&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;compressed&lt;/code&gt; 옵션: &lt;code&gt;True&lt;/code&gt;로 설정시, gzip으로 압축하여 디스크에 저장함. 이때 CPU 인/디코딩하는데 IO를 사용을 함. &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="property-options"&gt;Property Options&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Argument&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;indexed&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;사용하는 것만 &lt;code&gt;True&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;False&lt;/code&gt;로 설정시 쿼리는 불가능해지나 쓰기 속도가 높아짐.&lt;br&gt;다 사용가능한건 아님.&lt;br&gt;인덱스 안하는게 인덱스하는 것보다 write 코스트가 적음.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;repeated&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;False&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;파이썬 리스트 형식으로 값으로 표현.&lt;br&gt;중복이 필요한 작업에 사용.&lt;br&gt;&lt;a href="https://cloud.google.com/appengine/docs/python/ndb/properties#repeated"&gt;Repeated Properties&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;required&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;False&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;꼭 필요한 값으로 표기.&lt;br&gt;&lt;code&gt;repeated=True&lt;/code&gt;와 같이 사용하지 못하며, &lt;code&gt;default=True&lt;/code&gt;와는 같이 사용할 수 있음.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Property 기본 유형&lt;/td&gt;
&lt;td&gt;&lt;code&gt;None&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;아무것도 지정하지 않을경우, 기본으로 들어감.&lt;br&gt;&lt;code&gt;repeated=True&lt;/code&gt;와 같이 사용하지 못하며, &lt;code&gt;required=True&lt;/code&gt;와 같이 사용할 수 있음&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;choices&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;기본 유형의 값 목록&lt;/td&gt;
&lt;td&gt;&lt;code&gt;None&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;값을 선택할 수 있는 목록&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validator&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;함수&lt;/td&gt;
&lt;td&gt;&lt;code&gt;None&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;값을 함수에 맞게 검증하고 그것으로 입력하도록 설정합니다.&lt;br&gt;자세한 내용은 &lt;a href="https://cloud.google.com/appengine/docs/python/ndb/subclassprop"&gt;Writing Property Subclasses&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verbose_name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;문자열&lt;/td&gt;
&lt;td&gt;&lt;code&gt;None&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Jinja2와 같은 웹프레임 워크에서 사용되는 HTML label을 나타냄&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;이후 내용은 그냥 홈피보자.&lt;ul&gt;
&lt;li&gt;딱히 적을 내용도 없음.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="번역"></category><category term="google"></category><category term="cloud"></category><category term="gcp"></category><category term="google cloud platform"></category><category term="ndb"></category></entry></feed>