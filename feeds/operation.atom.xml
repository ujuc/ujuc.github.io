<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>잘 밤에 쓸데없는 생각하기 - Operation</title><link href="https://ujuc.github.io/" rel="alternate"></link><link href="https://ujuc.github.io/feeds/operation.atom.xml" rel="self"></link><id>https://ujuc.github.io/</id><updated>2024-10-03T09:40:58+09:00</updated><subtitle>Anythink, Everythink!</subtitle><entry><title>[GitHub Actions] 왜 컨테이너에 복사를 못하니?</title><link href="https://ujuc.github.io/2024/10/03/github-actions-%EC%99%9C-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EC%97%90-%EB%B3%B5%EC%82%AC%EB%A5%BC-%EB%AA%BB%ED%95%98%EB%8B%88/" rel="alternate"></link><published>2024-10-03T09:40:58+09:00</published><updated>2024-10-03T09:40:58+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2024-10-03:/2024/10/03/github-actions-왜-컨테이너에-복사를-못하니/</id><summary type="html">&lt;p&gt;&lt;a href="https://github.com/docker/build-push-action"&gt;docker/build-push-action&lt;/a&gt;를 이용해서 컨테이너 이미지를 생성하도록 해놨는데. 왜 runner에서 생성한 파일을 가져오지 못하지?&lt;/p&gt;</summary><content type="html">&lt;p&gt;회사에서 CI/CD 환경으로 GitHub Actions를 이용하여 컨테이너 이미지를 만들도록 구현을 해뒀다.&lt;/p&gt;
&lt;p&gt;컨테이너를 만들때 사용한 Action은 &lt;a href="https://github.com/actions/checkout/"&gt;docker/build-push-action&lt;/a&gt;. Docker 에서 &lt;code&gt;docker buildx build&lt;/code&gt;를 명령어를 한번 랩핑 해서 사용할 수 있도록 해놓은 Action 인데&amp;hellip;&lt;br&gt;
이게 multi-stage 빌드로 이미지를 빌드하게되면 잘 가져오던 파일을 runner에서 직접 빌드하여 복사하려고 하면 안되는 문제점을 확인해서 왜 안되는지에 대해서 정리하려고 한다.&lt;/p&gt;
&lt;p&gt;또 삽질하기 싫다.&lt;/p&gt;
&lt;p&gt;시작은 이게 아니라 GitHub Cache 를 사용해서 빌드시간 줄이도록 해놨는데 컨테이너 레이어로 cache 가 남아서 용량 제한(10G)에 도달했던걸 해결하고 있었는데 &amp;hellip; ㅠ.ㅠ&lt;/p&gt;
&lt;hr&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;하고 싶었던 작업&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;결과&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;뭐가 문젠지 보자.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#action-job"&gt;Action Job 로그&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dockerbuild-push-action-git-context"&gt;docker/build-push-action - Git context&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;그래서&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="_1"&gt;하고 싶었던 작업&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Workflow&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;actions/checkout@v4&lt;/span&gt;

&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;npm i &amp;amp;&amp;amp; npm run build&lt;/span&gt;

&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;docker/build-push-action@v6&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Dockerfile&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;/app&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;./node_modules&lt;span class="w"&gt; &lt;/span&gt;./node_modules
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id="_2"&gt;결과&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ERROR&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;failed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;calculate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;checksum&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;e029&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;mclu&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/node_modules&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;found&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;빌드된 &lt;code&gt;node_modules&lt;/code&gt; 폴더를 찾을 수 없다!&lt;/p&gt;
&lt;h1 id="_3"&gt;뭐가 문젠지 보자.&lt;/h1&gt;
&lt;h2 id="action-job"&gt;Action Job 로그&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/actions/checkout/"&gt;actions/checkout&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;##&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;checkout&lt;/span&gt;&lt;span class="nv"&gt;@v4&lt;/span&gt;
&lt;span class="n"&gt;Temporarily&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;overriding&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/home/runner/work/_temp/4d270f53-51a0-434e-aa52-9f4e95bf278a&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;before&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;making&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;global&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;changes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/build-push-action"&gt;docker/build-push-action&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;## Run docker/build-push-action@v6&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;docker&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buildx&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;gha&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;gha&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;iidfile&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;_temp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;toolkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cB7XtZ&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;iidfile&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;d520664a2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;platform&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;amd64&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;attest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;provenance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;inline&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;only&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;GIT_AUTH_TOKEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;_temp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;toolkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cB7XtZ&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1978&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;917&lt;/span&gt;&lt;span class="n"&gt;X1YS1aV1W&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bd6e&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;_temp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;toolkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cB7XtZ&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;74e703&lt;/span&gt;&lt;span class="n"&gt;f218&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;싸늘하다.&lt;/em&gt; 왜 두개의 work 폴더가 다르지&amp;hellip;?&lt;br&gt;
&lt;a href="https://github.com/actions/checkout/"&gt;actions/checkout&lt;/a&gt;에서는 &lt;code&gt;runner/work/_temp/4d270f53-*&lt;/code&gt; 이라는 디렉토리에서 코드를 옮겨다 놨는데 &lt;a href="https://github.com/docker/build-push-action"&gt;build-push-action&lt;/a&gt;는 &lt;code&gt;runner/work/_temp/docker-actions-toolkit-cB7XtZ&lt;/code&gt; 로 다시 코드를 땡겨서 넣어뒀다.&lt;/p&gt;
&lt;p&gt;하 뭐가 잘못된걸까 &lt;a href="https://github.com/docker/build-push-action"&gt;build-push-action&lt;/a&gt;의 &lt;code&gt;README&lt;/code&gt;에서 확인해보자&lt;/p&gt;
&lt;h2 id="dockerbuild-push-action-git-context"&gt;&lt;a href="https://github.com/docker/build-push-action"&gt;docker/build-push-action&lt;/a&gt; - Git context&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;By default, this action uses the &lt;a href="https://docs.docker.com/engine/reference/commandline/build/#git-repositories"&gt;Git context&lt;/a&gt;, so you don&amp;rsquo;t need to use the &lt;code&gt;[actions/checkout][1]&lt;/code&gt; action to check out the repository as this will be done directly by &lt;a href="https://github.com/moby/buildkit"&gt;BuildKit&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;위의 내용으로 나의 삽질이 왜 하게되었는지에 대해서 보여지는데&amp;hellip; &lt;a href="https://github.com/docker/build-push-action"&gt;build-push-action&lt;/a&gt;의 경우, &lt;a href="https://github.com/actions/checkout/"&gt;actions/checkout&lt;/a&gt; 을 통해서 코드를 받아오지 않더라도 동작하도록 구성해놨다고 한다.&lt;/p&gt;
&lt;p&gt;해당 부위에대한 문서 수정한 가장 최근 일자가 2년전이니&amp;hellip; 내가 채크하지 못한걸로&amp;hellip;&lt;/p&gt;
&lt;h1 id="_4"&gt;그래서&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;매번 사용할때마다 읽지만, 다시금 &lt;code&gt;README&lt;/code&gt;를 잘읽어보자.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;일부 엑션은 동작중에 checkout을 하는 경우가 있구나&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;왜 넣는거냐 도대체&amp;hellip;&lt;/p&gt;</content><category term="Operation"></category><category term="GitHub"></category><category term="Actions"></category><category term="docker"></category><category term="container"></category><category term="ci"></category><category term="cd"></category></entry><entry><title>XDG에서 사용중인 기본 디렉토리 정리</title><link href="https://ujuc.github.io/2024/06/30/xdg%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%EC%A4%91%EC%9D%B8-%EA%B8%B0%EB%B3%B8-%EB%94%94%EB%A0%89%ED%86%A0%EB%A6%AC-%EC%A0%95%EB%A6%AC/" rel="alternate"></link><published>2024-06-30T15:25:14+09:00</published><updated>2024-06-30T15:25:14+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2024-06-30:/2024/06/30/xdg에서-사용중인-기본-디렉토리-정리/</id><summary type="html">&lt;p&gt;&lt;a href="https://github.com/ujuc/dotrc"&gt;dotrc&lt;/a&gt; 정리중에 &lt;code&gt;tigrc&lt;/code&gt; 파일을 &lt;code&gt;$XDG_CONFIG_HOME/tig/config&lt;/code&gt; 부터 찾고 있는것을 보다보니 &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; 이라는 것을 확인했고, &lt;a href="https://en.wikipedia.org/wiki/Portland_Project"&gt;XDG-utils&lt;/a&gt;에서 사용중인 디렉토리에대해서 정리한다.&lt;/p&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;공식 문서: &lt;a href="https://specifications.freedesktop.org/basedir-spec/latest/index.html"&gt;XDG Base Directory Specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freedesktop.org/wiki/Specifications/basedir-spec/"&gt;freedesktop.org Specifications Wiki - Desktop base directories&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;환경 변수 설명&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#dir"&gt;사용자 실행파일 DIR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#xdg_data_home"&gt;XDG_DATA_HOME&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#xdg_data_dirs"&gt;XDG_DATA_DIRS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#xdg_config_home"&gt;XDG_CONFIG_HOME&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#xdg_config_dirs"&gt;XDG_CONFIG_DIRS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#xdg_state_home"&gt;XDG_STATE_HOME&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#xdg_cache_home"&gt;XDG_CACHE_HOME&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#xdg_runtime_dir"&gt;XDG_RUNTIME_DIR&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;freedesktop.org&lt;/code&gt; 에서 2003년도에 정의한 내용인데&amp;hellip; 난 지금 봤다. 이상하게 요즘 사용하는 툴에서 &lt;code&gt;config&lt;/code&gt; 파일을 &lt;code&gt;$HOME/.config&lt;/code&gt;로 넣고 있어서 확인한 내용 정리.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;XDG&lt;/code&gt; 는 &lt;code&gt;Cross Desktop Group&lt;/code&gt;의 줄임말.&lt;/p&gt;
&lt;h1 id="_1"&gt;환경 변수 설명&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;MacOS에서는 아래 변수가 정의되어있지 않기에 비어있음. Linux는 기본으로 들어가있을것같은데 찾지 않음.&lt;/li&gt;
&lt;li&gt;모든 경로는 절대 경로여야하며, 상대경로로 작성시 무시됨.&lt;/li&gt;
&lt;li&gt;디릭토리 우선순위: &lt;code&gt;HOME&lt;/code&gt; 변수 &amp;gt;&amp;gt; &lt;code&gt;DIRS&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="dir"&gt;사용자 실행파일 DIR&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$HOME/.local/bin&lt;/code&gt; 에 저장될 수 있으며, 리눅스 배포판에서는 &lt;code&gt;UNIX $PATH&lt;/code&gt; 환경 변수에 적절한 위치로 보이게 설정해야함.&lt;/li&gt;
&lt;li&gt;왠만해서는 하나의 아키텍처 시스템에서 사용되는 &lt;code&gt;$HOME&lt;/code&gt;이지만 다른 아키텍처 시스템에서 공유될 수 있으니 조심해서 사용할 것.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="xdg_data_home"&gt;XDG_DATA_HOME&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$XDG_DATA_HOME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;기본값: &lt;code&gt;$HOME/.local/share&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;사용자별 데이터 파일을 저장하는 기본 디렉토리 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="xdg_data_dirs"&gt;XDG_DATA_DIRS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$XDG_DATA_DIRS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;기본값: &lt;code&gt;/usr/local/share/:/usr/share/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;데이터 파일 검색시 추가로 확인할 디렉토리 집합&lt;/li&gt;
&lt;li&gt;우선 순위별로 추가하고 구분은 &lt;code&gt;:&lt;/code&gt;를 이용&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="xdg_config_home"&gt;XDG_CONFIG_HOME&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;기본값: &lt;code&gt;$HOME/.config&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;사용자별 구성 파일을 저장하는 기본 디렉토리&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="xdg_config_dirs"&gt;XDG_CONFIG_DIRS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$XDG_CONFIG_DIRS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;기본값: &lt;code&gt;/etc/xdg&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;구성 파일 검색시 추가로 확인할 디렉토리 집합&lt;/li&gt;
&lt;li&gt;우선 순위별로 추가하고 구분은 &lt;code&gt;:&lt;/code&gt;를 이용&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="xdg_state_home"&gt;XDG_STATE_HOME&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$XDG_STATE_HOME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;기본값: &lt;code&gt;$HOME/.local/state&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;사용자별 상태 파일을 저장하는 기본 디렉토리&lt;/li&gt;
&lt;li&gt;상태 파일?: 작업 기록, 애플리케이션 현재 상태 등등등&amp;hellip;(?)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;예제: gh state 파일&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;.local&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="no"&gt;state&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="no"&gt;gh&lt;/span&gt;
&lt;span class="err"&gt;❯&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;cat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;state.yml&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="err"&gt;───────┬─────────────────────────────────────────────────────────&lt;/span&gt;
&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;File:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;state.yml&lt;/span&gt;
&lt;span class="err"&gt;───────┼─────────────────────────────────────────────────────────&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;checked_for_update_at:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;2024-06-30&lt;/span&gt;&lt;span class="nl"&gt;T11:&lt;/span&gt;&lt;span class="err"&gt;43:11&lt;/span&gt;&lt;span class="nf"&gt;.458951&lt;/span&gt;&lt;span class="err"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;latest_release:&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nl"&gt;version:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;v2.52.0&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;4&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nl"&gt;url:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;https:&lt;/span&gt;&lt;span class="c1"&gt;//github.com/cli/cli/releases/tag/v2.52.0&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;5&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nl"&gt;publishedat:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;2024-06-24&lt;/span&gt;&lt;span class="nl"&gt;T19:&lt;/span&gt;&lt;span class="err"&gt;10:40&lt;/span&gt;&lt;span class="nf"&gt;Z&lt;/span&gt;
&lt;span class="err"&gt;───────┴─────────────────────────────────────────────────────────-&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="xdg_cache_home"&gt;XDG_CACHE_HOME&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$XDG_CACHE_HOME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;기본값: &lt;code&gt;$HOME/.cache&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;사용자별 캐시 데이터 파일을 저장하는 기본 디렉토리&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="xdg_runtime_dir"&gt;XDG_RUNTIME_DIR&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$XDG_RUNTIME_DIR&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;사용자별 애플리케이션 런타입 파일 및 기타 파일 객체(소켓, 이름이 지정된 파이프 등)을 저장하는 기본 디렉토리&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[MUST]&lt;/strong&gt; 사용자만 읽기, 쓰기, 접근이 가능해야함 (Mode: &lt;code&gt;0700&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[MUST]&lt;/strong&gt; 로컬 파일 시스템에만 존재해야하며, 공유되는 곳에 있어서는 안됨.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[MUST]&lt;/strong&gt; 사용자 로그인시 생성되고, 로그아웃되면 제거됨.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[MAY]&lt;/strong&gt; 주기적으로 정리 대상이 될 수 있음.&lt;/li&gt;
&lt;li&gt;파일을 삭제하지 않도록 하려면 6시간마다 access time timestamp를 수정하거나, 파일에 &lt;code&gt;sticky&lt;/code&gt; 비트를 설정해야함.&lt;/li&gt;
&lt;li&gt;해당 변수가 설정되지 않은 경우&lt;/li&gt;
&lt;li&gt;애플리케이션에서 유사한 기능을 가진 대체 디렉토리로 대체하고 경고 메시지를 출력하게 해야함.&lt;/li&gt;
&lt;li&gt;통신, 동기화 목적으로 사용해야하며, 런타임 메모리에 상주가 가능하나 반드시 디스크로 스왑 아웃하지 않으니 대용량 파일을 저장해서는 안됨.&lt;/li&gt;
&lt;/ul&gt;</content><category term="Operation"></category><category term="xdg-utils"></category><category term="desktop"></category><category term="unix-like"></category><category term="os"></category></entry><entry><title>k8s에서 command와 args의 차이점</title><link href="https://ujuc.github.io/2023/05/09/k8s%EC%97%90%EC%84%9C-command%EC%99%80-args%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90/" rel="alternate"></link><published>2023-05-09T22:03:30+09:00</published><updated>2023-05-09T22:03:30+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2023-05-09:/2023/05/09/k8s에서-command와-args의-차이점/</id><summary type="html">&lt;p&gt;k8s에서 command랑 args 가 뭐가 다른지 정리한다. Docker에도 비슷한게 있다네&amp;hellip;?&lt;/p&gt;</summary><content type="html">&lt;p&gt;어플리케이션에 데이터를 주입하는 내용중 하나인 &lt;a href="https://kubernetes.io/ko/docs/tasks/inject-data-application/define-command-argument-container/"&gt;컨테이너에 command 와 args 정의하기&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;다른건 아니었다.&lt;/p&gt;
&lt;p&gt;Dockerfile에서 다음과 같은 설정이 되어있었다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;python&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;app.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;그리고 &lt;code&gt;app.py&lt;/code&gt;에서는 &lt;code&gt;profile&lt;/code&gt; 인자를 받도록 되어있어서 컨테이너가 실행이 안된더라.&lt;/p&gt;
&lt;p&gt;외부에서 인자를 넣어줘야하는 권한이 필요해서 위에서 말한 문서를 이용해서 작업을 하였다.&lt;/p&gt;
&lt;p&gt;그런데&amp;hellip;&lt;/p&gt;
&lt;p&gt;나 잘못 사용한거 같다.?&lt;/p&gt;
&lt;p&gt;잘읽어보니 &lt;code&gt;command&lt;/code&gt; 필드는 Dockerfile에서 &lt;code&gt;ENTRYPOINT&lt;/code&gt;란다.&lt;br&gt;
가방끊이 짧아 다시 검색&amp;hellip;&lt;br&gt;
&lt;code&gt;ENTRYPOINT&lt;/code&gt;는 컨테이너가 실행될때 무조건 실행되는 명령어를 작성하는 부분.&lt;br&gt;
그렇기에 항상 특정 명령어를 실행하여야 할때는 &lt;code&gt;ENTRYPOINT&lt;/code&gt;를 사용.&lt;/p&gt;
&lt;p&gt;그럼 &lt;code&gt;args&lt;/code&gt; 필드는? Dockerfile에서 &lt;code&gt;CMD&lt;/code&gt;에 대응된다고 한다.&lt;br&gt;
매번 검색&amp;hellip;&lt;br&gt;
&lt;code&gt;CMD&lt;/code&gt;는 컨테이너 실행시 기본 값으로 동작할 내용을 입력.&lt;br&gt;
그렇기에 컨테이너 실행시 인자를 넣어주고 싶을때는 &lt;code&gt;CMD&lt;/code&gt;를 이용하여 컨테이너 생성.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ENTRYPOINT&lt;/code&gt;랑 &lt;code&gt;CMD&lt;/code&gt;를 같이 사용할떄는 다음과 같이 사용하는게 좋은듯.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;python&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;app.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--profile&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dev&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;k8s 필드에서는 다음과 같이 사용.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;apiVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;v1&lt;/span&gt;
&lt;span class="nt"&gt;kind&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Pod&lt;/span&gt;
&lt;span class="nt"&gt;metadata&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;command-demo&lt;/span&gt;
&lt;span class="nt"&gt;spec&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;containers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;command-demo-container&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;python&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;python&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;app.py&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;--profile&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;${ENV}&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;요로코롬 정리.&lt;/p&gt;</content><category term="Operation"></category><category term="k8s"></category><category term="docker"></category></entry><entry><title>Datadog에서 Kubernetes 서비스 통합 서비스 태깅 추가하기</title><link href="https://ujuc.github.io/2022/03/27/datadog%EC%97%90%EC%84%9C-kubernetes-%EC%84%9C%EB%B9%84%EC%8A%A4-%ED%86%B5%ED%95%A9-%EC%84%9C%EB%B9%84%EC%8A%A4-%ED%83%9C%EA%B9%85-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0/" rel="alternate"></link><published>2022-03-27T16:06:58+09:00</published><updated>2022-03-27T16:06:58+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2022-03-27:/2022/03/27/datadog에서-kubernetes-서비스-통합-서비스-태깅-추가하기/</id><summary type="html">&lt;p&gt;Datadog을 kubernetes에서 사용할 수 있겠금 태깅을 하는 방법에 대해서 간략하게 정리한다.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Datadog을 이용하여 모니터링 중인데. K8s로 넘어가는 중이라 추가로 설정하는 것이 필요했다.&lt;br&gt;
구축중인 동료가 기본적인 agent 구성을 해주었으나, 제대로 작동하지 않고 있었고, Tag가 잘못된 것인지 아니면 인식을 못하는 것인지 Tag를 이용하여 서비스를 찾는 환경이 쉽지 않은 일이 발생했다.&lt;br&gt;
뭔가 설정을 잘못한 것이 있겠지하면서 메뉴얼을 다시 읽었고 그것에 대해 정리 해놓는다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;환경은 Kubernetes로 작업한다.&lt;/li&gt;
&lt;li&gt;해당 파일들은 &lt;code&gt;kind: Deployment&lt;/code&gt; 항목에서 할당된다. 기본 라벨은  &lt;code&gt;tags.datadog.com&lt;/code&gt;으로 묶어서 사용할 수 있도록 구성할 수 있으며, 해당 묶음은 Datadog에서 읽어가는 부분이라 다르게 사용하면 제대로 못읽어 갈 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="pod"&gt;Pod 레벨 메트릭에 붙은 태깅&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nn"&gt;...&lt;/span&gt;
&lt;span class="nt"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;metadata&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;tags.datadog.com/env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;ENV&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;tags.datadog.com/service&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;SERVICE&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;tags.datadog.com/version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;VERSION&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="nn"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="kubernetes"&gt;Kubernetes 상태값 메트릭 태깅&lt;/h3&gt;
&lt;p&gt;Agent에 옵션을 추가해야 하는데 기본 옵션은 외부 환경 변수로 주입할 수 없어 설정 파일을 생성하여 연결 해줘야 한다. 그리고 해당 항목을 설정하지 않으면, APM에서 Kubernetes Pods 항목에 아무런 Pod도 보이지 않게 된다.&lt;/p&gt;
&lt;h4 id="configmapyaml"&gt;&lt;code&gt;ConfigMap.yaml&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;라벨에서 기본 tag를 가져올 수 있도록 &lt;code&gt;join_standard_tags&lt;/code&gt; 옵션을 &lt;code&gt;true&lt;/code&gt;로 변경 해준다. &lt;a href="https://github.com/DataDog/integrations-core/blob/master/kubernetes_state/datadog_checks/kubernetes_state/data/conf.yaml.example#L53-L63"&gt;코드상 설명&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;apiVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;v1&lt;/span&gt;
&lt;span class="nt"&gt;kind&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;ConfigMap&lt;/span&gt;
&lt;span class="nt"&gt;metadata&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;datadog-agent-kubernetes-state&lt;/span&gt;
&lt;span class="nt"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;kubernetes_stage.yaml&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;init_config:&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;instances:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="no"&gt;- join_standard_tags: true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id="agent-configmap"&gt;Agent 항목에 ConfigMap으로 만든 설정 파일을 마운트 해준다.&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nn"&gt;...&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;volumeMounts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;datadog-agent-kubernetes-state&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;mountPath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;/etc/datadog-agent/conf.d/kubernetes_state.d&lt;/span&gt;
&lt;span class="nn"&gt;...&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;datadog-agent-kubernetes-state&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;projected&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;configMap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;datadog-agent-kubernetes-state&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nt"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;kubernetes_state.yaml&lt;/span&gt;
&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="nt"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;conf.yaml&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id="pod-label"&gt;서비스 Pod에서 label을 다음과 같이 작성해준다.&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;apiVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;v1&lt;/span&gt;
&lt;span class="nt"&gt;kind&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Deployment&lt;/span&gt;
&lt;span class="nt"&gt;metadata&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;tags.datadoghq.com/env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;ENV&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;tags.datadoghq.com/service&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;SERVICE&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;tags.datadoghq.com/version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;VERSION&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="nt"&gt;spec&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;metadata&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;tags.datadoghq.com/env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;ENV&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;tags.datadoghq.com/service&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;SERVICE&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;tags.datadoghq.com/version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;VERSION&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="nn"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="apm-tracer-satesd"&gt;APM tracer와 SatesD 클라이언트 환경 설정&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nn"&gt;...&lt;/span&gt;
&lt;span class="nt"&gt;containers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="nn"&gt;...&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;DD_ENV&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;valueFrom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;fieldRef&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;fieldPath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;metadata.labels[&amp;#39;tags.datadoghq.com/env&amp;#39;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;DD_SERVICE&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;valueFrom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;fieldRef&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;fieldPath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;metadata.labels[&amp;#39;tags.datadoghq.com/service&amp;#39;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;DD_VERSION&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;valueFrom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;fieldRef&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;fieldPath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;metadata.labels[&amp;#39;tags.datadoghq.com/version&amp;#39;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;이 세가지를 한번에 구성해두면, APM을 통해서 들어가거나 Trace를 통해서 서비스의 문제점을 찾을때 연관된 내용들을 손쉽게 찾을 수 있을 것이다.&lt;/p&gt;</content><category term="Operation"></category><category term="datadog"></category><category term="kubernetes"></category><category term="monitoring"></category></entry><entry><title>minikube로 docker를 대신해볼까?</title><link href="https://ujuc.github.io/2021/10/10/minikube%EB%A1%9C-docker%EB%A5%BC-%EB%8C%80%EC%8B%A0%ED%95%B4%EB%B3%BC%EA%B9%8C/" rel="alternate"></link><published>2021-10-10T09:50:45+09:00</published><updated>2021-10-10T09:50:45+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2021-10-10:/2021/10/10/minikube로-docker를-대신해볼까/</id><summary type="html">&lt;p&gt;minikube로 docker에서 벗어날까한다.&lt;/p&gt;</summary><content type="html">&lt;p&gt;전에 docker가 유료화로 바뀐다고 한뒤 뭔가 docker 대신으로 할 것을 찾는게 유행인듯.&lt;/p&gt;
&lt;p&gt;이것저것 해보다가 minikube로 작업하는게 좋다는 소릴 들었고 세팅을 하긴했는데&amp;hellip; &lt;code&gt;docker-compose&lt;/code&gt; 항목을 어떻게 바꾸지 하다가 검색에 들어갔다.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://novemberde.github.io/post/2021/09/02/podman-minikube/"&gt;minikube로 docker와 docker-compose를 대체하기&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;역시 누군가 먼저 해주셨고. 그걸보고 있는데&amp;hellip;&lt;/p&gt;
&lt;p&gt;생각보다 &lt;code&gt;minikube&lt;/code&gt;는 말그대로 &lt;code&gt;docker-desktop&lt;/code&gt;이고 &lt;code&gt;kubectl&lt;/code&gt;을 이용해서 작업을 해야하는구나&amp;hellip; 명령어를 찾아서 작업할 수 있게 구성을 하고 손에 익혀나가면 좋을듯.&lt;/p&gt;
&lt;p&gt;그런데 이미지 빌드는 어떻게 하는걸까?? &lt;code&gt;docker-compose&lt;/code&gt; 처럼 만들면 이미지가 추가되려나&amp;hellip;&lt;br&gt;
테스트로 진행한 airflow에 있는 &lt;code&gt;docker-compose&lt;/code&gt;는 복잡해서 못하는듯.&lt;br&gt;
사람이 생성을 해줘야 하는 부분이라 &lt;code&gt;kompose&lt;/code&gt; 패키지를 좀더 보고 한번 정리를 해야할꺼같다.&lt;/p&gt;</content><category term="Operation"></category><category term="minikube"></category><category term="kube"></category><category term="docker"></category></entry><entry><title>docker-compose Extension fields 알아보기</title><link href="https://ujuc.github.io/2021/07/15/docker-compose-extension-fields-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/" rel="alternate"></link><published>2021-07-15T15:53:42+09:00</published><updated>2021-07-15T15:53:42+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2021-07-15:/2021/07/15/docker-compose-extension-fields-알아보기/</id><summary type="html">&lt;p&gt;docker-compose 파일에서 새로운 문구를 발견했다. 정리나 하자.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Airflow를 볼까해서 docker-compose 파일을 받아서 봤는데&amp;hellip; 뭔가 새로운 문구가 발견되었다.&lt;br&gt;
다음과같은 부분임.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;3&amp;#39;&lt;/span&gt;
&lt;span class="nt"&gt;x-airflow-common&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nl"&gt;&amp;amp;airflow-common&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;${AIRFLOW_IMAGE_NAME:-apache/airflow:2.1.2}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nl"&gt;&amp;amp;airflow-common-env&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;AIRFLOW__CORE__EXECUTOR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;CeleryExecutor&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;AIRFLOW__CORE__SQL_ALCHEMY_CONN&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;postgresql+psycopg2://airflow:airflow@postgres/airflow&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;AIRFLOW__CELERY__RESULT_BACKEND&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;db+postgresql://airflow:airflow@postgres/airflow&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;AIRFLOW__CELERY__BROKER_URL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;redis://:@redis:6379/0&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;AIRFLOW__CORE__FERNET_KEY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;true&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;AIRFLOW__CORE__LOAD_EXAMPLES&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;true&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;AIRFLOW__API__AUTH_BACKEND&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;airflow.api.auth.backend.basic_auth&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;_PIP_ADDITIONAL_REQUIREMENTS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;${_PIP_ADDITIONAL_REQUIREMENTS:-}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;./dags:/opt/airflow/dags&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;./logs:/opt/airflow/logs&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;./plugins:/opt/airflow/plugins&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;depends_on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;redis&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;service_healthy&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;postgres&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;service_healthy&lt;/span&gt;

&lt;span class="nt"&gt;services&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="nn"&gt;...&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;airflow-init&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;*airflow-common&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;version&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;*airflow-common-env&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;_AIRFLOW_DB_UPGRADE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;true&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;_AIRFLOW_WWW_USER_CREATE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;true&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;_AIRFLOW_WWW_USER_USERNAME&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;${_AIRFLOW_WWW_USER_USERNAME:-airflow}&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;_AIRFLOW_WWW_USER_PASSWORD&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;${_AIRFLOW_WWW_USER_PASSWORD:-airflow}&lt;/span&gt;

&lt;span class="nn"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;보면 알겠지만 분명 version 3버전인데 &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt; 를 이용해서 이미지와 환경설정 구문을 반복해서 사용할 수 있도록 구성해놓은 것으로 판단되고 있다.&lt;br&gt;
그래서 문서를 찾다보니 맨밑에&amp;hellip; &lt;code&gt;Extension fields&lt;/code&gt; 라고 되어있는 부분이 존재한다. 문서를 끝까지 안봐서 몰랐던듯.&lt;/p&gt;
&lt;p&gt;뭔가 써봤으면 알것는데. 이번기회에 정리하고 사용해봐야할듯. 메뉴얼 문서 번역이 될듯함.&lt;/p&gt;
&lt;p&gt;추가로 YAML 스팩을 봐야할듯. YAML 스팩에 있는 내용을 그대로 사용할 수 있다고 해놓은걸보니&amp;hellip; YAML에 대한 내용을 제대로 안다면 쉽게 구성할 수 있을 것으로 보여진다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id="extension-fields"&gt;Extension fields&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/compose/compose-file/compose-file-v3/#extension-fields"&gt;공식 문서&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;버전 3.4에 추가됨&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;확장 필드를 사용해 구성 조각을 재 사용할 수 있습니다. 이 부분은 compose 파일에서 루트 위치에 존재하고 키이름에 접두사로 &lt;code&gt;x-&lt;/code&gt;를 사용하여 표시합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: 포멧 버전 3.7과 2.4에서는 &lt;code&gt;service&lt;/code&gt;, &lt;code&gt;volume&lt;/code&gt;, &lt;code&gt;network&lt;/code&gt;, &lt;code&gt;config&lt;/code&gt;, &lt;code&gt;secret&lt;/code&gt; 정의시 사용이 가능합니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;다음과 같이 YAML anchor 기능을 통해서 리소스 정의에 삽입이 가능합니다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;3.9&amp;quot;&lt;/span&gt;
&lt;span class="nt"&gt;x-logging&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nl"&gt;&amp;amp;default-logging&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;max-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;12m&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;max-file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;5&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;json-file&lt;/span&gt;

&lt;span class="nt"&gt;services&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;web&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;myapp/web:latest&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;logging&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;*default-logging&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;db&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;mysql:latest&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;logging&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;*default-logging&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;YAML 머지 형식을 이용하여 원하는 값을 추가할 수 있습니다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;3.9&amp;quot;&lt;/span&gt;
&lt;span class="nt"&gt;x-volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nl"&gt;&amp;amp;default-volume&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;foobar-storage&lt;/span&gt;

&lt;span class="nt"&gt;services&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;web&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;myapp/web:latest&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;vol1&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;vol2&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;vol3&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;span class="nt"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;vol1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;*default-volume&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;vol2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;&amp;lt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;*default-volume&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;volume02&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;vol3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;&amp;lt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;*default-volume&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;default&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;volume-local&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Operation"></category><category term="docker"></category><category term="compose"></category><category term="config file"></category></entry><entry><title>AWS RDS Proxy 간단하게 보기</title><link href="https://ujuc.github.io/2020/07/11/aws-rds-proxy-gan-dan-ha-ge-bo-gi/" rel="alternate"></link><published>2020-07-11T11:01:43+09:00</published><updated>2020-07-11T11:01:43+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2020-07-11:/2020/07/11/aws-rds-proxy-gan-dan-ha-ge-bo-gi/</id><summary type="html">&lt;p&gt;AWS RDS Proxy를 간략하게 정리해보자.&lt;/p&gt;</summary><content type="html">&lt;p&gt;회사에서 사용을 하자고 말이 나와서 진짜 간략하게 정리한걸 조금 정리하는 겸. 만들었는데 블로그도 쓸겸.&lt;/p&gt;
&lt;h3 id="_1"&gt;설명서&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/ko_kr/AmazonRDS/latest/AuroraUserGuide/rds-proxy.html"&gt;Aurora User Guide - RDS proxy&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="_2"&gt;간략 설명&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;대량의 컨넥션이 이뤄져서 컨넥션 풀 관리가 힘들다&amp;hellip;&lt;/li&gt;
&lt;li&gt;우리는 DB를 엄청 크게 쓰고 있어요!&lt;/li&gt;
&lt;li&gt;하는데만 쓰자&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_3"&gt;조금 자세하게&lt;/h3&gt;
&lt;p&gt;DB와 애플리케이션 사이에 존재하여 DB 컨넥션에 대한 처리를 해준다.&lt;/p&gt;
&lt;p&gt;원래는 프로그램상에서 컨넥션 풀을 생성하여 풀 관리를 하면서 작업을 진행해야 하나. 몇몇 언어나 일반 사용자들이 컨넥션 풀에 대해서 인지를 못하고 제대로 사용하고 있지 못하다. 그것을 proxy에서 일정한 컨넥션 풀을 생성하고 연결을 할 수 있도록 도와 주게 된다.&lt;/p&gt;
&lt;p&gt;IAM과 AWS Secrets Manager 를 이용하여 DB 연결하는 비밀번호를 암호화하여 작업할 수 있다.&lt;/p&gt;</content><category term="Operation"></category><category term="rds"></category><category term="aws"></category><category term="rds proxy"></category><category term="cloud"></category></entry><entry><title>맥에서 gpg 키 서명 실패</title><link href="https://ujuc.github.io/2020/02/19/macos-e-seo-gpg-ki-seo-myeong-sil-pae/" rel="alternate"></link><published>2020-02-19T05:38:42+09:00</published><updated>2023-01-18T19:22:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2020-02-19:/2020/02/19/macos-e-seo-gpg-ki-seo-myeong-sil-pae/</id><summary type="html">&lt;p&gt;commit 할때마다 gpg키로 서명하게 해놨는데 안된다. 고치자!&lt;/p&gt;</summary><content type="html">&lt;p&gt;2023.01.18 설정값이 변경된 것들이 있어서 회사 컴퓨터를 새롭게 받아 설치한 기념으로 업데이트 한다. (Thanks to. &lt;a href="https://github.com/roeniss"&gt;@roeniss&lt;/a&gt;)&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;열심히 공부하고 커밋하려는 순간&amp;hellip;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;commit
error:&lt;span class="w"&gt; &lt;/span&gt;gpg&lt;span class="w"&gt; &lt;/span&gt;tailed&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;sign&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;data
fatal:&lt;span class="w"&gt; &lt;/span&gt;failed&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;write&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;object
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;gpg키로 commit을 할때마다 비밀번호를 물어야되는데&amp;hellip;&lt;br&gt;
우리 macOS에서는 비밀번호를 처음에 묻고 keychain에 저장을 해놓으시고 커밋할때마다 자동으로 입력한다.&lt;/p&gt;
&lt;p&gt;그게 문제가 되었다. 오랜만에 재시작을 하면서 섹션 만료가 되었고, 바꼈으면 물어야지&amp;hellip;&lt;br&gt;
조용히 있어서 문제가 되었다.&lt;/p&gt;
&lt;p&gt;이럴때 &lt;a href="https://stackoverflow.com/questions/41502146/git-gpg-onto-mac-osx-error-gpg-failed-to-sign-the-data/41506446"&gt;Stack Overflow/ git - gpg onto mac osx: error: failed to sign the data&lt;/a&gt;에서는 &lt;a href="https://www.gnupg.org/related_software/pinentry/index.en.html"&gt;pinentry&lt;/a&gt;를 추가 설치해서 비밀번호를 얻어서 하라고 되어있다.&lt;/p&gt;
&lt;p&gt;MacOS의 경우, &lt;code&gt;pinentry&lt;/code&gt; 가 &lt;code&gt;pinentry-mac&lt;/code&gt;으로 패키징되어있다. 그래서 다음과같이 설치한다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;pinentry-mac

&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pinentry-program ${which pinentry}&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;~/.gnupg/gpg-agent.conf
&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;GPG_TTY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;tty&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;작동하는지 테스트&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;gpg&lt;span class="w"&gt; &lt;/span&gt;--clearsign
-----BEGIN&lt;span class="w"&gt; &lt;/span&gt;PGP&lt;span class="w"&gt; &lt;/span&gt;SIGNED&lt;span class="w"&gt; &lt;/span&gt;MESSAGE-----
Hash:&lt;span class="w"&gt; &lt;/span&gt;SHA256

&lt;span class="nb"&gt;test&lt;/span&gt;
-----BEGIN&lt;span class="w"&gt; &lt;/span&gt;PGP&lt;span class="w"&gt; &lt;/span&gt;SIGNATURE-----
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;그리고 블로그 쓸려고 확인중 이 문제를 겪었을때 대응 할 수 있다는 다른 방법!&lt;/p&gt;
&lt;h4 id="1-keychain-access"&gt;1. Keychain Access에서 수정&lt;/h4&gt;
&lt;p&gt;macOS에서 &lt;code&gt;Keychain Access&lt;/code&gt;로 접근 Passwords 카테고리에서 gpg키에 대한 비밀번호를 찾고, &lt;code&gt;Access Control&lt;/code&gt;에서 &lt;strong&gt;Confirm before allowing access &amp;gt; Ask for Keychain password&lt;/strong&gt; 를 체크 하도록 하자.&lt;br&gt;
이것도 매번 물어볼꺼다 저장이 안되어있는데 물어야지&amp;hellip;&lt;/p&gt;
&lt;h4 id="2"&gt;2. 처음 입력할때&lt;/h4&gt;
&lt;p&gt;gpg키를 맨처음 입력할때 잘보도록하자 거기에 비밀번호 저장할래가 있을꺼다. 그걸 해지한다.&lt;br&gt;
그러면 매번 git commit할때마다 물을꺼다.&lt;br&gt;
그러면 서명이 가능해지겠지&amp;hellip;&lt;/p&gt;</content><category term="Operation"></category><category term="gpg"></category><category term="key"></category><category term="gnupg"></category><category term="pinentry"></category></entry><entry><title>iTerm shortcut 설정</title><link href="https://ujuc.github.io/2019/12/25/iterm_shortcut_seor-jeong/" rel="alternate"></link><published>2019-12-25T13:06:25+09:00</published><updated>2020-01-10T07:38:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2019-12-25:/2019/12/25/iterm_shortcut_seor-jeong/</id><summary type="html">&lt;p&gt;iTerm를 사용하다보면 커멘드라인 맨앞으로간다거나 중간중간 건너 띄워서 가야할때, 사용하는 단축키를 정리한다.&lt;/p&gt;</summary><content type="html">&lt;h2 id="0110"&gt;01/10 추가&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/channprj"&gt;@channprj&lt;/a&gt; 님께서 댓글로 Hex code로 하지 않아도 된다는 소식을 알려주셨다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;iTerm2 -&amp;gt; Preferences&lt;/li&gt;
&lt;li&gt;Profile &amp;gt; Keys&lt;/li&gt;
&lt;li&gt;Presets&amp;hellip; &amp;gt; Natual Text Editing&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src="https://ujuc.github.io/img/2020-01-10_iterm2.png" width="30%"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;매번 찾았는데&amp;hellip; 이제는 기억을 못해서 써두려고 한다.&lt;/p&gt;
&lt;p&gt;원래 글은 &lt;a href="https://stackoverflow.com/questions/6205157/iterm-2-how-to-set-keyboard-shortcuts-to-jump-to-beginning-end-of-line"&gt;(stackoverflow) iTerm 2: How to set keyboard shorcuts to jump to beginning/end of line?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;지금 글쓰는 오늘 날짜로 8년도 더된 글이다&lt;/p&gt;
&lt;p&gt;이정도면 기본으로 넣어줄 만한데&amp;hellip; 암튼&amp;hellip;&lt;/p&gt;
&lt;p&gt;개인적으로 설정해서 사용하는 답변은 &lt;a href="https://stackoverflow.com/questions/6205157/iterm-2-how-to-set-keyboard-shortcuts-to-jump-to-beginning-end-of-line/22312856#22312856"&gt;두번째&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;iTerm2 -&amp;gt; Preferences&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Key&amp;rdquo; 탭설정&lt;/li&gt;
&lt;li&gt;다음 단축키들을 입력한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="_1"&gt;왼쪽으로 워드 단위 이동&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;키보드 입력: &lt;code&gt;option&lt;/code&gt; + &lt;code&gt;&amp;lt;-&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Action : Send Hex Code&lt;/li&gt;
&lt;li&gt;Code: &lt;code&gt;0x1b 0x62&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_2"&gt;오른쪽으로 워드 단위 이동&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;키보드 입력: &lt;code&gt;option&lt;/code&gt; + &lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Action: Send Hex Code&lt;/li&gt;
&lt;li&gt;Code: &lt;code&gt;0x1b 0x66&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;위의 두 설정을 하게되면 다음 작업을 꼭 해줘야 된다.&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;ldquo;Profiles&amp;rdquo; 열고&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Keys&amp;rdquo; 선택&lt;/li&gt;
&lt;li&gt;&lt;code&gt;option&lt;/code&gt; + &lt;code&gt;&amp;lt;-&lt;/code&gt;, &lt;code&gt;option&lt;/code&gt; + &lt;code&gt;-&amp;gt;&lt;/code&gt; 항목을 삭제한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="_3"&gt;맨 첫번째로 이동&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;키보드 입력: &lt;code&gt;cmd&lt;/code&gt; + &lt;code&gt;&amp;lt;-&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Action: Send Hex Code&lt;/li&gt;
&lt;li&gt;Code: &lt;code&gt;0x01&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_4"&gt;맨끝으로 이동&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;키보드 입력: &lt;code&gt;cmd&lt;/code&gt; + &lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Action: Send Hex Code&lt;/li&gt;
&lt;li&gt;Code: &lt;code&gt;0x05&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Operation"></category><category term="iterm"></category><category term="shortcut"></category></entry><entry><title>Pelican 4.1.0 Release Note</title><link href="https://ujuc.github.io/2019/07/21/pelican_4.1.0_release_note/" rel="alternate"></link><published>2019-07-21T15:23:10+09:00</published><updated>2019-07-21T15:23:10+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2019-07-21:/2019/07/21/pelican_4.1.0_release_note/</id><summary type="html">&lt;p&gt;pelican 4.1.0 이 업글이 되었다.&lt;/p&gt;</summary><content type="html">&lt;p&gt;블로그 정리하다가 업그레이드가 된 걸 알았다.&lt;/p&gt;
&lt;h3 id="410-2019-07-14"&gt;&lt;a href="https://docs.getpelican.com/en/stable/changelog.html#id1"&gt;4.1.0 - 2019-07-14&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;변경된 파일이 있으면 reload 가능 (Invoke 태스크를 통해 제공됨)&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/getpelican/pelican/blob/master/pelican/tools/templates/tasks.py.jinja2#L93"&gt;github - &lt;code&gt;task.py.jinja2&lt;/code&gt;&lt;/a&gt; 에서 확인하면 &lt;code&gt;livereload&lt;/code&gt; 패키지를 사용하여 새롭게 띄울 수 있도록 작업을 해뒀다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Poetry를 사용하여 패키지 관리&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pyproject.toml&lt;/code&gt; 를 이용하게 됨.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python -m pelican&lt;/code&gt; 형태로 호출 가능&lt;ul&gt;
&lt;li&gt;env 환경에서 굳이&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;콘텐츠 상대 소스 경로 속성 추가&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EXTRA_PATH_METADATA&lt;/code&gt; 디렉토리 허용&lt;/li&gt;
&lt;li&gt;템플릿에서 사용 가능한 &lt;code&gt;all_articles&lt;/code&gt; 변수가 추가됨.&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.getpelican.com/en/stable/themes.html?highlight=all_articles#common-variables"&gt;Common variables&lt;/a&gt; 항목 확인 가능&lt;/li&gt;
&lt;li&gt;최근 소식 전달을 위한 기능 용&amp;hellip;?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;디버그 모드에서 출력 화면 향상&lt;/li&gt;
&lt;li&gt;Atom 피드에서 비었거나 중복된 summary 항목 삭제&lt;/li&gt;
&lt;li&gt;페이지네이션, pelican-import, pelican-quickstart, 피드 임포터 버그 수정&lt;/li&gt;
&lt;/ul&gt;</content><category term="Operation"></category><category term="pelican"></category><category term="static blogging tools"></category><category term="python"></category></entry><entry><title>Docker Image 옮기기 (without DockerHub)</title><link href="https://ujuc.github.io/2019/05/18/docker_image_orm-gi-gi_(without_dockerhub)/" rel="alternate"></link><published>2019-05-18T11:59:45+09:00</published><updated>2019-05-18T11:59:45+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2019-05-18:/2019/05/18/docker_image_orm-gi-gi_(without_dockerhub)/</id><summary type="html">&lt;p&gt;반강제 폐쇄망에 이미지를 올리자.&lt;/p&gt;</summary><content type="html">&lt;p&gt;외부로 나가서는 안되는 Docker 이미지를 만들게 되었다. 그러다보니 Docker Hub를 사용하거나 AWS ECR을 사용하는건 제외. &lt;/p&gt;
&lt;p&gt;개발 과정에서 실제 OS에서 작동하는지 확인을 위한것이라 올리고 인증하고 귀찮다.&lt;/p&gt;
&lt;p&gt;뭘로 검색했는지는 기억이 없지만 다음과 같은 글을 확인했고, 다음과 같은 명령을 사용하면 인터넷이나 Docker 레포없이 작업이 가능하다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;출처: &lt;a href="https://stackoverflow.com/questions/23935141/how-to-copy-docker-images-from-one-host-to-another-without-using-a-repository"&gt;How to copy Docker images from one host to another without using a repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;우선 로컬에서 Docker 이미지를 빌드한다. 명령어는 알꺼니 넘어가자.&lt;/p&gt;
&lt;p&gt;다름 명령을 이용해서 tar 파일을 만들자.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;save&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;path&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;generated&lt;span class="w"&gt; &lt;/span&gt;tar&lt;span class="w"&gt; &lt;/span&gt;file&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;imange&lt;span class="w"&gt; &lt;/span&gt;name&amp;gt;:&amp;lt;tag&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;만들어진 tar 파일을 원하는 곳에 업로드 시킨다.&lt;/p&gt;
&lt;p&gt;이제 올린 노드에서 사용할 수 있도록 이미지를 docker에 등록해주면 끝.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;load&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;path&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;image&lt;span class="w"&gt; &lt;/span&gt;tar&lt;span class="w"&gt; &lt;/span&gt;file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="_1"&gt;참고&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/engine/reference/commandline/save/"&gt;docker save&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/engine/reference/commandline/load/"&gt;docker load&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Operation"></category><category term="docker"></category><category term="docker image"></category></entry><entry><title>I hate input gpgkey in JetBrains IDEAs</title><link href="https://ujuc.github.io/2018/11/27/i_hate_input_gpgkey_in_jetbrains_ideas/" rel="alternate"></link><published>2018-11-27T01:31:32+09:00</published><updated>2018-11-27T01:31:32+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2018-11-27:/2018/11/27/i_hate_input_gpgkey_in_jetbrains_ideas/</id><summary type="html">&lt;p&gt;JetBrains IDEA를 주력하여 사용 중인데. GPG 키가 계속 침범을 하네? 그래서 문제를 찾았다.&lt;/p&gt;</summary><content type="html">&lt;p&gt;이모든 원흉은 나의 과욕이었음을&amp;hellip;&lt;/p&gt;
&lt;p&gt;모든 코딩을 JetBrains의 IDEA에서 한다. 아직 vim이 익숙하지 않아서 그렇기도 하고&amp;hellip;&lt;/p&gt;
&lt;p&gt;언젠가 GPG키를 이용해서 git sign을 위해서 GPG suite를 설치해놨는데. 이넘이 문제일줄이야..&lt;/p&gt;
&lt;h2 id="_1"&gt;증상&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shift + cmd +r&lt;/code&gt; , &lt;code&gt;shift + cmd + f&lt;/code&gt; 키를 누르면 아래 모습처럼 GPG 키가&amp;hellip; 계속 복사가 된다.&lt;/p&gt;
&lt;p&gt;&lt;img alt="shift_cmd_r" src="https://ujuc.github.io/img/2018-11-27_shift_cmd_r.png"&gt; &lt;/p&gt;
&lt;p&gt;&lt;img alt="shift_cmd_f" src="https://ujuc.github.io/img/2018-11-27_shift_cmd_f.png"&gt;&lt;/p&gt;
&lt;h2 id="_2"&gt;해결&lt;/h2&gt;
&lt;p&gt;간단하다. System Preferences 가서 키보드 단축키에서 GPG suite에 관련된 것들을 unchecked 한다.&lt;/p&gt;
&lt;p&gt;&lt;img alt="system_preferences" src="https://ujuc.github.io/img/2018-11-27_system_preferences.png"&gt; &lt;/p&gt;</content><category term="Operation"></category><category term="jetbrains idea"></category><category term="gpg suite"></category><category term="key mapping"></category></entry><entry><title>MacOS Mojave에서 Google Drive Stream 오류</title><link href="https://ujuc.github.io/2018/11/17/macos_mojavee-seo_google_drive_stream_o-ryu/" rel="alternate"></link><published>2018-11-17T10:35:17+09:00</published><updated>2018-11-17T10:35:17+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2018-11-17:/2018/11/17/macos_mojavee-seo_google_drive_stream_o-ryu/</id><summary type="html">&lt;p&gt;Google Drive Stream이 실행은 커녕 죽어버린다.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Google Drive Stream을 사용하고 있다. 그런데 Mojave로 OS를 업로드한 뒤부터는 실행이 안되고 어느 정도 작동하다가 죽어버리는 현상을 확인하였다.&lt;/p&gt;
&lt;p&gt;사진도 못 옮기고 이것저것 텍스트들도 제대로 작업을 못하던 중에 혹시나 그냥 앱만 지우면 안 되는 건가라는 생각에서 매뉴얼을 찾아서 보고 작동이 되는 것을 확인하였다.&lt;/p&gt;
&lt;p&gt;그냥 이렇게 하면 된다고 말 한마디면 되는 건데&amp;hellip; G Suite 쪽은 제대로 알려주는 것이 없으니&amp;hellip;&lt;/p&gt;
&lt;p&gt;터미널이 편하다면 터미널로 아니라면 해당 위치에 있는 파일들을 삭제하면 된다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;rm&lt;span class="w"&gt; &lt;/span&gt;-rf&lt;span class="w"&gt; &lt;/span&gt;/Applications/Google&lt;span class="se"&gt;\ &lt;/span&gt;Drive&lt;span class="se"&gt;\ &lt;/span&gt;File&lt;span class="se"&gt;\ &lt;/span&gt;Stream.app/
$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;rm&lt;span class="w"&gt; &lt;/span&gt;-rf&lt;span class="w"&gt; &lt;/span&gt;~/Library/Application&lt;span class="w"&gt; &lt;/span&gt;Support/Google/DriveFS/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;위의 내용처럼 작업하고 재시작하면 잘 실행된다.&lt;/p&gt;</content><category term="Operation"></category><category term="google drive stream"></category><category term="macos"></category><category term="mojave"></category></entry><entry><title>Linux 우선순위 설정</title><link href="https://ujuc.github.io/2018/09/28/linux_u-seon-sun-wi_seor-jeong/" rel="alternate"></link><published>2018-09-28T18:47:14+09:00</published><updated>2018-09-28T18:47:14+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2018-09-28:/2018/09/28/linux_u-seon-sun-wi_seor-jeong/</id><summary type="html">&lt;p&gt;Linux에서 프로세스 우선순위를 정하는 방법에 대해서 알아보도록 하자&amp;hellip;&lt;/p&gt;</summary><content type="html">&lt;p&gt;리눅스에서는 두가지 숫자를 이용하여 task(process)에 대한 우선순위를 정할 수 있다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Priority (PR)&lt;br&gt;
Task에 대한 스케쥴링 우선순위에 대한 값을 나타낸다. &lt;code&gt;rt&lt;/code&gt; 항목은 리얼타임 항목에 대한 내용을 나타냄&lt;/li&gt;
&lt;li&gt;Nice (NI)&lt;br&gt;
Task에 대한 nice 값을 나타낸다. 사용자 레벨에서 수정이 가능하다. -20 ~ +19 까지의 값을 가지고 있으며, -20값이 우선순위가 가장 높은 값이고 양수로 올라갈수록 낮은 값이다. 0은 &lt;code&gt;PR&lt;/code&gt; 값과 동일한 설정을 나타낸다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="rriority"&gt;Rriority 계산&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;PR = 20 + (-20 ~ +19)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;해당 계산식을 이용하면 0 ~ 39 사이의 값이 되는데 이것은 Priority 값의 100 ~ 139 사이 값에 대응된다.&lt;/p&gt;
&lt;h2 id="rriority_1"&gt;Rriority&lt;/h2&gt;
&lt;p&gt;Linux에서는 Task에 대한 우선 순위를 정할 수 있다. 물론 User task priority 만 가능하다. RT task priority 부분은 사용자 권한으로 접근이 안된다.&lt;/p&gt;
&lt;p&gt;자세한 내용을 확인하려면 다음 URL에서 확인을 하도록하자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.ibm.com/developerworks/linux/library/l-scheduler/"&gt;IBM - Inside the Linux scheduler&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;리눅스 커널 2.6 버전이상에서 사용하는 스케쥴러에 대한 내용이 정리되어있다.&lt;/li&gt;
&lt;li&gt;여기서는 다음 그림을 참조하면된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="The Linux 2.6 scheduler runqueue structure
" src="https://www.ibm.com/developerworks/linux/library/l-scheduler/figure1.gif"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.suse.com/documentation/sles11/book_sle_tuning/data/cha_tuning_taskscheduler.html"&gt;SUSE - Tuning the Task Scheduler&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SUSE 11 버전에서 튜닝하는 것에 대한 내용 중 하나이다. 12 버전에 대한건 딴문서가 있으니 확인.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;우선순위 설정&lt;/h2&gt;
&lt;h3 id="daemon"&gt;Daemon 구성 파일에서 설정&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/etc/init.d&lt;/code&gt; 에서 서비스 파일을 이용하여 &lt;code&gt;--nicelevel&lt;/code&gt; 옵션 추가&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://unix.stackexchange.com/a/123926"&gt;Setting up init.d service daemon priority (with or without monit)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/etc/init.d&lt;/code&gt; 에서 서비스 파일에 주석으로 &lt;code&gt;# chkconfig:&lt;/code&gt; 옵션 추가&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://serverfault.com/questions/754676/how-to-change-the-startup-order-of-linux-init-scripts-in-redhat-centos"&gt;how to change the startup order of linux init scripts in Redhat, Centos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Systemd 에서 설정하는 방법&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.freedesktop.org/software/systemd/man/systemd.exec.html#Scheduling"&gt;systemd.exec&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="limitsconf"&gt;&lt;code&gt;limits.conf&lt;/code&gt; 파일에서 지정&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;특정 사용자에 대한 모든 프로세스에대한 값을 정할때 사용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Username    hard/soft    priority    10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;다음 링크에서 자세하게 확인하도록 하자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://unix.stackexchange.com/questions/8983/set-default-nice-value-for-a-given-user-limits-conf"&gt;Set default nice value for a given user (limits.conf)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mankier.com/5/limits.conf"&gt;limits.conf man page - pam | ManKier&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="nice"&gt;&lt;code&gt;nice&lt;/code&gt; 명령을 이용하여 동적으로 할당하는 방법&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;일반적인 사용법&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nice -n {nice_value} {program_name}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://askubuntu.com/questions/656771/process-niceness-vs-priority"&gt;Process &amp;lsquo;niceness&amp;rsquo; vs. &amp;lsquo;priority&amp;rsquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bencane.com/2013/09/09/setting-process-cpu-priority-with-nice-and-renice/"&gt;Setting process CPU priority with nice and renice | Benjamin Cane&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://unix.stackexchange.com/questions/72934/how-do-i-start-a-process-with-a-nice-value-of-20-and-not-give-it-root-privilege"&gt;How do I start a process with a nice value of -20 and not give it root privilege?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="daemon_1"&gt;특정 프로그램으로 Daemon을 이용하여 관리하는 방법&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://and.sourceforge.net/"&gt;Auto nice daemon&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;업그레이드가 2005년 이후로 안되고 있다.&lt;/li&gt;
&lt;li&gt;그러니 사용하기 꺼림직&amp;hellip;&lt;/li&gt;
&lt;li&gt;찾다가 나왔으니 뭐&amp;hellip;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/linuxquestions/comments/4ctr5c/is_the_autonice_daemon_and_safe_to_use/"&gt;Reddit 글&lt;/a&gt; 에서는 사용하기가 불안하다는 내용도&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nefelim4ag/Ananicy"&gt;Ananicy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Another Auto nice daemon&lt;/li&gt;
&lt;li&gt;지금까지 개발중이다.&lt;/li&gt;
&lt;li&gt;Role 값을 JSON 형식으로 작업이 가능하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PS. IO Priority를 변경하고 싶다면 &lt;code&gt;ionice&lt;/code&gt;를 확인하도록 하자. (&lt;a href="https://linux.die.net/man/1/ionice"&gt;manpage&lt;/a&gt;)&lt;/p&gt;</content><category term="Operation"></category><category term="linux"></category><category term="priority"></category><category term="scheduler"></category></entry><entry><title>Recoll - 리눅스에서 GUI로 문서 검색을 해보자</title><link href="https://ujuc.github.io/2018/09/23/recoll_-_ri-nug-seu-e-seo_guiro_mun-seo_geom-saeg-eur_hae-bo-ja/" rel="alternate"></link><published>2018-09-23T23:27:51+09:00</published><updated>2018-09-23T23:27:51+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2018-09-23:/2018/09/23/recoll_-_ri-nug-seu-e-seo_guiro_mun-seo_geom-saeg-eur_hae-bo-ja/</id><summary type="html">&lt;p&gt;페이스북에서 보았던 recoll이라는 프로그램에 대해서 정리만 해둔다.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://www.facebook.com/groups/korelnxuser/permalink/1108262849348464/0"&gt;페이스북 우분투 유저 그룹에 올라온 글&lt;/a&gt;이 있었다.&lt;/p&gt;
&lt;p&gt;이글은 나중에 혹시나 쓸까하여&amp;hellip; 리눅스를 메인을 사용할 일은 거의 없긴하다만&amp;hellip;&lt;/p&gt;
&lt;p&gt;소개글은 다음과 같다. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fossmint.com/recoll-file-text-search-tool-for-linux/"&gt;FOSS Mint - Recoll - A Full-Text GUI Search Tool for Linux System&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;여기서는 그냥 간단한 소개정도만 &amp;hellip;&lt;/p&gt;
&lt;h2 id="_1"&gt;특징&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://xapian.org/"&gt;Xapian 서치 엔진&lt;/a&gt; 기반&lt;/li&gt;
&lt;li&gt;텍스트 추출할 수 있는 플러그인 지원&lt;/li&gt;
&lt;li&gt;왠만한 문서 포멧 지원&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;더 눈에 띄는 것은 &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thunderbird에서 zip으로 압축되어있는 파일에 들어있는 문서 파일도 검색가능&amp;hellip;&lt;/p&gt;
&lt;p&gt;Recoll will index an MS-Word document stored as an attachment to an e-mail message inside a Thunderbird folder archived in a Zip file (and more&amp;hellip;). It will also help you search for it with a friendly and powerful interface, and let you open a copy of a PDF at the right page with two clicks. There is little that will remain hidden on your disk.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;지금은 맥을 쓰고 있어서 딱히&amp;hellip; 내부 검색이 필요한 것들은 전부 구글에&amp;hellip; 음 언제 한번써볼까?&lt;/p&gt;</content><category term="Operation"></category><category term="recoll"></category><category term="document"></category><category term="search"></category><category term="gui"></category></entry><entry><title>man page Section</title><link href="https://ujuc.github.io/2018/03/10/man_page_section/" rel="alternate"></link><published>2018-03-10T14:42:46+09:00</published><updated>2018-03-10T14:42:46+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2018-03-10:/2018/03/10/man_page_section/</id><summary type="html">&lt;p&gt;&lt;code&gt;man&lt;/code&gt; 페이지를 보다보면 숫자가 적혀있다. 그거 간략하게 본다.&lt;/p&gt;</summary><content type="html">&lt;p&gt;항상  &lt;code&gt;man&lt;/code&gt; 페이지를 끼고 보는데&amp;hellip; &lt;code&gt;ls(1)&lt;/code&gt; 이라 적혀있는 페이지를 볼 수 있다.&lt;br&gt;
해당 내용을 매번 찾다가&amp;hellip; 찾는것도 힘들고해서&amp;hellip;&lt;/p&gt;
&lt;p&gt;찾다보니 해당 숫자는 section 숫자라고..&lt;br&gt;
해당되는 내용들은.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;사용자 명령어&lt;/li&gt;
&lt;li&gt;시스템 콜&lt;/li&gt;
&lt;li&gt;C 라이브러리 함수&lt;/li&gt;
&lt;li&gt;디바이스와 특수 파일&lt;/li&gt;
&lt;li&gt;파일 포맷과 컨밴션&lt;/li&gt;
&lt;li&gt;게임 외&amp;hellip; (Games et. al.)&lt;/li&gt;
&lt;li&gt;여러 등등 (Miscellanea)&lt;/li&gt;
&lt;li&gt;시스템 어드민 툴과 데몬&lt;/li&gt;
&lt;li&gt;커널 루틴&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;그런데 이 섹션은&amp;hellip; 1971년 11월 3일에 작성된(?) &lt;a href="https://www.bell-labs.com/usr/dmr/www/manintro.html"&gt;UNIX programmer&amp;rsquo;s manual&lt;/a&gt; 섹션이라고&amp;hellip;&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h3 id="_1"&gt;참고 자료&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://unix.stackexchange.com/questions/3586/what-do-the-numbers-in-a-man-page-mean"&gt;What do the numbers in a man page mean?&lt;/a&gt;&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;잼나다잉, https://unix.stackexchange.com/a/3607&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Operation"></category><category term="man"></category><category term="manual"></category><category term="linux"></category></entry><entry><title>RSYSLOG - Templates</title><link href="https://ujuc.github.io/2018/03/01/rsyslog_-_templates/" rel="alternate"></link><published>2018-03-01T18:45:41+09:00</published><updated>2018-03-01T18:45:41+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2018-03-01:/2018/03/01/rsyslog_-_templates/</id><summary type="html">&lt;p&gt;Rsyslog 에서 사용되는 template 에 관련된 내용을 정리합시다.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;/var/log/syslog&lt;/code&gt;로 모여드는 서비스들의 로그를 다른 곳으로 옮기고, 해당 내용을 확인하기 위해 파싱을 할 수 있도록 변경하는 작업이 필요했다.&lt;br&gt;
그래서 내가 필요한 로그를 syslog에서 때어낸후 다른 파일로 옮기는 작업을 성공. 하지만 그 이상의 작업을 하기위해서는 rsyslog에서 template을 작성하여야 내가 필요한 메시지만 작성할 수 있는 것을 확인하였기에 해당 부분을 찾아 변경하였다.&lt;/p&gt;
&lt;p&gt;그러면서 참고하려고 했던 문서들이 전부 영문이라. 한국어로 내가 정리해두고 나중에 또 찾아봐야겠다는 생각에서 글을 작성한다.&lt;/p&gt;
&lt;h2 id="template"&gt;Template&lt;/h2&gt;
&lt;p&gt;Rsyslog에서는 기본적인 포맷이 아닌 사용자가 필요한 내용으로 포맷을 변경할 수 있는 옵션을 제공한다.&lt;/p&gt;
&lt;p&gt;작성하는 포맷은 두가지가 있으며, 검색해보면 전부 Legacy 포맷으로 적도록 되어있으니 두개는 보기 편한걸로 작성해두면 될것으로 보인다.&lt;/p&gt;
&lt;h3 id="template-statement"&gt;&lt;code&gt;template()&lt;/code&gt; statement&lt;/h3&gt;
&lt;p&gt;문서상으로는 7버전 이상에서 사용할 수 있는 포맷이다.&lt;/p&gt;
&lt;p&gt;아래의 예제는 파일에 로그를 작성하는 기본 템플릿이다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;FileFormat&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;list&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;timestamp&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dateFormat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rfc3339&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;constant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hostname&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;constant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;syslogtag&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;msg&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;spifno1stsp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;on&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;msg&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;droplastlf&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;on&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;constant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;작성된 템플릿을 이용해서 분석해보자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;template(parameters) { list-descriptions }&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;이런 구조로 작성된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="parameters"&gt;&lt;code&gt;parameters&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;: 해당 템플릿의 이름이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type&lt;/code&gt;: 템플릿을 어떤 용도로 사용할 것인가에 대한 내용을 작성한다고 보면된다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;option&lt;/code&gt;: 템플릿을 어떤 형식으로 출력할 것인지에대해서 추가로 정할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="type"&gt;&lt;code&gt;type&lt;/code&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.rsyslog.com/doc/v8-stable/configuration/templates.html#list"&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.rsyslog.com/doc/v8-stable/configuration/templates.html#constant-statement"&gt;&lt;code&gt;constant&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;상수 텍스트에 대한 내용들을 작성한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\n&lt;/code&gt;, &lt;code&gt;\ooo&lt;/code&gt;, &lt;code&gt;\xhh&lt;/code&gt;, &lt;code&gt;&lt;/code&gt; 와 같은 내용들을 작성해 둘 수 있다.&lt;/li&gt;
&lt;li&gt;그리고 다음 파라미터를 입력하여 사용할 수도 있다.&lt;ul&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt; - 사용하는 상수 값&lt;/li&gt;
&lt;li&gt;&lt;code&gt;outname&lt;/code&gt; - 출력 필드 이름&lt;/li&gt;
&lt;li&gt;&lt;code&gt;format&lt;/code&gt; - &lt;code&gt;jsonf&lt;/code&gt;나 그냥 빈칸&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rsyslog.com/doc/v8-stable/configuration/templates.html#property-statement"&gt;&lt;code&gt;property&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;속성에 대한 내용들을 작성한다.&lt;/li&gt;
&lt;li&gt;해당 내용은 종류가 많아서 넘어간다.&lt;/li&gt;
&lt;li&gt;Legacy format에서 &lt;code&gt;%property%&lt;/code&gt; 형식으로 들어가는 내용과 동일하다고 보면 될것같다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rsyslog.com/doc/v8-stable/configuration/templates.html#subtree"&gt;&lt;code&gt;subtree&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7.4.1 버전이후로 나온 타입이다.&lt;/li&gt;
&lt;li&gt;예제를 보면 더 쉽게 알수 있을 것이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;usr&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;tpl2&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;usr&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;tpl2&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;dataflow&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tpl2&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;subtree&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;subtree&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;$!usr!tpl2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.rsyslog.com/doc/v8-stable/configuration/templates.html#string"&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Lagacy format 형식으로 쭉 적는거다.&lt;/li&gt;
&lt;li&gt;예제를 보자&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tpl3&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%TIMESTAMP:::date-rfc3339% %HOSTNAME% %syslogtag%%msg:::sp-if-no-1st-sp%%msg:::drop-last-lf%\n&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.rsyslog.com/doc/v8-stable/configuration/templates.html#plugin"&gt;&lt;code&gt;plugin&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;플러그인을 만들때 사용한다고 하는데&amp;hellip; 쓸일이 있을까??&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="option"&gt;&lt;a href="http://www.rsyslog.com/doc/v8-stable/configuration/templates.html#options"&gt;&lt;code&gt;option&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;예제로 이해하자. 필요하면 링크를 타고 보고.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;outfmt&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;list&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;jsonf&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;on&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;outname&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@timestamp&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;timereported&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;dateFormat&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;rfc3339&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;jsonf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;outname&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;host&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hostname&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;jsonf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;outname&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;severity&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;syslogseverity-text&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;caseConversion&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;upper&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;jsonf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;outname&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;facility&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;syslogfacility-text&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;jsonf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;outname&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;syslog-tag&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;syslogtag&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;jsonf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;outname&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;source&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;app-name&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;jsonf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;outname&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;msg&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;jsonf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;이렇게 작성하면,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;@timestamp&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;2018-03-01T01:00:00+00:00&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;host&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;172.20.245.8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;severity&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;DEBUG&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;facility&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;local4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;syslog-tag&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;tag&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;source&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;tag&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot; msgnum:00000000:&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="legacy-format"&gt;Legacy Format&lt;/h3&gt;
&lt;p&gt;6 이전 버전에서 사용하던 포멧이다. rsyslog template으로 해서 검색을 하면 가장 많이 나오는 포멧. 공식 문서에서는 사용하지 않을 것을 권고하고있다.&lt;/p&gt;
&lt;p&gt;아래의 예제는 파일에 로그를 작성하는 기본 템플릿이다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="nv"&gt;template&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;FileFormat&lt;/span&gt;,&lt;span class="s2"&gt;&amp;quot;%TIMESTAMP:::date-rfc3339% %HOSTNAME% %syslogtag%%msg:::sp-if-no-1st-sp%%msg:::drop-last-lf%\n&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;작성 요령은 &lt;code&gt;$template&lt;/code&gt; 변수, &lt;code&gt;template 이름&lt;/code&gt;, &lt;code&gt;"%PROPERTY_NAME[:FROM_CHAR:TO_CHAR:OPTION]%"&lt;/code&gt;. 필요한 내용들을 작성하면된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Property&lt;/code&gt; 내용은 &lt;a href="http://www.rsyslog.com/doc/v8-stable/configuration/properties.html"&gt;도큐먼트&lt;/a&gt;에 작성되어있다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FROM_CHAR&lt;/code&gt;, &lt;code&gt;TO_CHAR&lt;/code&gt; 부분은 어디서 어디까지&amp;hellip; &lt;code&gt;%msg:1:2%&lt;/code&gt;라고 작성했다면 메시지에서 첫번째 문자에서 두번째 문자까지 보여달라고 하는것. &lt;code&gt;FROM_CHAR&lt;/code&gt; 을 작성하고 맨끝열까지 하고 싶다면, &lt;code&gt;TO_CHAR&lt;/code&gt;에다가 숫자가 아닌 &lt;code&gt;$&lt;/code&gt;를 입력하면 문자열의 맨마지막까지 보여주게 된다.&lt;ul&gt;
&lt;li&gt;&lt;code&gt;FROM_CHAR&lt;/code&gt; 부분에 &lt;code&gt;F&lt;/code&gt; 입력&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%msg:F:2%&lt;/code&gt; 라고 입력하면 &lt;code&gt;test\tchar&lt;/code&gt;라면 &lt;code&gt;[test, char]&lt;/code&gt;로 분리하고 &lt;code&gt;char&lt;/code&gt;만 보여주게된다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;F,ASCII_CODE&lt;/code&gt;로 입력하면, 해당 문자로 나누게 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FROM_CHAR&lt;/code&gt; 부분에 &lt;code&gt;R&lt;/code&gt; 입력&lt;ul&gt;
&lt;li&gt;정규식을 사용한다는 것.&lt;/li&gt;
&lt;li&gt;해당 내용은 man 페이지를&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OPTION&lt;/code&gt;은 &lt;a href="http://manpages.ubuntu.com/manpages/xenial/en/man5/rsyslog.conf.5.html"&gt;man 페이지&lt;/a&gt; Property Options 항목을 확인하자.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_1"&gt;동적 파일 이름 생성&lt;/h3&gt;
&lt;p&gt;두가지 방식이 있다만, 첫번째 방식으로 작성해서 템플릿 구성을 맞추는게 좋을것으로 보인다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;DynFile&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/var/log/system-%HOSTNAME%.log&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DynFile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/var/log/system-%HOSTNAME%.log&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="_2"&gt;결.&lt;/h2&gt;
&lt;p&gt;Rsyslog는 지금 리눅스에서 기본적으로 사용되는 System logging 프로그램이다. 그렇기에 사용하기가 쉽고 쉽게 다가갈 수 있다.&lt;br&gt;
이런 것으로 우선 1차 정리하고 더 설정할 수 없는 것들은 프로그램에서 정리를 하거나 다른 프로그램을 사용하거나 해도 될듯. 무작정 패키지를 추가할 수 없는 시스템에서는 어쩔 수 없는 선택이긴하다만&amp;hellip;&lt;/p&gt;
&lt;p&gt;삽질한 내용을 작성해 두려고 한건데&amp;hellip; 글쓰는데 더 삽질을&amp;hellip; ㅡ.ㅡa&lt;/p&gt;
&lt;p&gt;다음번엔 원격 서버로 로컬 서버 로그를 넘기는 방법에 대해서 정리를 해볼까&amp;hellip; 이 내용은 많던데&amp;hellip;&lt;/p&gt;
&lt;h2 id="_3"&gt;참고 페이지&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.rsyslog.com/doc"&gt;rsyslog doc homepage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Operation"></category><category term="syslog"></category><category term="rsyslog"></category><category term="log"></category><category term="system"></category><category term="linux"></category></entry><entry><title>Ubuntu 17.10에서부터 기본으로 사용되는 Netplan</title><link href="https://ujuc.github.io/2017/11/18/ubuntu_17.10e-seo-bu-teo_gibon-eu-ro_sa-yong-doe-neun_netplan/" rel="alternate"></link><published>2017-11-18T00:54:20+09:00</published><updated>2017-11-18T00:54:20+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2017-11-18:/2017/11/18/ubuntu_17.10e-seo-bu-teo_gibon-eu-ro_sa-yong-doe-neun_netplan/</id><summary type="html">&lt;p&gt;Ubuntu 17.10 부터 ifupdown 패키지가 사용되지 않는다는 소식. Only Ubuntu. 그래서 Netplan은 뭘까?&lt;/p&gt;</summary><content type="html">&lt;p&gt;처음에는 리눅스에서 IP를 Static하게 구성하기위해 &lt;a href="https://askubuntu.com/questions/967695/ubuntu-17-10-will-not-accept-static-ip/967819#967819"&gt;검색한 페이지&lt;/a&gt;에서 독특한 문법을 확인했다.&lt;/p&gt;
&lt;p&gt;문의 내용은 17.10에서는 &lt;code&gt;/etc/network/interfaces&lt;/code&gt;에 작성해둔 설정이 안먹힌다는 것이었다. 그러면서 답변으로 달린것이 &lt;a href="https://askubuntu.com/a/967819/126675"&gt;요내용&lt;/a&gt;이다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ifupdown&lt;/code&gt; 패키지를 더이상 사용하지 않고, Ubuntu 17.10 Server에서 부터는 &lt;code&gt;netplan&lt;/code&gt;이라는 것을 사용하여 &lt;code&gt;systemd-networkd&lt;/code&gt;를 제어한다고 명시하고 있다.&lt;/p&gt;
&lt;p&gt;사용법이 묘하다. 혹시나해서 &lt;a href="https://wiki.ubuntu.com/ArtfulAardvark/ReleaseNotes"&gt;Ubuntu 17.10 release note&lt;/a&gt;를 보러갔지. 그랬더니 &lt;strong&gt;Update Packages&lt;/strong&gt;에 당당히 Linux kernel 다음에 한 꼭지로 있다. 내용은 다음 과 같다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;ifupdown&lt;/strong&gt; has been deprecated in favor of &lt;strong&gt;netplan&lt;/strong&gt; and is no longer present on new installs. The installer will generate a configuration file for &lt;strong&gt;netplan&lt;/strong&gt; in &lt;em&gt;/etc/netplan&lt;/em&gt;, which will set up the system to configure the network via systemd-networkd or NetworkManager. Desktop users will see their system fully managed via NetworkManager as it has been the case in previous releases, but Server users now have their network devices managed via systemd-networkd on new installs. This only applies to new installations.&lt;/p&gt;
&lt;p&gt;Given that ifupdown is no longer installed by default, its commands will not be present: &lt;code&gt;ifup&lt;/code&gt; and &lt;code&gt;ifdown&lt;/code&gt; are thus unavailable, replaced by &lt;code&gt;ip link set $device up&lt;/code&gt; and &lt;code&gt;ip link set $device down&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;networkctl&lt;/code&gt; command is also available for users to see a summary of the network devices. &lt;code&gt;networkctl&lt;/code&gt; status will display the current global state of IP addresses on the system; and &lt;code&gt;networkctl status $device&lt;/code&gt; can display the details specific to a network device.&lt;/p&gt;
&lt;p&gt;For more information about netplan, please refer to the manual page using the &lt;code&gt;man 5 netplan&lt;/code&gt; command.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;그리고 찾다보니 이건 Ubuntu에서만 사용하는 프로젝트로 보이는데&amp;hellip; 다른 배포판에서는 사용될 확률이 높지는 않으니&amp;hellip; 이것참&amp;hellip;&lt;/p&gt;
&lt;p&gt;아래 내용은 정리해둔거고, 나중에 man 페이지나 정리해서 올려둬야겠다.&lt;/p&gt;
&lt;h2 id="netplan"&gt;Netplan&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Design overview" src="https://wiki.ubuntu.com/Netplan/Design?action=AttachFile&amp;amp;do=get&amp;amp;target=design_overview.png"&gt;&lt;/p&gt;
&lt;h3 id="netplan_1"&gt;Netplan 소개&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;YAML 구성 파일을 사용하여 네트워크 구성을 한다.&lt;/li&gt;
&lt;li&gt;초기 부팅시, “network renderer” 작동할때 &lt;em&gt;/{lib,etc,run}/netplan*.yaml&lt;/em&gt; 내용을 읽고, 지정된 네트워킹 daemon에 장치에 대한 &lt;em&gt;/run&lt;/em&gt; 에 구성을 쓴다.&lt;/li&gt;
&lt;li&gt;systemd-networkd 를 renderer 기본 값으로 하여 장치를 핸들링하며, 다른 renderer (NetworkManger)를 지정할 수 있다.&lt;/li&gt;
&lt;li&gt;네트워크 구성에서 다루지 않는 장치는 전혀 건드리지 않는다.&lt;/li&gt;
&lt;li&gt;initramfs에서 사용이 가능하다.&lt;/li&gt;
&lt;li&gt;구성이 지속되지 않고, YAML 로만 구성을 작성한다.&lt;/li&gt;
&lt;li&gt;파서는 어플리케이션 (libvert, lxd)에서 사용이 예상되는 네트워크 구성 (&lt;code&gt;virtbr0&lt;/code&gt;, &lt;code&gt;lxdvr0&lt;/code&gt;)를 패키지화 할 수 있도록 멀티 구성 파일에 대한 지원을 하거나, NetworkManager를 이용하여 모든 것을 사용하도록 글로벌 기본 정책을 변경할 수 있어야한다.&lt;/li&gt;
&lt;li&gt;백엔드/정책을 변경하거나, &lt;code&gt;apt purge network-manager&lt;/code&gt;를 할 수 있는 유연성을 유지해야한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_1"&gt;명령어&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;netplan generate&lt;/code&gt; : &lt;em&gt;/etc/netplan&lt;/em&gt;에 renderer에 대한 구성들을 생성한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;netplan apply&lt;/code&gt; : renderer에 대한 구성들을 적용하고, 필요에따라 재시작한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;netplan ifupdown-migrate&lt;/code&gt; : &lt;em&gt;/etc/network/interfaces&lt;/em&gt; 의 내용을 마이그레이션 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_2"&gt;사용법&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;설정한 인터페이스 끄고키기&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;ip&lt;span class="w"&gt; &lt;/span&gt;link&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$dev&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;up
$&lt;span class="w"&gt; &lt;/span&gt;ip&lt;span class="w"&gt; &lt;/span&gt;link&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$dev&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;down
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;고정 아이피 설정 &lt;em&gt;/etc/netplan/a.yaml&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;network&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;renderer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;networkd&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;ethernets&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;enp3s0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;addresses&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;10.10&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;10.2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;dhcp4&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="netplan_2"&gt;Netplan을 사용하고 싶지 않을 경우&lt;/h3&gt;
&lt;p&gt;Ubuntu 서버 설치 이미지로 부팅시 grub (&lt;code&gt;e&lt;/code&gt; 버튼을 클릭해서 수정하거나, F6을 눌러 bootspash로 들어가서)에서 preseeding 설정으로 &lt;code&gt;netcfg/do_not_use_netplan=true&lt;/code&gt; 명령을 추가해줍니다.&lt;/p&gt;
&lt;h2 id="_3"&gt;참고 페이지&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Homepage : &lt;a href="https://launchpad.net/netplan"&gt;launchpad.net/netplan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Code : &lt;a href="https://git.launchpad.net/netplan"&gt;git.launchpad.net/netplan&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;첫 커밋 : &lt;a href="https://git.launchpad.net/netplan/commit/?id=b6256ca911ba9762e04a9c7614dc226f4753ffb8"&gt;b6256ca911ba9762e04a9c7614dc226f4753ffb8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Wiki : &lt;a href="https://wiki.ubuntu.com/Netplan"&gt;wiki.ubuntu.com/Netplan&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.ubuntu.com/Netplan/Design"&gt;Netplan Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ManPage : &lt;a href="http://people.canonical.com/~mtrudel/netplan/"&gt;netplan&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git.launchpad.net/netplan/tree/doc/netplan.md"&gt;doc/netplan.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://insights.ubuntu.com/2017/07/10/netplan-by-default-in-17-10/"&gt;Netplan by default in 17.10&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Operation"></category><category term="network"></category><category term="config"></category><category term="networkd"></category><category term="netplan"></category><category term="ubuntu"></category></entry><entry><title>OpenStack에서 사용할 Windows imange 생성</title><link href="https://ujuc.github.io/2017/09/22/openstacke-seo_sa-yong-har_windows_imange_saeng-seong/" rel="alternate"></link><published>2017-09-22T17:18:08+09:00</published><updated>2017-09-22T17:18:08+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2017-09-22:/2017/09/22/openstacke-seo_sa-yong-har_windows_imange_saeng-seong/</id><summary type="html">&lt;p&gt;OpenStack에서 사용할 Windows 이미지를 생성해보자.&lt;/p&gt;</summary><content type="html">&lt;h2 id="_1"&gt;기본 준비사항&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu 16.04&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fedoraproject.org/wiki/Windows_Virtio_Drivers"&gt;VirtIO driver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloudbase.it/cloudbase-init"&gt;CloudBase init&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Windows CD&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="virt-manager"&gt;virt-manager 설치&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;-y&lt;span class="w"&gt; &lt;/span&gt;kvm&lt;span class="w"&gt; &lt;/span&gt;virt-manager
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;virt-manager 설치 후에 VM을 생성한다.&lt;/li&gt;
&lt;li&gt;이미지는 &lt;code&gt;qcow2&lt;/code&gt;로 만들어야된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="virtio"&gt;VirtIO 드라이버 설치&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;가장 중요하다.&lt;/li&gt;
&lt;li&gt;이 작업을 하지 않으면, OS 부팅할때 에러가 뜬다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;주의&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;하드로 사용할 이미지를 VirtIO로 설정해두면 설치는 모르겠는데 부팅이 되지 않는다.&lt;/li&gt;
&lt;li&gt;이것만큼은 바꾸지말고, 스토리지를 하나 더 만들어서 붙이면서 VirtIO로 설정해주고 드라이버를 설치해주도록 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="cloudbase-init"&gt;CloudBase init 설치&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Cloud init 파일을 만들어주는 프로그램이다.&lt;/li&gt;
&lt;li&gt;그냥 받아서 설치해주면 되는데 맨마지막 &lt;strong&gt;일반화&lt;/strong&gt; 라는 항목이 있는데.&lt;/li&gt;
&lt;li&gt;이것을 하게되면, Windows 첫 설치시 새로운 계정을 만들 수 있도록 이전 설정을 다날리는 작업을 해주기에 필요하다면 하고 아니라면 체크하지말고 설치를 하도록 하자.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_2"&gt;디바이스 드라이버 확인&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;혹시나 없는 드라이버가 있는지 확인하고 하도록 하자.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="glance-imange"&gt;Glance에 Imange 업로드&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Hoizon&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;주의&lt;/strong&gt; : &lt;code&gt;/var/tmp&lt;/code&gt; 에다가 올린다. 그러니 &lt;code&gt;/var&lt;/code&gt; 폴더에 용량이 있는지 확인하고 올리도록.&lt;/li&gt;
&lt;li&gt;편하게 올리자.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CLI&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--disk-format&lt;/code&gt;은 기본값이 &lt;code&gt;raw&lt;/code&gt;이다. 그렇기에 &lt;code&gt;qcow2&lt;/code&gt;로 변경해주고 올려야된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;openstack&lt;span class="w"&gt; &lt;/span&gt;image&lt;span class="w"&gt; &lt;/span&gt;create&lt;span class="w"&gt; &lt;/span&gt;--disk-format&lt;span class="w"&gt; &lt;/span&gt;qcow2&lt;span class="w"&gt; &lt;/span&gt;--file&lt;span class="w"&gt; &lt;/span&gt;windows.qcow2&lt;span class="w"&gt; &lt;/span&gt;windows
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="_3"&gt;참고&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;http://gotocloud.co.kr/?p=1575&lt;/li&gt;
&lt;li&gt;http://heavenkong.blogspot.kr/2014/04/create-windows7-virtual-machine-image.html&lt;/li&gt;
&lt;li&gt;https://fedoraproject.org/wiki/Windows_Virtio_Drivers&lt;/li&gt;
&lt;/ul&gt;</content><category term="Operation"></category><category term="openstack"></category><category term="nova"></category><category term="image"></category><category term="windows"></category></entry><entry><title>Yet Another Cron (yacron)</title><link href="https://ujuc.github.io/2017/07/21/yet_another_cron_(yacron)/" rel="alternate"></link><published>2017-07-21T13:17:58+09:00</published><updated>2017-07-21T13:17:58+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2017-07-21:/2017/07/21/yet_another_cron_(yacron)/</id><summary type="html">&lt;p&gt;Docker에서 쓰기 편하게 작성한 crontab 이란다.&lt;/p&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gjcarneiro/yacron"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;해당 프로젝트는 지금은 alpha 버전이라고 한다. 제대로된 기능들이 들어가기 시작하면 좋아질듯. 그리고 그때쯤되면 간단한 소개가 아닌 사용법에 대해서 작성해둬야겠다.&lt;/p&gt;
&lt;p&gt;우선은 Readme 파일 번역 수준&lt;/p&gt;
&lt;h2 id="_1"&gt;기능&lt;/h2&gt;
&lt;p&gt;가장 중요하다. 기능!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Crontab&amp;rdquo; 을 YAML로 작성이 가능하다.&lt;/li&gt;
&lt;li&gt;솔직히 YAML이 편한지는 모르겠다.&lt;/li&gt;
&lt;li&gt;cron job이 실패에 대한 부분을 제어할 수 있게 되어있다.&lt;/li&gt;
&lt;li&gt;실패시 해당 값을 재시도 할 수 있다.&lt;/li&gt;
&lt;li&gt;유연하게 구성 가능&lt;/li&gt;
&lt;li&gt;Docker, Kubernetes, 12 factor environments에 맞게 디자인이 되었다며&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_2"&gt;설치&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;python &amp;gt;= 3.5&lt;/li&gt;
&lt;li&gt;pip install yacron&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;사용&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yacron&lt;span class="w"&gt; &lt;/span&gt;-c&lt;span class="w"&gt; &lt;/span&gt;my-crontab.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;-c&lt;/code&gt;를 사용해서 구성파일이 있는 곳을 가리킨다.&lt;/p&gt;
&lt;h3 id="_4"&gt;기본 구성&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;매 5분마다 &lt;code&gt;echo "foobar"&lt;/code&gt;를 실행하는 job.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;jobs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;test-01&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;echo &amp;quot;foobar&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;/bin/bash&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;schedule&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;*/5&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;특정일 (2017/7/19)에만 5분마다 &lt;code&gt;echo "foobar"&lt;/code&gt;를 실행하는 job.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;jobs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;test-01&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;echo &amp;quot;foobar&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;schedule&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;minute&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;*/5&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;dayOfMonth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;19&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;month&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;7&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;year&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2017&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;dayOfWeek&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;*&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;특정 환경변수 값 설정&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;jobs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;test-01&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;echo &amp;quot;foobar&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;/bin/bash&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;schedule&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;*/5&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;PATH&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;/bin:/usr/bin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="_5"&gt;기본 값 지정&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;defaults&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;PATH&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;/bin:/usr/bin&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;/bin/bash&lt;/span&gt;
&lt;span class="nt"&gt;jobs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;test-01&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;echo &amp;quot;foobar&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;# run /bin/bash&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;schedule&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;*/5&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;test-02&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;echo &amp;quot;zbr&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;# run /bin/sh&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;/bin/sh&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;schedule&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;*/5&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="_6"&gt;리포트&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;job 이 실패했을때 알려준다. Sentry는 나중에 추가될 꺼임.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;test-01&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;echo &amp;quot;hello&amp;quot; 1&amp;gt;&amp;amp;2&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;sleep 1&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;exit 10&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;schedule&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;minute&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;*/2&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;captureStderr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;onFailure&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;report&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;sentry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;dsn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;example&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;mail&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;example@foo.com&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;example@bar.com&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;smtp_host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;127.0.0.1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;onFailure&lt;/code&gt; 부분이 job 실패시 작어하는 부분임.&lt;br&gt;
&lt;code&gt;captureStderr: true&lt;/code&gt; 부분은 stderr로 출력되는 데이터를 잡겠다는거 반대로는 &lt;code&gt;captureStdout: true&lt;/code&gt; 가 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;job 이 성공했을 경우, 알림은 &lt;code&gt;onSuccess&lt;/code&gt; 옵션을 추가한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;test-01&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;echo &amp;quot;hello world&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;schedule&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;minute&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;*/2&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;captureStdout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;onSuccess&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;report&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;mail&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;example@foo.com&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;example@bar.com&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;smtp_host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;127.0.0.1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="failure"&gt;failure 제어&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;실패 조건&lt;/li&gt;
&lt;li&gt;&lt;code&gt;producesStdout&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;default: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;stdout 출력이 있을 경우&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;producesStderr&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;stderr 출력이 있을 경우&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nonzeroReturn&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;반환값이 0이 아닌경우&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;failsWhen&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;producesStdout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;false&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;producesStderr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;nonzeroReturn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;retry&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;onFailure&lt;/code&gt; 안에다가 추가한다. 그리고 job 재시도도 완전히 실패했다면, &lt;code&gt;onPermanentFailure&lt;/code&gt; 옵션을 사용하여 리포트를 받는다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;test-01&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;echo &amp;quot;hello&amp;quot; 1&amp;gt;&amp;amp;2&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;sleep 1&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;exit 10&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;schedule&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;minute&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;*/10&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;captureStderr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;onFailure&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;report&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;mail&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;a@foo.com&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;a@bar.com&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;smtp_host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;127.0.0.1&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;retry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;maximumRetries&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;10&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;initialDelay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;maximumDelay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;30&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;backoffMultiplier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;onPermanentFailure&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;report&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;mail&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;a@foo.com&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;a@bar.com&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;smtp_host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;127.0.0.1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Operation"></category><category term="cron"></category><category term="yaml"></category><category term="scadule"></category><category term="docker"></category><category term="python"></category></entry><entry><title>Qualcomm Atheros 드라이버 설치 - 업글</title><link href="https://ujuc.github.io/2016/06/18/qualcomm_atheros_deu-ra-i-beo_seor-ci_-_eob-geur/" rel="alternate"></link><published>2016-06-18T02:13:00+09:00</published><updated>2016-06-18T02:13:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2016-06-18:/2016/06/18/qualcomm_atheros_deu-ra-i-beo_seor-ci_-_eob-geur/</id><summary type="html">&lt;p&gt;이전 글에서 설치한건 너무 느렸다. 그러나 정식 버전이 패키지로 들어가면서 조금 나아졌다.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://ujuc.github.io/2016/04/22/install-wireless-qualcomm-atheros-device-driver-on-lenovo-y700/"&gt;이전글&lt;/a&gt;로 글로 설치를 하고 썼으나 제대로된 펌웨어가 아닌지 설정을 해주고 설치했어야 했는데 그렇지 않아서 인지 1Mbps 로만 작동을 하였다.&lt;/p&gt;
&lt;p&gt;몇번 재설치 끝에 귀찮아서 다시 우분투를 설치중. &lt;a href="http://ask.ubuntu.com/questions/708061/aualcomm-atheros-device-168c0042-rev-30-wi-fi-driver-installation"&gt;스택오프플로 글&lt;/a&gt;이 업데이트가 되어있어 설치를 하였더니 원 속도까지 나오더라.&lt;/p&gt;
&lt;p&gt;그런데 이게 좀 그런게&amp;hellip;&lt;/p&gt;
&lt;p&gt;커널은 4.2이상. 16.04가 버전업되면서 커널도 업글이되어서 이건 넘어갔다.&lt;/p&gt;
&lt;p&gt;Qualcomm atheros 10k 드라이버가 들어있는 패키지는 &lt;code&gt;linux-firmware 1.158&lt;/code&gt;. 16.04에서 공식 지원하는 버전은 &lt;code&gt;1.157&lt;/code&gt;. 아마 6개월쯤 지나면 이것도 올라가겠지만 지금은 올라가지 않았으니. &lt;code&gt;1.158&lt;/code&gt;은 16.10에 추가될 패키지로 지금은 테스팅 버전이다. 이것을 가져다가 설치하면 된다.&lt;/p&gt;
&lt;p&gt;어짜피 기본 내용만 맞으면되니 &lt;code&gt;dpkg&lt;/code&gt;를 이용해서 설치해주면된다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget&lt;span class="w"&gt; &lt;/span&gt;http://mirrors.kernel.org/ubuntu/pool/main/l/linux-firmware/linux-firmware_1.158_all.deb
sudo&lt;span class="w"&gt; &lt;/span&gt;dpkg&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;linux-firmware_1.158_all.deb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;그리고 리붓해주면 손쉽게&amp;hellip; 설치가 가능하다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;참고: &lt;a href="http://packages.ubuntu.com/search?keywords=linux-firmware"&gt;Ubuntu package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Operation"></category><category term="lenovo"></category><category term="ubuntu"></category><category term="qualcomm"></category><category term="driver"></category><category term="wireless"></category><category term="16.04"></category></entry><entry><title>Select text of vim with set mouse=a enabled</title><link href="https://ujuc.github.io/2016/05/02/select-text-of-vim-with-set-mouse=a-enabled/" rel="alternate"></link><published>2016-05-02T23:27:00+09:00</published><updated>2016-05-02T23:27:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2016-05-02:/2016/05/02/select-text-of-vim-with-set-mouse=a-enabled/</id><summary type="html">&lt;p&gt;Vim사용에 있어서 마우스로 블록을 선택할 수 있도록 하였다. 그랬더니 다른 부분에서&lt;/p&gt;</summary><content type="html">&lt;p&gt;제대로된 선택을 할 수 없어 해당 내용을 찾아보았다.&lt;/p&gt;
&lt;p&gt;조금 쉽게 사용하려고 vim에 &lt;code&gt;mouse=a&lt;/code&gt; 설정을 하였다. 그것이 원흉이 었지만. 결국 찾았다!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/4608161/copy-text-out-of-vim-with-set-mouse-a-enabled"&gt;Copy text out of vim with set mouse=a enabled&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;리눅스에서는 &lt;code&gt;shift&lt;/code&gt;를 누르고 선택하는것이고, Mac에서는 &lt;code&gt;alt/option&lt;/code&gt;을 누르고 선택하면 된다.&lt;/p&gt;
&lt;p&gt;설정하나때문에 많은 삽질을 하는 사람들에게 남겨둠..&lt;br&gt;
그런데 설정은 tmux에서도 사용이가능하다.&lt;/p&gt;</content><category term="Operation"></category><category term="vim"></category><category term="mouse"></category><category term="copy"></category></entry><entry><title>Install wireless Qualcomm Atheros device driver on Lenovo Y700</title><link href="https://ujuc.github.io/2016/04/22/install-wireless-qualcomm-atheros-device-driver-on-lenovo-y700/" rel="alternate"></link><published>2016-04-22T22:59:00+09:00</published><updated>2016-04-22T22:59:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2016-04-22:/2016/04/22/install-wireless-qualcomm-atheros-device-driver-on-lenovo-y700/</id><summary type="html">&lt;p&gt;Qualcomm Atheros device driver on Lenovo Y700&lt;/p&gt;</summary><content type="html">&lt;p&gt;새롭게 컴퓨터를 구입했다. Lenovo ideapad Y700. 문제는 다른 컴퓨터들은 다른 모듈이 연결되어있는데. 이 컴만 그런건지 아니면 일정 라인이상만 그런건지 모르겠으나, Qualcomm Atheros가 연결되어있어 커널에서 wifi를 잡지못하는 문제가 발생했다.&lt;/p&gt;
&lt;p&gt;Ubuntu 16.04를 사용했음에도 불구하고 잡히지 않았던건, 커널버전 4.4.2이상이어야 해당 드라이버가 돌아가는데&amp;hellip; Ubuntu 16.04버전이 4.4.0&amp;hellip; 그래서 백포트하고, 드라이버를 옮겨주는것으로 해결.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ask.ubuntu.com/questions/708061/aualcomm-atheros-device-168c0042-rev-30-wi-fi-driver-installation"&gt;Qualcomm Atheros Device [168c:0042] (rev 30) Wi-Fi dirver installation&lt;/a&gt; 에서 말하는 작업을 설치해주면된다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;build-essential&lt;span class="w"&gt; &lt;/span&gt;linux-headers-&lt;span class="k"&gt;$(&lt;/span&gt;uname&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;git
&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;options ath10k_core skip_otp=y&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;tee&lt;span class="w"&gt; &lt;/span&gt;/etc/modprobe.d/ath10k_core.conf
wget&lt;span class="w"&gt; &lt;/span&gt;https://www.kernel.org/pub/linux/kernel/projects/backports/stable/v4.4.2/backports-4.4.2-1.tar.gz
tar&lt;span class="w"&gt; &lt;/span&gt;-zxvf&lt;span class="w"&gt; &lt;/span&gt;backports-4.4.2-1.tar.gz
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;backports-4.4.2-1
make&lt;span class="w"&gt; &lt;/span&gt;defconfig-wifi
make
sudo&lt;span class="w"&gt; &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;install
git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;https://github.com/kvalo/ath10k-firmware.git
sudo&lt;span class="w"&gt; &lt;/span&gt;cp&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;ath10k-firmware/QCA9377&lt;span class="w"&gt; &lt;/span&gt;/lib/firmware/ath10k/
sudo&lt;span class="w"&gt; &lt;/span&gt;cp&lt;span class="w"&gt; &lt;/span&gt;/lib/firmware/ath10k/QCA9377/hw1.0/firmware-5.bin_WLAN.TF.1.0-00267-1&lt;span class="w"&gt; &lt;/span&gt;/lib/firmware/ath10k/QCA9377/hw1.0/firmware-5.bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;그리고 하나더&amp;hellip;&lt;/p&gt;
&lt;p&gt;이건 위에껄 하고 안되면 추가해주도록 하자.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;blacklist&lt;span class="w"&gt; &lt;/span&gt;ideapad_laptop&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;tee&lt;span class="w"&gt; &lt;/span&gt;/etc/modprobe.d/blacklist.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Operation"></category><category term="lenovo"></category><category term="ubuntu"></category><category term="qualcomm"></category><category term="driver"></category><category term="wireless"></category><category term="16.04"></category></entry><entry><title>un~ 너는 뭐니?</title><link href="https://ujuc.github.io/2016/02/03/un-%EB%84%88%EB%8A%94-%EB%AD%90%EB%8B%88/" rel="alternate"></link><published>2016-02-03T00:02:00+09:00</published><updated>2016-02-03T00:02:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2016-02-03:/2016/02/03/un-너는-뭐니/</id><summary type="html">&lt;p&gt;언제부터인가 &lt;code&gt;un~&lt;/code&gt;으로 끝나는 파일이 생성되기 시작했다.&lt;/p&gt;</summary><content type="html">&lt;p&gt;모르겠다. 얼마 안됐다. 분명 이전에는 없었다. 그런데 언제부터인가. &lt;code&gt;.blabla.un~&lt;/code&gt;이라는 파일이 생성되기 시작했다. 그래서 찾았다.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://vimhelp.appspot.com/vim_faq.txt.html#faq-7.2"&gt;Vimhelp - faq-7.2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;수정하고 저장할때마다 &lt;code&gt;un~&lt;/code&gt; 접미사가 붙은 파일이 생간다는 이야기에 대한 내용이다. undo 기능을 사용하기위해서 vim에서 사용하는 파일이라고 한다. 그래서 열었더니 이상한 것들만 보여줬구나&amp;hellip;&lt;/p&gt;
&lt;p&gt;끄는 방법은 &lt;code&gt;:set noundofile&lt;/code&gt;을 처주거나 vimrc 파일에 넣어두면된다. 그러면 관련 파일들이 생성되지 않는다. 기존에 있던것들은 지워야겠지만&amp;hellip;&lt;/p&gt;</content><category term="Operation"></category><category term="vi"></category><category term="undo"></category><category term="vimrc"></category></entry><entry><title>unattended-upgrade 써보자</title><link href="https://ujuc.github.io/2016/01/29/unattended-upgrade-%EC%8D%A8%EB%B3%B4%EC%9E%90/" rel="alternate"></link><published>2016-01-29T22:35:00+09:00</published><updated>2016-01-29T22:35:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2016-01-29:/2016/01/29/unattended-upgrade-써보자/</id><summary type="html">&lt;p&gt;Ubuntu에서 보안 업데이트만 해보자.&lt;/p&gt;</summary><content type="html">&lt;p&gt;AWS에서 서비스를 Ubuntu로 하고 있는데, 요즘 보안 이슈들이 계속 올라오고 있고,&lt;br&gt;
그것에 대한 패치들도 많이 올라오고 있다. 사용하다가 서비스를 하고 있는 패키지들&lt;br&gt;
을 업데이트를 할 수는 없고 (서비스에서 사용하는 패키지의 경우엔.. 답이 없다. &lt;br&gt;
했다가 무슨 소릴 들을지 모르기도하고 어디서 문제가 발생했는지 모르기도 하고)&lt;br&gt;
보안 패치만큼은 하고 싶은데&amp;hellip;&lt;/p&gt;
&lt;p&gt;찾다보니 &lt;code&gt;unattended-upgrade&lt;/code&gt;를 사용해서 할 수가 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://manpages.ubuntu.com/manpages/lucid/man8/unattended-upgrade.8.html"&gt;Ubuntu manpage - unattended-upgrade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_1"&gt;사용법&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;unattended-upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;하게되면 알아서 보안 패치를 업그레이드하고 관련된 내용들을 &lt;code&gt;/var/log/unattended-upgrades.log&lt;/code&gt;에서 확인할 수 있다. 관련해서 추가적으로 만들어지는 내용들도 있고, 특정된 내용들을 구성할 수도 있다.&lt;/p&gt;
&lt;p&gt;만약 설치를 하지 않고, 어떠한 보안업데트가 되는지를 확인하고 싶다면, 아래와 같은 명령어를 사용하여 업그레이드를 하면된다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;unattended-upgrade&lt;span class="w"&gt; &lt;/span&gt;--dry-run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;왠만해서는 &lt;code&gt;--dry-run&lt;/code&gt; 옵션을 이용하여, 업그레이드를 할 수 있도록 확인해주면 되는데, 쉽지는 않지&amp;hellip;&lt;/p&gt;
&lt;p&gt;단점은 아직 1.0이 아니다. 그래서 그런지 외부로 출력되는게 없고, 전부 log파일로만 나온다&amp;hellip;&lt;/p&gt;</content><category term="Operation"></category><category term="ubuntu"></category><category term="manage"></category><category term="upgrade"></category><category term="security"></category><category term="command"></category></entry><entry><title>mysql 복제 오류</title><link href="https://ujuc.github.io/2016/01/28/mysql-%EB%B3%B5%EC%A0%9C-%EC%98%A4%EB%A5%98/" rel="alternate"></link><published>2016-01-28T01:10:00+09:00</published><updated>2016-01-28T01:10:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2016-01-28:/2016/01/28/mysql-복제-오류/</id><summary type="html">&lt;p&gt;오랜만에 RDS를 확인하러 들어갔더니&amp;hellip; error 이벤트가&amp;hellip; 딱!&lt;/p&gt;</summary><content type="html">&lt;p&gt;오랜만에 설정할 일이 있어서 RDS로 접속했더니&amp;hellip; RDS 인스턴스에서 error 이벤트가&lt;br&gt;
발생하고 있었다. 복제 기능을 사용하면서 신경안 쓸려고 하고 있었는데&amp;hellip; 여기서&lt;br&gt;
문제가&amp;hellip;&lt;/p&gt;
&lt;p&gt;RDS를 제외하고 관련 내용을 찾았더니, &lt;code&gt;my.cnf&lt;/code&gt; 파일에다가 뭘 넣고 수정하라고&lt;br&gt;
한다. 이렇게 할려면 RDS는 안된다. 명령어를 입력하라는 말도 있었다. 그런데&amp;hellip;&lt;br&gt;
이넘의 RDS에서 사용자는 말그대로 사용자일 뿐이다. 어떠한 database에 대한 수정을&lt;br&gt;
가할 수 있는 권한 자체가 없다. 그 사용자 이름을 &lt;code&gt;root&lt;/code&gt;로 했다고 해도 말이다.&lt;/p&gt;
&lt;p&gt;결국.. 찾다 돌아온 곳은.&lt;br&gt;
&lt;a href="http://docs.aws.amazon.com/ko_kr/AmazonRDS/latest/UserGuide/mysql_rds_skip_repl_error.html"&gt;Amazon Relational Database Service - mysql_rds_skip_repl_error&lt;/a&gt;&lt;br&gt;
부분. 그냥 접근해서 &lt;code&gt;CALL mysql.rds_skip_repl_error&lt;/code&gt; 입력하면 된단다.&lt;/p&gt;
&lt;p&gt;그런데 이건 mysql에서만 발생하는 오류인것같다. mariadb에서는 해당 오류가 없다.&lt;br&gt;
mariadb를 사용하는게 정신 건강에 좋은&amp;hellip;&lt;/p&gt;</content><category term="Operation"></category><category term="aws"></category><category term="rds"></category><category term="mysql"></category><category term="mariadb"></category><category term="replication"></category></entry><entry><title>CentOS 7 에서 zabbix-server 에러</title><link href="https://ujuc.github.io/2015/06/14/centos-7-%EC%97%90%EC%84%9C-zabbix-server-%EC%97%90%EB%9F%AC/" rel="alternate"></link><published>2015-06-14T22:30:00+09:00</published><updated>2015-06-14T22:30:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2015-06-14:/2015/06/14/centos-7-에서-zabbix-server-에러/</id><summary type="html">&lt;p class="first last"&gt;숙제를 늦게하고 있는데 잘안되서 찾다보니...&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2주전에 받은 숙제인데, 회사일이 바빠서 못하고 있다가 조금 시간이 있어서 설정하고 있는데.&lt;/p&gt;
&lt;p&gt;CentOS 7에다가 Zabbix를 올리고있다. VM에서 4시간동안 서비스가 제대로 안돌아서, 내 설정이 잘못되었나 하여, 설치하는 메뉴얼도 바꿔서 확인을 했는데도 안되길레 혹시나 로그에는 있나하여 들어갔더니 &lt;tt class="docutils literal"&gt;journal&lt;/tt&gt; 로 보여지는 것 말고도
&lt;tt class="docutils literal"&gt;/var/log/zabbix&lt;/tt&gt; 가 보여서 확인했더니..&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
using configuration file: /etc/zabbix/zabbix_server.conf
current database version (mandatory/optional): 02040000/02040000
required mandatory version: 02040000
listener failed: zbx_tcp_listen() fatal error: unable to serve on any address [[-]:10051]
Got signal [signal:11(SIGSEGV),reason:1,refaddr:0x18]. Crashing ...
&lt;/pre&gt;
&lt;p&gt;음? 서버를 못찾는다고..?? 뭔 말이지. 그래서 그냥 통짜로 복사 붙여넣기.&lt;/p&gt;
&lt;p&gt;구글에서 말하는 것들이 많은데 그 중에서 일본사람이 작성한 글. &lt;a class="reference external" href="http://qiita.com/_BSmile_/items/61932e45de5330190027"&gt;CentOS7.1 で zabbix-serverの起動が失敗する話とその解決方法&lt;/a&gt; 에서는 CV#-2014-0092는... gnutls에 패치가되었는데..
CVE-2014-8564는 적용이 안되서 그부분에 대한 내용을 추가하던지 수정을 해야된다고 한다.&lt;/p&gt;
&lt;p&gt;자세한건 구글 번역기로 사이트를 돌려서 보도록하자. 그렇다보니 여기서 추천하는 방법은 &lt;tt class="docutils literal"&gt;trousers&lt;/tt&gt; 를 업데이트 하는 방법을 추천하고 있다.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
$ sudo rpm -Uvh https://kojipkgs.fedoraproject.org/packages/trousers/0.3.11.2/3.fc20/x86_64/trousers-0.3.11.2-3.fc20.x86_64.rpm
Retrieving https://kojipkgs.fedoraproject.org/packages/trousers/0.3.11.2/3.fc20/x86_64/trousers-0.3.11.2-3.fc20.x86_64.rpm
Preparing...                          ################################# [100%]
Updating / installing...
1:trousers-0.3.11.2-3.fc20         ################################# [ 50%]
Cleaning up / removing...
2:trousers-0.3.11.2-3.el7          ################################# [100%

$ sudo systemctl start zabbix-server
&lt;/pre&gt;
&lt;p&gt;작동되는 것을 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;이 글은 &lt;strong&gt;CentOS 7.1.1503&lt;/strong&gt; 버전, &lt;strong&gt;Zabbix 2.4.5&lt;/strong&gt; 버전에서 확인되었고 테스트되었다. 이후 버전에서는 관련 버그가 잡히길.&lt;/p&gt;
</content><category term="Operation"></category><category term="zabbix"></category><category term="centos"></category></entry><entry><title>Odin is?</title><link href="https://ujuc.github.io/2015/04/10/odin-is/" rel="alternate"></link><published>2015-04-10T01:00:00+09:00</published><updated>2015-04-10T01:00:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2015-04-10:/2015/04/10/odin-is/</id><summary type="html">&lt;p class="first last"&gt;Parallels에서 이번에 새롭게 런칭한 Cloud 서비스 Odin.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Mirantis 블로그를 보다보니... Parallels의 이름이 올라오면서 &lt;a class="reference external" href="https://www.mirantis.com/blog/parallels-goes-open-source-wants-openstacks-help-penetrate-enterprise/"&gt;Parallels goes open
source, wants OpenStack's help to penetrate enterprise&lt;/a&gt; 라는 글이 올라왔다.&lt;/p&gt;
&lt;p&gt;내용은 간단하다. Pareallels에서 기업용으로 &lt;a class="reference external" href="http://www.odin.com/"&gt;Odin&lt;/a&gt; 이라는 서비스를 런칭했는데,
자사의 하이퍼 바이저의 개발을 중지하고 KVM을 사용, OpenStack의 도움으로
컨테이너를 이용하는 서비스 개발에 집중을 하겠다는 소식...&lt;/p&gt;
&lt;p&gt;뭐 서비스 측이랑 이야기가 조금 다른 부분이 있긴하다만... Parallels가 OpenStack
기업 멤버로 등록 Odin으로 등록되어있다. 골드맴버로 들어올려는걸 파운데이션에서
거절했다고...&lt;/p&gt;
&lt;p&gt;그냥 푸념이지만... 분명 많은 곳에서 하고 있는 것같은데... 파운데이션 후원사
목록에는 아무도 없다는게... 좀 그래...&lt;/p&gt;
&lt;p&gt;여는 글은 Odin으로 했으나 맺는 글은... 오픈소스 프로젝트 기부에대한 푸념으로...&lt;/p&gt;
</content><category term="Operation"></category><category term="openstack"></category><category term="cloud"></category><category term="parallels"></category></entry><entry><title>git-ftp로 ftp 클라이언트를!</title><link href="https://ujuc.github.io/2015/03/04/git-ftp/" rel="alternate"></link><published>2015-03-04T00:00:00+09:00</published><updated>2015-04-02T00:48:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2015-03-04:/2015/03/04/git-ftp/</id><summary type="html">&lt;p class="first last"&gt;ftp만 열려있고 ssh가 안되는 웹 호스팅에서 작업하는 개발자를 위해...&lt;/p&gt;
</summary><content type="html">&lt;p&gt;백수 3개월 들어가지는지라 깃 배회중... 누군가 스타를 누른 &lt;a class="reference external" href="https://github.com/git-ftp/git-ftp"&gt;git-ftp&lt;/a&gt;. git을
이용해서 FTP 클라잉너트를 만들었다.&lt;/p&gt;
&lt;p&gt;뭔짓이지...&lt;/p&gt;
&lt;p&gt;암튼... 만든 이유가 FTP만 지원하는 웹호스팅 때문에 만들었다고 &lt;a class="footnote-reference" href="#footnote-1" id="footnote-reference-1"&gt;[1]&lt;/a&gt;... 역시 다른
구멍을 파는 사람들이 있구나...&lt;/p&gt;
&lt;p&gt;변화점까지 확인할 수 있다는건 git의 장점을 가져왔구나.&lt;/p&gt;
&lt;div class="section" id="section-1"&gt;
&lt;h2&gt;&lt;a class="reference external" href="https://github.com/git-ftp/git-ftp/blob/develop/INSTALL.md"&gt;설치&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;기본 설치&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code bash literal-block"&gt;
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;https://github.com/git-ftp/git-ftp.git&lt;span class="w"&gt;
&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;git-ftp&lt;span class="w"&gt;
&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;tag&lt;span class="w"&gt;
&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;tag&amp;gt;&lt;span class="w"&gt;
&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;install
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;업그레이드의 경우&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code bash literal-block"&gt;
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt;
&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;tag&lt;span class="w"&gt;
&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;tag&amp;gt;&lt;span class="w"&gt;
&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;install
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Mac OS X&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code bash literal-block"&gt;
$&lt;span class="w"&gt; &lt;/span&gt;brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt;
&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;curl&lt;span class="w"&gt; &lt;/span&gt;--with-ssl&lt;span class="w"&gt; &lt;/span&gt;--with-libssh2&lt;span class="w"&gt;
&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;git-ftp
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;curl&lt;/tt&gt; 을 기본으로 설치했는데 &lt;tt class="docutils literal"&gt;ssl&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;libssh2&lt;/tt&gt; 를 사용할 수 있도록 설정이
필요한 갑다.&lt;/li&gt;
&lt;li&gt;git이 &lt;tt class="docutils literal"&gt;ssl&lt;/tt&gt; 을 사용하긴 한다만...&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="section-2"&gt;
&lt;h2&gt;사용법&lt;/h2&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="c1"&gt;# Pushing for the fist time
&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;ftp&lt;span class="w"&gt; &lt;/span&gt;init&lt;span class="w"&gt; &lt;/span&gt;-u&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;user&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;-P&lt;span class="w"&gt; &lt;/span&gt;ftp://host.example.com/public_html&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c1"&gt;# using
&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;ftp&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;-u&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;user&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;-P&lt;span class="w"&gt; &lt;/span&gt;ftp://host.example.com/public_html
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;더 자세한 내용은 &lt;a class="reference external" href="https://gitub.com/git-ftp/git-ftp/blob/develop/man/git-ftp.1.md"&gt;man page&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="section-3"&gt;
&lt;h2&gt;제한 사항&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;윈도우와 OS X에서는 테스트를 많이 안했으니 관련된 버그가 있으면 말해 줄 것.&lt;/li&gt;
&lt;li&gt;배포 도구로 만들어지지 않아서... 커밋이나 체크 아웃 같은건 알아서... 조심히...&lt;/li&gt;
&lt;/ul&gt;
&lt;table class="docutils footnote" frame="void" id="footnote-1" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#footnote-reference-1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="https://github.com/git-ftp/git-ftp/blob/develop/README.md#about"&gt;https://github.com/git-ftp/git-ftp/blob/develop/README.md#about&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</content><category term="Operation"></category><category term="git"></category><category term="ftp"></category><category term="shell"></category><category term="cli"></category><category term="bash"></category></entry><entry><title>Uubntu에서 Nabi 툴바를 tray에 넣기</title><link href="https://ujuc.github.io/2014/11/09/nabi-toolbar-in-tray-on-ubuntu/" rel="alternate"></link><published>2014-11-09T00:44:00+09:00</published><updated>2015-04-12T14:12:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2014-11-09:/2014/11/09/nabi-toolbar-in-tray-on-ubuntu/</id><summary type="html">&lt;p class="first last"&gt;Ubuntu에서 nabi를 입력기로 사용한다. 그런데 언제부터인가. tray로
들어가지 않는 문제가 발생했다. 거의 업데이트가 안되고 있어서
그런것같기도 하지만, 그것에 대한 내용이다.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;오랜만에 Ubuntu를 설치하고 &lt;tt class="docutils literal"&gt;ibus&lt;/tt&gt; 가 조금 불편할뻔하다가...
쓰던거 쓰자해서 &lt;tt class="docutils literal"&gt;nabi&lt;/tt&gt; 를 설치했는데.. 이놈의 tray에 들어갈려고 하지 않는다.&lt;/p&gt;
&lt;p&gt;그래서 조금 검색을 했더니...
&lt;tt class="docutils literal"&gt;gsettings get com.canonical.Unity.Panel &lt;span class="pre"&gt;systray-whitelist&lt;/span&gt;&lt;/tt&gt; 라는 걸로 추가를
해줘야한다고 하는데... 이넘은 14.10에는 없다. 조금더 찾아보니, 13.04부터는 아예
빠져있었다.&lt;/p&gt;
&lt;p&gt;다시 검색어를 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;systray-whitelist&lt;/span&gt;&lt;/tt&gt; 로 검색중 &lt;strong&gt;Web UPD8&lt;/strong&gt; 에 올라온 글을 확인.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.webupd8.org/2013/05/how-to-get-systray-whitelist-back-in.html"&gt;How to whitelist systray apps in ubuntu 14.04 or 14.10(W/unity)&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;나같은 경우에는  14.10을 설치했으니.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code bash literal-block"&gt;
sudo&lt;span class="w"&gt; &lt;/span&gt;apt-add-repository&lt;span class="w"&gt; &lt;/span&gt;ppa:guran/systray-utopic&lt;span class="w"&gt;
&lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;update&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;upgrade
&lt;/pre&gt;
&lt;p&gt;그리고 &lt;tt class="docutils literal"&gt;Alt + F2&lt;/tt&gt; 를 눌러 &lt;tt class="docutils literal"&gt;unity&lt;/tt&gt; 를 찾아 클릭해주면 알아서 unity가 재시작되면서
nabi가 트레이에 들어가게 된다.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;덧. 아래에보면 관련 ppa를 삭제하는 방법이 나오는데 따로 패키지를 설치할
필요없이 아래의 명령어로 삭제가 가능하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code bash literal-block"&gt;
sudo&lt;span class="w"&gt; &lt;/span&gt;apt-add-repository&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;ppa:guran/systray-utopic&lt;span class="w"&gt;
&lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;update&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;autoremove
&lt;/pre&gt;
</content><category term="Operation"></category><category term="linux"></category><category term="ubuntu"></category><category term="nabi"></category><category term="setting"></category></entry><entry><title>SkwiSSH 설치 및 구성</title><link href="https://ujuc.github.io/2014/02/28/skwissh-install-n-config/" rel="alternate"></link><published>2014-02-28T21:46:00+09:00</published><updated>2016-03-03T22:08:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2014-02-28:/2014/02/28/skwissh-install-n-config/</id><summary type="html">&lt;p&gt;Django App으로 ssh를 이용하여 서버 모니터링이 가능하다. 개발이 멈춘지 너무 오래됐다.&lt;/p&gt;</summary><content type="html">&lt;h1 id="skwissh"&gt;&lt;a href="https://github.com/rsaikali/django-skwissh"&gt;SkwiSSH&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;오늘 Facebook에 공유가된 Monitoring Tool. Django에서 App으로 돌릴 수 있고, 참 깔ㄹ끔하기에 회사에서 서버 볼 때 사용할까하여 구성해봤다.&lt;/p&gt;
&lt;p&gt;코드로는 Django v1.5와  v1.5.1을 지원한다고 작성해놨는데 &lt;code&gt;setup.py&lt;/code&gt;를 사용하여 구성하게 되면 Django v1.6을 설치하라며 에러문구가 발생한다.&lt;/p&gt;
&lt;p&gt;그리고 외부 서버를 추가하기 위해서 &lt;code&gt;server_ip:22&lt;/code&gt;를 입력해줘야지 외부 서버에 ssh로 접근하여 값들을 읽어오게 된다.&lt;/p&gt;
&lt;p&gt;아직은 부족한 점이 많다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sensor(명령어를 날려서 값을 받아오는 worker를 의미한다.) 추가하고 변경하려면 변경사항이 적용이 안되는 현상.&lt;/li&gt;
&lt;li&gt;Sensor들의 정렬을 임의로 할 수 없다는 것. (오름차순으로 구성되어있다.)&lt;/li&gt;
&lt;li&gt;기본 명령어 날리는게 1분간격으로 수정할만한 탭이 안보인다.&lt;/li&gt;
&lt;li&gt;기본 DB로 SQLite3 파일을 사용하는데 점점 커지는 모습을 확인 할 수 있다.&lt;/li&gt;
&lt;li&gt;bash를 사용할 줄 안다면 정말 쉽게 사용이 가능하다.&lt;ul&gt;
&lt;li&gt;명령을 SSH로 날리기에 그쪽 서버 콘솔로 리턴값을 넘길 수 있는 프로그램이라면 어떻게든 사용하면된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이 글에서는 Sensor에 명령어와 파셔 세팅은 작성하지 않았다.&lt;/p&gt;
&lt;h2 id="_1"&gt;기본 구성&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;OS: Ubuntu 12.04.4 server&lt;/li&gt;
&lt;li&gt;Install Package&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;python-pip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="_2"&gt;패키지 설치&lt;/h3&gt;
&lt;h4 id="django"&gt;Django 설치&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;isntall&lt;span class="w"&gt; &lt;/span&gt;Django
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id="django-skwissh"&gt;Django-skwissh 설치&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;buid-essential&lt;span class="w"&gt; &lt;/span&gt;python-dev
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;https://github.com/rsaikali/django-skwissh.git
$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;django-skwissh
$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;setup.py&lt;span class="w"&gt; &lt;/span&gt;install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="django_1"&gt;Django 설정&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;django-admin.py&lt;span class="w"&gt; &lt;/span&gt;startproject&lt;span class="w"&gt; &lt;/span&gt;mysite
$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;mysite
$&lt;span class="w"&gt; &lt;/span&gt;vi&lt;span class="w"&gt; &lt;/span&gt;mysql/settings.py

&lt;span class="nv"&gt;INSTALL_APPS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;kronos&amp;#39;&lt;/span&gt;,
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;skwissh&amp;#39;&lt;/span&gt;,
&lt;span class="o"&gt;)&lt;/span&gt;

$&lt;span class="w"&gt; &lt;/span&gt;vi&lt;span class="w"&gt; &lt;/span&gt;mysite/urls.py

&lt;span class="c1"&gt;# Skwissh&lt;/span&gt;
url&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;skwissh&amp;#39;&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;include&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;skwissh.urls&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;,
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;데이터 베이스 설정&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;manage.p&lt;span class="w"&gt; &lt;/span&gt;syncdb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Skwissh 테스트 설치&lt;/li&gt;
&lt;li&gt;이작업을 하면 crontab에 테스크가 등록된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;manage.py&lt;span class="w"&gt; &lt;/span&gt;installtask
&lt;span class="c1"&gt;# crontab에 등록되었는지 확인&lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;crontab&lt;span class="w"&gt; &lt;/span&gt;-l
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Django 서버 작동&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;mange.py&lt;span class="w"&gt; &lt;/span&gt;runserver&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:8000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="_3"&gt;참고 페이지&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rsaikali/django-skwissh"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://rsaikali.github.io/django-skwissh/"&gt;Gitpage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Operation"></category><category term="python"></category><category term="monitoring"></category><category term="ssh"></category><category term="django"></category></entry><entry><title>KVM on ARM project</title><link href="https://ujuc.github.io/2013/10/14/kvm_on_arm_project/" rel="alternate"></link><published>2013-10-14T11:29:17+09:00</published><updated>2018-03-11T11:29:17+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2013-10-14:/2013/10/14/kvm_on_arm_project/</id><summary type="html">&lt;p&gt;ARM 칩에서 KVM을 사용하는 프로젝트가 있어서 정리한다.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://systems.cs.columbia.edu/projects/kvm-arm/"&gt;Project homepage&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ARM 프로세스에서 지원하는 Virtualization을 이용하여 KVM을 올리는 프로젝트 Cortex-15A에서 작업한 내용이 있음. ARM Core는 ARMv7.&lt;/p&gt;
&lt;p&gt;Virtual Open Systems is an innovative, agile and dynamic start-up company operating in embedded Linux, Android, SMP Virtualization and Cloud Computing. 이란다.&lt;/p&gt;
&lt;p&gt;얼마전에 ARMv8에서 KVM을 사용하는 방법도 추가해놨다. (4월에 추가되고 7월에 업데이트 됨.)&lt;/p&gt;
&lt;p&gt;삼성 Exynos 5250를 사용하는 Arndale Board에서 KVM을 이용하여 올렸는데 보면 QEMU가 작동하는 것을 볼 수 있다. 그러나 확실히 속도는 빠르다. 몇배속으로 돌린것인지 아니면 내가 봐왔던 ARM이 느렸던건지..&lt;/p&gt;
&lt;p&gt;&lt;a href="http://youtu.be/yB8bdA2hjYg"&gt;Youtube 동영상&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;덧. 2013.01.11에 작성한 글을 옮기면서 변경사항들이 있어 추가함.&lt;/p&gt;</content><category term="Operation"></category><category term="arm"></category><category term="kvm"></category><category term="hypervisor"></category></entry></feed>